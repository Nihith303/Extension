{"version":3,"file":"js/popup.js","mappings":"uBAAIA,ECCAC,EADAC,E,0CCGJ,MA+CA,EA/CsBC,IAAA,IAAC,UAAEC,EAAS,aAAEC,GAAcF,EAAA,OAChDG,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,UACEC,UAAW,eAA4B,YAAdH,EAA0B,SAAW,IAC9DI,QAASA,IAAMH,EAAa,YAC7B,WAGDC,EAAAA,cAAA,UACEC,UAAW,eAA4B,UAAdH,EAAwB,SAAW,IAC5DI,QAASA,IAAMH,EAAa,UAC7B,SAGDC,EAAAA,cAAA,UACEC,UAAW,eAA4B,WAAdH,EAAyB,SAAW,IAC7DI,QAASA,IAAMH,EAAa,WAC7B,UAGDC,EAAAA,cAAA,UACEC,UAAW,eAA4B,YAAdH,EAA0B,SAAW,IAC9DI,QAASA,IAAMH,EAAa,YAC7B,WAGDC,EAAAA,cAAA,UACEC,UAAW,eAA4B,WAAdH,EAAyB,SAAW,IAC7DI,QAASA,IAAMH,EAAa,WAC7B,UAGDC,EAAAA,cAAA,UACEC,UAAW,eAA4B,kBAAdH,EAAgC,SAAW,IACpEI,QAASA,IAAMH,EAAa,kBAC7B,aAGDC,EAAAA,cAAA,UACEC,UAAW,eAA4B,aAAdH,EAA2B,SAAW,IAC/DI,QAASA,IAAMH,EAAa,aAC7B,YAGG,EC/CKI,EAAmBC,UAC9B,MAAOC,SAAaC,OAAOC,KAAKC,MAAM,CACpCC,QAAQ,EACRC,eAAe,IAEXC,EAAQN,EAAIO,GAElB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BT,OAAOU,UAAUC,cACf,CACEC,OAAQ,CAAEP,SACVQ,KAAMA,KACJ,MAEMC,EACJC,SAASC,cAAc,wBAAwBC,SAC/C,gBACIC,EACJH,SAASC,cAAc,oCACnBC,SAAW,gBACXE,EAAOJ,SAASK,gBAAgBD,MAAQ,gBAE9C,MAAO,CACLE,MAAON,SAASM,MAChBC,YAXAP,SAASC,cAAc,6BAAyBC,SAWZ,gBACpCM,UACER,SAASC,cAAc,0BAA0BQ,MACjD,gBACFC,OAAQX,EACRY,QAASR,EACTC,KAAMA,EACNQ,IAAKC,OAAOC,SAASL,KACtB,IAGLjC,IAAc,IAAZuC,GAAOvC,EACHuC,GAAUA,EAAOA,OACnBtB,EAAQsB,EAAOA,QAEfrB,EACE,IAAIsB,MACF,iEAGN,GAEH,GACD,EC3CEC,EAAUzC,IAAA,IAAC,MAAE0C,EAAK,MAAEC,EAAK,MAAEC,EAAK,QAAEC,GAAS7C,EAAA,OAC/CG,EAAAA,cAAA,KAAGC,UAAWwC,EAAQ,QAAU,WAC9BzC,EAAAA,cAAA,YACEA,EAAAA,cAAA,cAASuC,IAEXvC,EAAAA,cAAA,YAAM,KACNA,EAAAA,cAAA,YAAM,IAAEwC,GACPC,EACCzC,EAAAA,cAAA,QAAMC,UAAU,gBAAe,MAE/BD,EAAAA,cAAA,QAAMC,UAAU,aAAa0B,MAAOe,GAAS,KAI7C,EAGAC,EAAc,CAClBC,MAAO,qEACPC,YACE,oEACFC,UACE,2IACFC,SACE,+MACF,cACE,uJACF,gBACE,mJA6FJ,EA1FgBC,KACd,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAAC,IAC3BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAqCnC,OAnCAK,EAAAA,EAAAA,YAAU,KACQpD,WACd,IACE,MAAMqD,QAAatD,IACnB+C,EAAQO,EACV,CAAE,MAAOC,GACPH,EAASG,EAAIhB,QACf,CAAE,QACAW,GAAW,EACb,GAGFM,EAAS,GACR,IAuBD3D,EAAAA,cAAA,OAAKC,UAAU,wBACZmD,EACCpD,EAAAA,cAAA,KAAGC,UAAU,eACXqD,EACFtD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,SAAIsD,IAGNtD,EAAAA,cAAA,OAAKC,UAAU,QACZ2D,OAAOC,QAAQ,CACdjB,MAAOK,EAAKtB,MACZkB,YAAaI,EAAKrB,YAClBkB,UAAWG,EAAKpB,UAChBiC,IAAKb,EAAKhB,IACVc,SAAUE,EAAKxB,KACf,cAAewB,EAAKlB,OACpB,gBAAiBkB,EAAKjB,UACrB+B,KAAIC,IAAoB,IAAlBzB,EAAOC,GAAMwB,EACpB,MAAM,MAAEvB,EAAK,QAAEC,GAvCHuB,EAAC1B,EAAOC,KAC5B,OAAQD,GACN,IAAK,QACH,MAAO,CACLE,MAAOD,GAASA,EAAM0B,QAAU,IAAM1B,EAAM0B,QAAU,GACtDxB,QAASC,EAAYC,OAEzB,IAAK,cACH,MAAO,CACLH,MAAOD,GAASA,EAAM0B,QAAU,KAAO1B,EAAM0B,QAAU,IACvDxB,QAASC,EAAYE,aAEzB,QACE,MAAO,CACLJ,MAAOD,GAAmB,kBAAVA,EAChBE,QAASC,EAAYJ,IAAU,6BAErC,EAsBmC0B,CAAc1B,EAAOC,GAChD,OACExC,EAAAA,cAACsC,EAAO,CACN6B,IAAK5B,EACLA,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,QAASA,GACT,KAKTO,EAAKhB,KACJjC,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,UACEE,QAASA,IAAMgC,OAAOkC,KAAK,GAAGnB,EAAKhB,kBAAmB,WACvD,WAGDjC,EAAAA,cAAA,UACEE,QAASA,IAAMgC,OAAOkC,KAAK,GAAGnB,EAAKhB,iBAAkB,WACtD,eAKD,ECzHGoC,EAAajE,UACxB,MAAOC,SAAaC,OAAOC,KAAKC,MAAM,CACpCC,QAAQ,EACRC,eAAe,IAEXC,EAAQN,EAAIO,GAElB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BT,OAAOU,UAAUC,cACf,CACEC,OAAQ,CAAEP,SACVQ,KAAMA,KACJ,MAAMmD,EAAQC,MAAMC,KAAKnD,SAASoD,iBAAiB,MAAMV,KAAKW,IAAC,CAC7D5C,KAAM4C,EAAE5C,MAAQ,KAChBH,MAAO+C,EAAEC,YAAYC,QAAU,eAG3B3C,EAAMC,OAAOC,SAAS0C,OAEtBC,EAAWR,EAAMS,QAAQC,GAASA,EAAKlD,MAAMmD,WAAWhD,KACxDiD,EAAWZ,EAAMS,QACpBC,GAASA,EAAKlD,OAASkD,EAAKlD,KAAKmD,WAAWhD,KAEzCkD,EAAcb,EAAMS,QAAQC,IAAUA,EAAKlD,OAC3CsD,EAAS,IAAI,IAAIC,IAAIf,EAAMP,KAAKiB,GAASA,EAAKlD,SAAQiC,KACzDjC,IAAI,CACHA,OACAH,MACE2C,EAAMgB,MAAMN,GAASA,EAAKlD,OAASA,KAAOH,OAAS,eAIzD,MAAO,CACL4D,MAAOjB,EACPQ,WACAI,WACAC,cACAC,SACD,IAGLvF,IAAc,IAAZuC,GAAOvC,EACHuC,GAAUA,EAAOA,OACnBtB,EAAQsB,EAAOA,QAEfrB,EACE,IAAIsB,MACF,6DAGN,GAEH,GACD,EC6FJ,EA9IcmD,KACZ,MAAOlB,EAAOmB,IAAYtC,EAAAA,EAAAA,UAAS,KAC5BuC,EAAMC,IAAWxC,EAAAA,EAAAA,UAAS,UAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAEnCK,EAAAA,EAAAA,YAAU,KACSpD,WACf,IACE,MAAMqD,QAAaY,IACnBoB,EAAShC,EACX,CAAE,MAAOC,GACPH,EAASG,EAAIhB,QACf,CAAE,QACAW,GAAW,EACb,GAGFuC,EAAU,GACT,IAEH,MAqBMC,EAAkBA,CAACtD,EAAOuD,KAC9B,MAAMC,EAAQzB,EAAMwB,IAAW5B,QAAU,EACzC,OACElE,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,YAAOuC,GACPvC,EAAAA,cAAA,QAAMY,GAAiB,gBAAbkF,GAA8BC,EAAQ,EAAI,WAAa,IAC9DA,GAEC,EAGJC,EAAqBA,CAACzD,EAAOuD,IACjC9F,EAAAA,cAAA,UACEC,UAAWyF,IAASI,EAAW,SAAW,GAC1C5F,QAASA,IAAMyF,EAAQG,IAEtBvD,GAIL,OACEvC,EAAAA,cAAA,OAAKC,UAAU,wBACZmD,EACCpD,EAAAA,cAAA,KAAGiG,MAAM,eACP3C,EACFtD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,SAAIsD,IAGNtD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKC,UAAU,eACZ4F,EAAgB,QAAS,SACzBA,EAAgB,WAAY,YAC5BA,EAAgB,WAAY,YAC5BA,EAAgB,eAAgB,eAChCA,EAAgB,SAAU,WAG7B7F,EAAAA,cAAA,OAAKC,UAAU,kBACZ+F,EAAmB,QAAS,SAC5BA,EAAmB,WAAY,YAC/BA,EAAmB,WAAY,YAC/BA,EAAmB,UAAW,eAC9BA,EAAmB,SAAU,UAC9BhG,EAAAA,cAAA,UAAQC,UAAU,qBAAqBC,QAjE7BgG,KAClB,MAAMC,EAAU,GAChBA,EAAQC,KAAK,4BACb,CAAC,WAAY,WAAY,eAAeC,SAASP,IAC/CxB,EAAMwB,IAAWO,SAAQxG,IAAqB,IAApB,KAAEiC,EAAI,MAAEH,GAAO9B,EACvC,MAAMkG,EACJzB,EAAMiB,OAAOR,QAAQC,GAASA,EAAKlD,OAASA,IAAMoC,QAAU,EAC9DiC,EAAQC,KACN,IAAItE,GAAQ,eAAeH,OAAWmE,OAAcC,KACrD,GACD,IAEJ,MAAMO,EAAaH,EAAQI,KAAK,MAC1BC,EAAO,IAAIC,KAAK,CAACH,GAAa,CAAEI,KAAM,aACtCzE,EAAM6B,IAAI6C,gBAAgBH,GAC1B9B,EAAIrD,SAASuF,cAAc,KACjClC,EAAE5C,KAAOG,EACTyC,EAAEmC,SAAW,YACbnC,EAAEoC,QACFhD,IAAIiD,gBAAgB9E,EAAI,GA8C6C,WAK/DjC,EAAAA,cAAA,OAAKC,UAAU,eACZqE,EAAMoB,IAAOxB,OAAS,EACrBI,EAAMoB,GAAM3B,KAAI,CAACiB,EAAMgC,IACrBhH,EAAAA,cAACA,EAAAA,SAAc,CAACmE,IAAK6C,GACnBhH,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,QACPgF,EAAKlD,KACJ9B,EAAAA,cAAA,KACE8B,KAAMkD,EAAKlD,KACX7B,UAAU,WACViB,OAAO,SACP+F,IAAI,uBAEHjC,EAAKlD,MAGR9B,EAAAA,cAAA,QAAMY,GAAG,YAAW,YAGxBZ,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,UAAgB,IACxBA,EAAAA,cAAA,QAAMY,GAAmB,aAAfoE,EAAKrD,MAAuB,WAAa,IAChDqD,EAAKrD,SAIZ3B,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,UAAgB,IACvBsE,EAAMiB,OAAOR,QAAQmC,GAAMA,EAAEpF,OAASkD,EAAKlD,OACzCoC,QAAU,OAMrBlE,EAAAA,cAAA,OAAKC,UAAU,WAAWW,GAAG,YAC3BZ,EAAAA,cAAA,SAAG,4BACwBA,EAAAA,cAAA,WAAM,aAEjCA,EAAAA,cAAA,OAAKmH,IAAI,qBAAqBC,IAAI,iBAMxC,EC9IGC,EAAcjH,SAClB,IAAIS,SAAQ,CAACC,EAASC,KAC3BT,OAAOU,UAAUC,cACf,CACEC,OAAQ,CAAEP,SACVQ,KAAMA,KACJ,MAAMmG,EAAS/C,MAAMC,KAAKnD,SAASoD,iBAAiB,QAAQV,KACzDwD,IAAG,CACFJ,IAAKI,EAAIJ,KAAO,SAChBC,IAAKG,EAAIH,IAAIxC,QAAU,SACvB4C,SAAUD,EAAIE,UAAY,iBAC1BC,MAAOH,EAAII,cAAgB,MAC3BC,OAAQL,EAAIM,eAAiB,UAI3BC,EAAQR,EAAOvC,QAAQwC,GAAoB,WAAZA,EAAIH,MACnCW,EAAaT,EAAOvC,QACvBwC,GAAyB,mBAAjBA,EAAIC,WAETQ,EAAQV,EAAOvC,QAAQwC,GAAoB,WAAZA,EAAIJ,MAEzC,MAAO,CACL5B,MAAO+B,EACPQ,QACAC,aACAC,QACD,IAGLnI,IAAc,IAAZuC,GAAOvC,EACHuC,GAAQA,OACVtB,EAAQsB,EAAOA,QAEfrB,EACE,IAAIsB,MACF,8DAGN,GAEH,ICgIL,EArKc4F,KACZ,MAAOX,EAAQY,IAAa/E,EAAAA,EAAAA,UAAS,CACnCoC,MAAO,GACPuC,MAAO,GACPC,WAAY,GACZC,MAAO,MAEFtC,EAAMC,IAAWxC,EAAAA,EAAAA,UAAS,UAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAEnCK,EAAAA,EAAAA,YAAU,KACepD,WACrB,IACE,MAAOC,SAAaC,OAAOC,KAAKC,MAAM,CACpCC,QAAQ,EACRC,eAAe,IAEXC,EAAQN,EAAIO,GACZuH,QAAmBd,EAAY1G,GACrCuH,EAAUC,EACZ,CAAE,MAAOzE,GACPH,EAASG,EAAIhB,QACf,CAAE,QACAW,GAAW,EACb,GAGF+E,EAAgB,GACf,IAEH,MAkBMC,EAAoBC,IACxB,MAAMC,EAASrG,OAAOkC,OAClBmE,IACFA,EAAOlH,SAASmH,KAAKC,UAAY,kFAEjBH,8GACDA,gBAAqBA,EAAOI,MAAM,KAAKC,6NAMxD,EAGIC,EAAkBA,CAACrG,EAAOwD,EAAOD,IAEnC9F,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,YAAOuC,GACPvC,EAAAA,cAAA,QAAMY,GAAiB,UAAbkF,GAAwBC,EAAQ,EAAI,WAAa,IACxDA,GAAS,IAMlB,OACE/F,EAAAA,cAAA,OAAKC,UAAU,wBACZmD,EACCpD,EAAAA,cAAA,KAAGiG,MAAM,eACP3C,EACFtD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,SAAIsD,IAGNtD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKC,UAAU,gBACZ2I,EAAgB,eAAgBtB,EAAO/B,OAAOrB,OAAQ,SACtD0E,EAAgB,cAAetB,EAAOQ,OAAO5D,OAAQ,SACrD0E,EACC,sBACAtB,EAAOS,YAAY7D,OACnB,cAED0E,EAAgB,cAAetB,EAAOU,OAAO9D,OAAQ,UAExDlE,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,UAAQE,QAASA,IAAMyF,EAAQ,UAAU,SACzC3F,EAAAA,cAAA,UAAQE,QAASA,IAAMyF,EAAQ,UAAU,UACzC3F,EAAAA,cAAA,UAAQE,QAASA,IAAMyF,EAAQ,eAAe,kBAG9C3F,EAAAA,cAAA,UAAQE,QAASA,IAAMyF,EAAQ,UAAU,UACzC3F,EAAAA,cAAA,UAAQC,UAAU,gBAAgBC,QAvE1B2I,KAChB,MAAMC,EAAUxB,EAAO5B,GACpB3B,KACEwD,GACC,GAAGA,EAAIJ,OAAOI,EAAIH,OAAOG,EAAIC,YAAYD,EAAIG,SAASH,EAAIK,WAE7DrB,KAAK,MACFC,EAAO,IAAIC,KAAK,CAAC,0BAA0BqC,KAAY,CAC3DpC,KAAM,aAEFzE,EAAM6B,IAAI6C,gBAAgBH,GAC1B9B,EAAIrD,SAASuF,cAAc,KACjClC,EAAE5C,KAAOG,EACTyC,EAAEmC,SAAW,aACbnC,EAAEoC,QACFhD,IAAIiD,gBAAgB9E,EAAI,GAwDsC,WAIxDjC,EAAAA,cAAA,OAAKC,UAAU,gBACY,IAAxBqH,EAAO5B,GAAMxB,OACZlE,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAAA,SAAG,sCACHA,EAAAA,cAAA,OAAKmH,IAAI,qBAAqBC,IAAI,eAGpCE,EAAO5B,GAAM3B,KAAI,CAACwD,EAAKP,IACrBhH,EAAAA,cAACA,EAAAA,SAAc,CAACmE,IAAK6C,GACnBhH,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,QAAc,IACtBA,EAAAA,cAAA,QACEE,QAASA,IAAMmI,EAAiBd,EAAIJ,KACpClH,UAAU,YACVW,GAAgB,WAAZ2G,EAAIJ,IAAmB,WAAa,aAEvCI,EAAIJ,KAAO,WAGhBnH,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,QAAc,IACtBA,EAAAA,cAAA,QAAMY,GAAgB,WAAZ2G,EAAIH,IAAmB,WAAa,IAC3CG,EAAIH,MAGTpH,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,gBAAsB,IAC9BA,EAAAA,cAAA,QACEY,GAAqB,mBAAjB2G,EAAIC,SAAgC,WAAa,IAEpDD,EAAIC,YAIXxH,EAAAA,cAAA,OAAKC,UAAU,iBACA,WAAZsH,EAAIJ,IACHnH,EAAAA,cAAA,OACEmH,IAAKI,EAAIJ,IACTC,IAAI,UACJlH,QAASA,IAAMmI,EAAiBd,EAAIJ,OAGtCnH,EAAAA,cAAA,SAAG,UAELA,EAAAA,cAAA,SACGuH,EAAIG,MAAM,IAAEH,EAAIK,cAS7B,ECrKGmB,EAAe3I,SACnB,IAAIS,SAAQ,CAACC,EAASC,KAC3B,IACET,OAAOU,UAAUC,cACf,CACEC,OAAQ,CAAEP,SACVQ,KAAMA,KACJ,MAAM6H,EAAU,GAUhB,OATmBzE,MAAMC,KACvBnD,SAASoD,iBAAiB,2BAEjB4B,SAAS4C,IAClBD,EAAQ5C,KAAK,CACX8C,IAAKD,EAAOE,QAAQC,cACpBC,KAAMJ,EAAOtE,YAAYC,QACzB,IAEGoE,CAAO,IAGlBnJ,IAAc,IAAZuC,GAAOvC,EACP,GAAIS,OAAOgJ,QAAQC,UACjBxI,EAAOT,OAAOgJ,QAAQC,eACjB,CACL,MAAMC,EAAiBpH,EAAOA,QAAU,GAClCqH,EAAS,CACbC,GAAIF,EAAezE,QAAQ4E,GAAgB,OAAVA,EAAET,MAAchF,OACjD0F,GAAIJ,EAAezE,QAAQ4E,GAAgB,OAAVA,EAAET,MAAchF,OACjD2F,GAAIL,EAAezE,QAAQ4E,GAAgB,OAAVA,EAAET,MAAchF,OACjD4F,GAAIN,EAAezE,QAAQ4E,GAAgB,OAAVA,EAAET,MAAchF,OACjD6F,GAAIP,EAAezE,QAAQ4E,GAAgB,OAAVA,EAAET,MAAchF,OACjD8F,GAAIR,EAAezE,QAAQ4E,GAAgB,OAAVA,EAAET,MAAchF,QAEnDpD,EAAQ,CAAEkI,QAASQ,EAAgBC,UACrC,IAGN,CAAE,MAAOnG,GACPvC,EAAOuC,EACT,KCuDJ,EA1FgB2G,KACd,MAAOjB,EAASkB,IAAc/G,EAAAA,EAAAA,UAAS,KAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCgH,EAAcC,IAAmBjH,EAAAA,EAAAA,UAAS,CAC/CuG,GAAI,EACJE,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,KAGNxG,EAAAA,EAAAA,YAAU,KACWpD,WACjB,IACE,MAAOC,SAAaC,OAAOC,KAAKC,MAAM,CACpCC,QAAQ,EACRC,eAAe,IAEXC,EAAQN,EAAIO,IAEVoI,QAASQ,EAAc,OAAEC,SAAiBV,EAAapI,GAC/DuJ,EAAWV,GACXY,EAAgBX,EAClB,CAAE,MAAO/F,GACPH,EAASG,EAAIhB,QACf,CAAE,QACAW,GAAW,EACb,GAGFgH,EAAY,GACX,IAEH,MAAMC,EAAU1G,OAAO2G,OAAOJ,GAAcK,OAAOzE,GAAoB,IAAVA,IAE7D,OACE/F,EAAAA,cAAA,WACGoD,EACCpD,EAAAA,cAAA,KAAGiG,MAAM,eACP3C,EACFtD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,SAAIsD,IAGNtD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKC,UAAU,iBACZ2D,OAAO6G,KAAKN,GAAcpG,KAAKI,GAC9BnE,EAAAA,cAAA,OAAKC,UAAU,cAAckE,IAAKA,GAChCnE,EAAAA,cAAA,YAAOmE,EAAIuG,eACX1K,EAAAA,cAAA,QACEY,GACW,OAARuD,GAAwB,OAARA,GAAuC,IAAtBgG,EAAahG,GAE3C,GADA,YAILgG,EAAahG,IAAQ,OAK7BmG,EACCtK,EAAAA,cAAA,OAAKC,UAAU,WAAWW,GAAG,cAC3BZ,EAAAA,cAAA,SAAG,qCACHA,EAAAA,cAAA,OAAKmH,IAAI,qBAAqBC,IAAI,eAGpCpH,EAAAA,cAAA,OAAKC,UAAU,oBACZ+I,EAAQjF,KAAI,CAACkF,EAAQjC,IACpBhH,EAAAA,cAAA,OACEmE,IAAK6C,EACL/G,UAAW,yBAAyBgJ,EAAOC,OAE3ClJ,EAAAA,cAAA,QAAMC,UAAU,gBAChBD,EAAAA,cAAA,cACEA,EAAAA,cAAA,QAAMC,UAAU,cAAcgJ,EAAOC,MAEvClJ,EAAAA,cAAA,QAAMC,UAAU,eAAegJ,EAAOI,WAO9C,E,cC1FH,MAAMsB,EAAevK,SACnB,IAAIS,SAAQT,MAAOU,EAASC,KACjC,IACE,MAAOV,SAAaC,OAAOC,KAAKC,MAAM,CACpCC,QAAQ,EACRC,eAAe,IAGXC,EAAQN,EAAIO,GAElBN,OAAOU,UAAUC,cACf,CACEC,OAAQ,CAAEP,SACVQ,KAAMA,IACkBoD,MAAMC,KAC1BnD,SAASoD,iBAAiB,uCAGzBV,KAAK6G,IACJ,IACE,OAAOC,KAAKC,MAAMF,EAAOG,UAC3B,CAAE,MACA,OAAO,IACT,KAEDhG,OAAOiG,WAGbC,IACK3K,OAAOgJ,QAAQC,UACjBxI,EAAOT,OAAOgJ,QAAQC,WACb0B,GAAWA,EAAQ/G,OAAS,EACrCpD,EAAQmK,EAAQ,GAAG7I,QAAU,IAE7BtB,EAAQ,GACV,GAGN,CAAE,MAAOwC,GACPvC,EAAO,IAAIsB,MAAM,sDACnB,KCvCS6I,EAAcA,CACzBC,EAAQtL,EAERuL,EACAC,EACAC,EACAC,EACAC,EACA9D,EACAE,KACG,IARH,MAAE6D,EAAK,MAAEnH,GAAOzE,EAShB6L,EAAAA,IAAUP,EAASQ,SAASC,UAAU,KAAKC,SAC3C,MAAMC,EAAMJ,EAAAA,IACFP,EAASQ,SAChBI,OAAO,OACPC,KAAK,QAAStE,GACdsE,KAAK,SAAUpE,GACfqE,KACCP,EAAAA,MAEGQ,YAAY,CAAC,IAAM,IACnBC,GAAG,QAASC,IACXC,EAAWL,KAAK,YAAaI,EAAME,UAAU,KAI/CD,EAAaP,EAAIC,OAAO,KAE9BD,EACGC,OAAO,QACPA,OAAO,UACPC,KAAK,KAAM,SACXA,KAAK,UAAW,cAChBA,KAAK,OAAQ,IACbA,KAAK,OAAQ,GACbA,KAAK,cAAe,GACpBA,KAAK,eAAgB,GACrBA,KAAK,SAAU,QACfD,OAAO,QACPC,KAAK,IAAK,kBACVA,KAAK,OAAQ,QAEhBR,EAAcG,QAAUD,EAAAA,IACLD,GAChBc,MACC,OACAb,EAAAA,IACapH,GACV1D,IAAI4L,GAAMA,EAAE5L,KACZ6L,SAASrB,IAEbmB,MAAM,SAAUb,EAAAA,MAAmBgB,UAAU,MAC7CH,MAAM,SAAUb,EAAAA,IAAehE,EAAQ,EAAGE,EAAS,IAEtD,MAAM5C,EAAOqH,EACVN,OAAO,KACPC,KAAK,SAAU,QACfA,KAAK,eAAgB,GACrBJ,UAAU,QACVnI,KAAKa,GACLiC,KAAK,QACLyF,KAAK,aAAc,eAEhBW,EAAYN,EACfN,OAAO,KACPH,UAAU,QACVnI,KAAKa,GACLiC,KAAK,QACLyF,KAAK,QAAS,cACd3C,MAAMmD,GAAMA,EAAEI,UAAY,KAC1BC,MAAM,YAAa,GAAGxB,OACtBwB,MAAM,OAAQ,QAEXC,EAAOT,EACVN,OAAO,KACPH,UAAU,UACVnI,KAAKgI,GACLlF,KAAK,UACLyF,KAAK,IAAKV,GACVU,KAAK,QAASQ,GAAMd,EAAAA,IAAoBc,EAAE5L,GAAK,MAC/CqL,KACCP,EAAAA,MAEGS,GAAG,SA8BV,SAAqBC,GACdA,EAAM3L,QAAQ+K,EAAcG,QAAQoB,YAAY,IAAKC,UAC1DZ,EAAMa,QAAQC,GAAKd,EAAMa,QAAQE,EACjCf,EAAMa,QAAQG,GAAKhB,EAAMa,QAAQI,CACnC,IAjCOlB,GAAG,QAmCV,SAAiBC,GACfA,EAAMa,QAAQC,GAAKd,EAAMe,EACzBf,EAAMa,QAAQG,GAAKhB,EAAMiB,CAC3B,IArCOlB,GAAG,OAuCV,SAAmBC,GACZA,EAAM3L,QAAQ+K,EAAcG,QAAQoB,YAAY,GACrDX,EAAMa,QAAQC,GAAK,KACnBd,EAAMa,QAAQG,GAAK,IACrB,KAxCM7K,EAAQ8J,EACXN,OAAO,KACPH,UAAU,QACVnI,KAAKgI,GACLlF,KAAK,QACLyF,KAAK,IAAK,GACVA,KAAK,IAAK,GACV3C,MAAMmD,GAAMA,EAAEc,OACdT,MAAM,YAAa,GAAGxB,OAEzBG,EAAcG,QAAQQ,GAAG,QAAQ,KAC/BnH,EACGgH,KAAK,MAAOQ,GAAMA,EAAEe,OAAOJ,IAC3BnB,KAAK,MAAOQ,GAAMA,EAAEe,OAAOF,IAC3BrB,KAAK,MAAOQ,GAAMA,EAAEtL,OAAOiM,IAC3BnB,KAAK,MAAOQ,GAAMA,EAAEtL,OAAOmM,IAE9BV,EACGX,KAAK,KAAMQ,IAAOA,EAAEe,OAAOJ,EAAIX,EAAEtL,OAAOiM,GAAK,IAC7CnB,KAAK,KAAMQ,IAAOA,EAAEe,OAAOF,EAAIb,EAAEtL,OAAOmM,GAAK,IAEhDP,EAAKd,KAAK,MAAOQ,GAAMA,EAAEW,IAAGnB,KAAK,MAAOQ,GAAMA,EAAEa,IAChD9K,EAAMyJ,KAAK,KAAMQ,GAAMA,EAAEW,IAAGnB,KAAK,KAAMQ,GAAMA,EAAEa,GAAE,GAkBnD,ECjIWG,EAAkBC,IAC7B,MAAMhC,EAAQ,GACRnH,EAAQ,GAEdmH,EAAMrF,KADW,CAAExF,GAAI,EAAG0M,KAAM,WAGhC,IAAII,EAAS,EAEb,MAAMC,EAAW,SAAClK,GAAsC,IAAhCmK,EAAQC,UAAA3J,OAAA,QAAA4J,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGjB,EAAQiB,UAAA3J,OAAA,QAAA4J,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC/C,GAAoB,iBAATpK,GAA8B,OAATA,EAAe,CAC7C,MAAMsK,EAAUtK,EAAK,SACfuK,EAAYD,EAAUL,IAAWE,EACnCG,IACFtC,EAAMrF,KAAK,CACTxF,GAAIoN,EACJV,KAAM7J,EAAK,UAAY,WAGzBa,EAAM8B,KAAK,CACTmH,OAAQK,EACR1M,OAAQ8M,EACRpB,SAAUA,KAIdhJ,OAAOC,QAAQJ,GAAM4C,SAAQxG,IAAkB,IAAhBsE,EAAK3B,GAAM3C,EAC5B,UAARsE,GACFwJ,EAASnL,EAAOwL,EAAW7J,EAC7B,GAEJ,CACF,EAGA,OADAsJ,EAAQpH,SAAS4H,GAAWN,EAASM,KAC9B,CAAExC,QAAOnH,QAAO,ECwOzB,EAlQe4J,KACb,MAAOT,EAASU,IAAchL,EAAAA,EAAAA,UAAS,KAChCiI,EAAcgD,IAAmBjL,EAAAA,EAAAA,UAAS,KAC1CkI,EAAUgD,IAAelL,EAAAA,EAAAA,UAAS,KAClCmI,EAAUgD,IAAenL,EAAAA,EAAAA,UAAS,IAClCoI,EAAegD,IAAoBpL,EAAAA,EAAAA,WAAS,IAC5CG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BqL,EAAWC,IAAgBtL,EAAAA,EAAAA,WAAS,IACpCuL,EAAaC,IAAkBxL,EAAAA,EAAAA,WAAS,GACzCgI,GAAWyD,EAAAA,EAAAA,QAAO,MAClBpD,GAAgBoD,EAAAA,EAAAA,QAAO,OAG7BpL,EAAAA,EAAAA,YAAU,KACUpD,WAChBqO,GAAa,GACb,IACE,MAAMhL,QAAakH,IACnBwD,EAAW1K,EACb,CAAE,MAAOC,GACPH,EAASG,EAAIhB,QACf,CAAE,QACA+L,GAAa,EACf,GAEFI,EAAW,GACV,KAGHrL,EAAAA,EAAAA,YAAU,KACR,GAAIiK,EAAQvJ,OAAS,EACnB,IACE,MAAM4K,EAAYtB,EAAeC,GACjCvC,EACEC,EACA2D,EACA1D,EACAC,EACAC,EACAC,EACAC,EACA,IACA,IAEJ,CAAE,MAAO9H,GACPH,EAAS,2BAA2BG,EAAIhB,UAC1C,CACF,GACC,CAAC+K,EAASiB,KAGblL,EAAAA,EAAAA,YAAU,KACR,GAAIgI,EAAcG,QAAS,CACzB,MAAMoD,EAAYvD,EAAcG,QAAQY,MAAM,QAC1CwC,IACFA,EAAUtC,SAASrB,GACnBI,EAAcG,QAAQqD,MAAM,GAAGhC,UAEnC,IACC,CAAC5B,KAGJ5H,EAAAA,EAAAA,YAAU,KACRkI,EAAAA,IAAUP,EAASQ,SAChBC,UAAU,QACViB,MAAM,YAAa,GAAGxB,MAAa,GACrC,CAACA,KAGJ7H,EAAAA,EAAAA,YAAU,KACRkI,EAAAA,IAAUP,EAASQ,SAASC,UAAU,UAAUI,KAAK,IAAKV,EAAS,GAClE,CAACA,KAGJ9H,EAAAA,EAAAA,YAAU,KACR,GAAIgI,EAAcG,SAAWR,EAASQ,QAAS,CAC7C,MAAMF,EAAQC,EAAAA,IAAUP,EAASQ,SAASC,UAAU,UAChDL,EACFE,EAAMQ,KAAKgD,EAAKzD,EAAcG,UAE9BF,EAAMU,GAAG,QAAS,KAEtB,IACC,CAACZ,IAEJ,MAAM0D,EAAQC,GAkBLxD,EAAAA,MAEJS,GAAG,SAnBN,SAAqBC,GACdA,EAAM3L,QAAQyO,EAAWnC,YAAY,IAAKC,UAC/CZ,EAAMa,QAAQC,GAAKd,EAAMa,QAAQE,EACjCf,EAAMa,QAAQG,GAAKhB,EAAMa,QAAQI,CACnC,IAgBGlB,GAAG,QAdN,SAAiBC,GACfA,EAAMa,QAAQC,GAAKd,EAAMe,EACzBf,EAAMa,QAAQG,GAAKhB,EAAMiB,CAC3B,IAYGlB,GAAG,OAVN,SAAmBC,GACZA,EAAM3L,QAAQyO,EAAWnC,YAAY,GAC1CX,EAAMa,QAAQC,GAAK,KACnBd,EAAMa,QAAQG,GAAK,IACrB,IASI+B,EAAatP,IAAqB,IAApB,KAAE4D,EAAI,MAAE9B,GAAO9B,EACjC,MAAOuP,EAAQC,IAAalM,EAAAA,EAAAA,WAAS,GAerC,OACEnD,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,OAAKC,UAAU,gBAAgBC,QAfhBoP,IAAMD,GAAWD,IAgB9BpP,EAAAA,cAAA,YAAO2B,GACP3B,EAAAA,cAAA,cAASoP,EAAS,IAAM,MAEzBA,GACCpP,EAAAA,cAAA,OAAKC,UAAU,kBACZ2D,OAAOC,QAAQJ,GAAMM,KAAI,CAAAC,EAAegD,KAAK,IAAlB7C,EAAK3B,GAAMwB,EAAA,OACrChE,EAAAA,cAAA,OAAKmE,IAAK6C,EAAO/G,UAAU,gBApBjBsP,EAACpL,EAAK3B,IACH,iBAAVA,GAAgC,OAAVA,EACxBxC,EAAAA,cAACmP,EAAU,CAAC1L,KAAMjB,EAAOb,MAAOa,EAAM,UAAY2B,IAGzDnE,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,cAASmE,EAAI,KAAU,IAAE3B,GAelB+M,CAAYpL,EAAK3B,GACd,KAIR,EAIV,OACExC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UACEE,QAASA,IAAMyO,GAAgBa,IAAUA,IACzCvP,UAAU,mBAETyO,EAAc,sBAAwB,wBAExCpL,GACCtD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,SAAIsD,IAGPkL,GAAaxO,EAAAA,cAAA,KAAGC,UAAU,gBACzBuO,IAAclL,GAASmK,EAAQvJ,OAAS,GACxClE,EAAAA,cAAA,WACG0O,EACC1O,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,UACEE,QAASA,IAAMqO,GAAkBiB,IAAUA,IAC3C5O,GAAG,cAEF2K,EACCvL,EAAAA,cAAA,OAAKmH,IAAI,kBAAkBC,IAAI,iBAE/BpH,EAAAA,cAAA,OAAKmH,IAAI,iBAAiBC,IAAI,iBAGlCpH,EAAAA,cAAA,UACEE,QAASA,ICvLMiL,KAIjC,MAAMsE,EAAatE,EAASQ,QAAQrK,cAAc,OAClD,IAAKmO,EAAY,OASjB,MAAMC,EAAYD,EAAWE,WAAU,GACjCC,EAAOH,EAAWI,UAClBnI,EAAQkI,EAAKlI,MACbE,EAASgI,EAAKhI,OAEpB8H,EAAUI,aAAa,UAAW,GAAGF,EAAKzC,KAAKyC,EAAKvC,KAAK3F,KAASE,KAClE8H,EAAUI,aAAa,QAASpI,GAChCgI,EAAUI,aAAa,SAAUlI,GAEjC,MACMmI,GADa,IAAIC,eACMC,kBAAkBP,GACzClJ,EAAO,IAAIC,KAAK,CAACsJ,GAAY,CAAErJ,KAAM,gCACrCzE,EAAM6B,IAAI6C,gBAAgBH,GAC1Be,EAAM,IAAIU,MAEhBV,EAAI2I,OAAS,KACX,MAAMC,EAAS9O,SAASuF,cAAc,UAEtCuJ,EAAOzI,MADa,EACLA,EACfyI,EAAOvI,OAFa,EAEJA,EAChB,MAAMwI,EAAMD,EAAOE,WAAW,MAC9BD,EAAIE,UAAY,QAChBF,EAAIG,SAAS,EAAG,EAAGJ,EAAOzI,MAAOyI,EAAOvI,QACxCwI,EAAII,UAAUjJ,EAAK,EAAG,EANF,EAMKG,EANL,EAM0BE,GAE9C,MAAM5C,EAAO3D,SAASuF,cAAc,KACpC5B,EAAK6B,SAAW,mBAChB7B,EAAKlD,KAAOqO,EAAOM,UAAU,aAC7BzL,EAAK8B,QAELhD,IAAIiD,gBAAgB9E,EAAI,EAQ1BsF,EAAImJ,QAAU,KACZC,QAAQrN,MAAM,uDAAuD,EAGvEiE,EAAIJ,IAAMlF,CAAG,ED+HoB2O,CAAmBzF,GAClCvK,GAAG,gBAEHZ,EAAAA,cAAA,OAAKmH,IAAI,qBAAqBC,IAAI,qBAItCpH,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,aAAO,aACPA,EAAAA,cAAA,SACE0G,KAAK,QACLmK,IAAI,IACJC,IAAI,KACJtO,MAAO6I,EACP0F,SAAWC,GAAM3C,EAAY4C,OAAOD,EAAE9P,OAAOsB,UAE/CxC,EAAAA,cAAA,YAAOqL,IAETrL,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,aAAO,aACPA,EAAAA,cAAA,SACE0G,KAAK,QACLmK,IAAI,IACJC,IAAI,KACJtO,MAAO8I,EACPyF,SAAWC,GAAM1C,EAAY2C,OAAOD,EAAE9P,OAAOsB,UAE/CxC,EAAAA,cAAA,YAAOsL,IAETtL,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,aAAO,iBACPA,EAAAA,cAAA,SACE0G,KAAK,QACLmK,IAAI,KACJC,IAAI,MACJtO,MAAO4I,EACP2F,SAAWC,GAAM5C,EAAgB6C,OAAOD,EAAE9P,OAAOsB,UAEnDxC,EAAAA,cAAA,YAAOoL,MAIbpL,EAAAA,cAAA,OAAKkR,IAAK/F,EAAUlL,UAAU,qBAGhCD,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIY,GAAG,UAAS,iBAChBZ,EAAAA,cAAA,KAAGC,UAAU,sBACXD,EAAAA,cAAA,cAAQ,oJAMVA,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAA,OAAKC,UAAU,oBACZwN,EAAQ1J,KAAI,CAACkK,EAAQjH,IACpBhH,EAAAA,cAACmP,EAAU,CACThL,IAAK6C,EACLvD,KAAMwK,EACNtM,MAAOsM,EAAO,UAAY,UAAUjH,EAAQ,aAS1DwH,IAAclL,GAA4B,IAAnBmK,EAAQvJ,QAC/BlE,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAAA,SAAG,mCACgC,IACjCA,EAAAA,cAAA,OAAKmH,IAAI,qBAAqBC,IAAI,gBAIvC,EE/GP,EApJsB+J,KACpB,MAAOlP,EAAKmP,IAAUjO,EAAAA,EAAAA,UAAS,KACxBkO,EAAeC,IAAoBnO,EAAAA,EAAAA,UAAS,OAC5CoO,EAAcC,IAAmBrO,EAAAA,EAAAA,UAAS,OAC1CqL,EAAWC,IAAgBtL,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAY7BsO,EAAqBrR,MAAO6B,EAAKyP,KACrC,MAAMC,EAAW,kEAAkE1P,cAAgByP,gDAC7FE,QAAiBC,MAAMF,GAC7B,IAAKC,EAASE,GAAI,MAAM,IAAIzP,MAAM,kCAClC,OAAOuP,EAASG,MAAM,EA2DlBC,EAAkBA,CAAC5P,EAAQsP,KAC/B,MAAMO,EAAQC,KAAKC,MAA4C,IAAtC/P,EAAOgQ,WAAWC,YAAYJ,OACjDK,EApCeL,IACjBA,GAAS,GAAW,UACpBA,GAAS,GAAW,UACjB,UAiCYM,CAAcN,GAEjC,OACEjS,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,OACEC,UAAU,eACV4M,MAAO,CACL2F,gBAAiB,QACjBC,gBAAiB,kBAAkBH,KAAcL,eAAmBA,QAGtEjS,EAAAA,cAAA,YAAOiS,IAETjS,EAAAA,cAAA,KAAGC,UAAU,gBAAgByR,EAAS,cACtC1R,EAAAA,cAAA,KAAGC,UAAU,YAAW,iCACQD,EAAAA,cAAA,WAAO,IACrCA,EAAAA,cAAA,QAAMC,UAAU,OAAOgC,IA9CRG,KACrB,MAAMsQ,EAAStQ,EAAOsQ,OACtB,OACE1S,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,0BACP,IACA0S,EAAO,0BAA0BC,cAEpC3S,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,4BACP,IACA0S,EAAO,4BAA4BC,cAEtC3S,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,uBACP,IACA0S,EAAO,uBAAuBC,cAEjC3S,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,2BACP,IACA0S,EAAO,2BAA2BC,cAEjC,EAwBHC,CAAcxQ,GACX,EAIV,OACEpC,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,UAAQE,QAnFIE,UACdmD,EAAS,IACTkL,GAAa,GAEb,IACE,MAAMoE,OAtBczS,WACtB,MAAOC,SAAaC,OAAOC,KAAKC,MAAM,CACpCC,QAAQ,EACRC,eAAe,IAEjB,OAAOL,EAAI4B,GAAG,EAiBY6Q,GACxB1B,EAAOyB,GAEP,MAAOE,EAASC,SAAgBnS,QAAQoS,IAAI,CAC1CxB,EAAmBoB,EAAW,WAC9BpB,EAAmBoB,EAAW,YAGhCvB,EAAiByB,EAAQG,kBACzB1B,EAAgBwB,EAAOE,iBACzB,CAAE,MAAOxP,GACPH,EAASG,EAAIhB,QACf,CAAE,QACA+L,GAAa,EACf,GAgE4B0E,SAAU3E,GACjCA,EAAY,kBAAoB,kBAElCA,GACCxO,EAAAA,cAAA,OAAKC,UAAU,wBACbD,EAAAA,cAAA,SAAG,kDACHA,EAAAA,cAAA,WACAA,EAAAA,cAAA,KAAGiG,MAAM,gBAGZ3C,GACCtD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,SAAIsD,IAIRtD,EAAAA,cAAA,OAAKC,UAAU,mBACZsR,GAAgBS,EAAgBT,EAAc,UAC9CF,GAAiBW,EAAgBX,EAAe,YAGlDA,GAAiBE,GAChBvR,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAAA,WACEA,EAAAA,cAAA,QAAMC,UAAU,uBAChBD,EAAAA,cAAA,cAAQ,SAEVA,EAAAA,cAAA,WACEA,EAAAA,cAAA,QAAMC,UAAU,wBAChBD,EAAAA,cAAA,cAAQ,kBAEVA,EAAAA,cAAA,WACEA,EAAAA,cAAA,QAAMC,UAAU,qBAChBD,EAAAA,cAAA,cAAQ,wBAIV,ECxHV,EAxBeoT,IAEXpT,EAAAA,cAAA,UAAQC,UAAU,UAChBD,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,KAAGC,UAAU,eAAc,wDAC4BD,EAAAA,cAAA,WAAM,8CAG7DA,EAAAA,cAAA,KACE8B,KAAK,sBACLlB,GAAG,WACHM,OAAO,SACP+F,IAAI,uBAEJjH,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,OAAKmH,IAAI,mBAAmBC,IAAI,mBAAmBxG,GAAG,SAAS,kBClB9DyS,EAAkBA,CAACC,EAAKC,KACnC,MAAMC,EAAYF,EAAIxO,SAAS2O,SAAS/L,MAClCgM,EAAaJ,EAAIxO,SAAS2O,SAAS7L,OAGzC0L,EAAIK,aAAa,EAAG,EAAG,GACvBL,EAAIM,KAAK,GAAI,GAAIJ,EAAY,GAAIE,EAAa,IAC9CJ,EAAIM,KAAK,EAAG,EAAGJ,EAAY,GAAIE,EAAa,IAI5CJ,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,IAAK,IAAK,KAC3BP,EAAIjK,KAHkB,cAGEmK,EAAY,EAAGE,EAAa,EAAG,CACrDI,MAAO,SACPC,MAAO,KAITT,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,IAAK,IAAK,KAC3B,MAAMG,EAAY,sBAIlBV,EAAIW,aAAQnG,EAAW,QACvBwF,EAAIjK,KAJe,wBAIEmK,EAAY,GAAI,EAAG,CACtCM,MAAO,UAGTR,EAAIjK,KAAK,GAAGkK,IAAcC,EAAY,EAAGE,EAAa,EAAG,CAAEI,MAAO,WAElE,MAAMI,EAAYV,EAAY,GACxBW,EAAYT,EAAa,EAC/BJ,EAAIW,aAAQnG,EAAW,UACvBwF,EAAIO,aAAa,EAAG,EAAG,KACvBP,EAAIjK,KAAK2K,EAAWE,EAAWC,EAAW,CACxCL,MAAO,UAET,MAAMM,EAAYd,EAAIe,aAAaL,GAWnC,OAVAV,EAAIK,aAAa,EAAG,EAAG,KACvBL,EAAIgB,KAAKJ,EAAYE,EAAWD,EAAY,EAAGD,EAAWC,EAAY,GACtEb,EAAItO,KACFwO,EAAY,GAAKF,EAAIe,aAAaL,GAClCN,EAAa,GACbJ,EAAIe,aAAaL,GACjB,GACA,CAAE/R,IAAK+R,IAETV,EAAIO,aAAa,EAAG,EAAG,GAChBN,EAAa,CAAC,ECkFvB,EAlHoBgB,KAClB,MAAOtR,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAAC,IAC3BmB,EAAOmB,IAAYtC,EAAAA,EAAAA,UAAS,CAAC,IAC7BmE,EAAQY,IAAa/E,EAAAA,EAAAA,UAAS,CAAC,IAC/B6F,EAASkB,IAAc/G,EAAAA,EAAAA,UAAS,CAAE6F,QAAS,GAAIS,OAAQ,CAAC,KACxDgE,EAASU,IAAchL,EAAAA,EAAAA,UAAS,KAChCoI,EAAegD,IAAoBpL,EAAAA,EAAAA,WAAS,GAC7CgI,GAAWyD,EAAAA,EAAAA,QAAO,MAClBpD,GAAgBoD,EAAAA,EAAAA,QAAO,OACtBxL,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GA8FvC,OA5FAK,EAAAA,EAAAA,YAAU,KACQpD,WACd,IACE,MAAOC,SAAaC,OAAOC,KAAKC,MAAM,CACpCC,QAAQ,EACRC,eAAe,IAEXC,EAAQN,EAAIO,IAEX4T,EAAaC,EAAWtM,EAAYuM,EAAaC,SAChD9T,QAAQoS,IAAI,CAChB9S,IACAkE,IACAgD,EAAY1G,GACZoI,EAAapI,GACbgK,MAEJzH,EAAQsR,GACR/O,EAASgP,GACTvM,EAAUC,GACV+B,EAAWwK,GACXvG,EAAWwG,EACb,CAAE,MAAOrR,GACPqN,QAAQrN,MAAM,uBAAwBA,EACxC,GAEFsR,EAAS,GACR,KAEHpR,EAAAA,EAAAA,YAAU,KACR,GAAIiK,GAAWA,EAAQvJ,OAAS,EAAG,CACjC,MAAM4K,EAAYtB,EAAeC,GACjCvC,EACEC,EACA2D,EACA,IACA,GACA,GACAvD,EACAC,EACA,GACA,GAEJ,IACC,CAACiC,IAiDFzN,EAAAA,cAAA,OAAKC,UAAU,OAAOW,GAAG,eACvBZ,EAAAA,cAAA,OAAKkR,IAAK/F,EAAUlL,UAAU,UAC9BD,EAAAA,cAAA,UAAQC,UAAU,aAAaC,QAjDfE,UAClBiD,GAAW,GACX,MACMiQ,EAAM,IAAIuB,SADK,8BAAiBA,OAEtC,IAAIV,EAAY,GACZZ,EAAa,EACjB,MAAMuB,EAAkB,IACvBX,EAAWZ,GCjFmBwB,EAACzB,EAAKrQ,EAAM+R,EAAezB,KAC5D,MAAMuB,EAAkB,GAClBG,EAAY,CAChB,CAAE1S,MAAO,MAAOC,MAAOS,EAAKhB,KAC5B,CAAEM,MAAO,QAASC,MAAOS,EAAKtB,OAC9B,CAAEY,MAAO,cAAeC,MAAOS,EAAKrB,aACpC,CAAEW,MAAO,YAAaC,MAAOS,EAAKpB,WAClC,CAAEU,MAAO,WAAYC,MAAOS,EAAKxB,MACjC,CAAEc,MAAO,cAAeC,MAAOS,EAAKlB,QACpC,CAAEQ,MAAO,gBAAiBC,MAAOS,EAAKjB,UAGxCuR,EAAaF,EAAgBC,EAAKC,GAClCD,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIW,aAAQnG,EAAW,QACvBwF,EAAIjK,KAAK,sBAAuB,IAAK,GAAI,CAAEyK,MAAO,WAElDR,EAAIjF,YAAY,IAChBiF,EAAIW,aAAQnG,EAAW,UACvBwF,EAAIjK,KAAK,kBAAmB,GAAI2L,GAEhC,IAAIb,EAAYa,EAAgB,GAgGhC,OA9FAC,EAAU5O,SAAS6O,IACbf,EAAY,MACdb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAGdb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,EAAG,GACvBP,EAAIjK,KAAK,GAAG6L,EAAK3S,QAAS,GAAI4R,GAC9Bb,EAAIjK,KAAK,IAAK,GAAI8K,GAClBb,EAAIjF,YAAY,IAiBG,kBAAf6G,EAAK1S,OACP8Q,EAAIO,aAAa,IAAK,EAAG,GACzBiB,EAAgB1O,KACd,OAAO8O,EAAK3S,uCAlBI,CAClBK,MACE,qEACFC,YACE,oEACFC,UACE,2IACFC,SACE,+MACF,cACE,uJACF,gBACE,mJAOcmS,EAAK3S,WAIN,UAAf2S,EAAK3S,QACJ2S,EAAK1S,MAAM0B,OAAS,IAAMgR,EAAK1S,MAAM0B,OAAS,KAE/CoP,EAAIO,aAAa,IAAK,IAAK,GAC3BiB,EAAgB1O,KACd,qBAAqB8O,EAAK1S,MAAM0B,+DAGnB,gBAAfgR,EAAK3S,QACJ2S,EAAK1S,MAAM0B,OAAS,KAAOgR,EAAK1S,MAAM0B,OAAS,MAEhDoP,EAAIO,aAAa,IAAK,IAAK,GAC3BiB,EAAgB1O,KACd,2BAA2B8O,EAAK1S,MAAM0B,iEAGxCoP,EAAIO,aAAa,EAAG,EAAG,GAGLP,EAAI8B,gBAAgBF,EAAK1S,MAAO,KACxC6D,SAASiO,IACfH,EAAY,MACdb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAEdb,EAAIjK,KAAKiL,EAAM,GAAIH,GACnBA,GAAa,CAAC,GACd,IAGAW,EAAgB5Q,OAAS,IAC3BiQ,GAAa,GACbb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,IAAK,EAAG,GACzBP,EAAIjK,KAAK,kBAAmB,GAAI8K,GAChCA,GAAa,GAEbW,EAAgBzO,SAASgP,IACnBlB,EAAY,MACdb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAGdb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,EAAG,GACvBP,EAAIW,QAAQ,gBACZX,EAAIjK,KAAKiM,OAAOC,aAAa,KAAM,GAAIpB,GACvCb,EAAIW,QAAQ,YAAa,UACPX,EAAI8B,gBAAgB,GAAGC,IAAO,KACtChP,SAASiO,IACjBhB,EAAIjK,KAAKiL,EAAM,GAAIH,GACnBA,GAAa,CAAC,GACd,KAIC,CAACA,EAAY,GAAIZ,EAAW,EDrCPwB,CACxBzB,EACArQ,EACAkR,EACAZ,GAEFA,EEvF2BiC,EAC7BlC,EACAhM,EACA0N,EACAzB,EACAuB,KAEA,IAAIX,EAAYa,EACZb,EAAY,SACdb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAGd,MAAMsB,EAAc,CAClB,CAAElT,MAAO,eAAgBC,MAAO8E,EAAO/B,OAAOrB,QAAU,GACxD,CAAE3B,MAAO,cAAeC,MAAO8E,EAAOQ,OAAO5D,QAAU,GACvD,CAAE3B,MAAO,eAAgBC,MAAO8E,EAAOS,YAAY7D,QAAU,GAC7D,CAAE3B,MAAO,cAAeC,MAAO8E,EAAOU,OAAO9D,QAAU,IA2CzD,OAxCAoP,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIjK,KAAK,oBAAqB,GAAI8K,GAClCA,GAAa,GAEbsB,EAAYpP,SAAQxG,IAAsB,IAArB,MAAE0C,EAAK,MAAEC,GAAO3C,EACnCyT,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,EAAG,GACvBP,EAAIjK,KAAK,GAAG9G,IAAS,GAAI4R,GAErB3R,EAAQ,GAAe,iBAAVD,GACf+Q,EAAIO,aAAa,IAAK,EAAG,GACX,gBAAVtR,EACFuS,EAAgB1O,KACd,IAAI5D,sEAGa,gBAAVD,EACTuS,EAAgB1O,KACd,IAAI5D,uEAIQ,iBAAVD,GAA4BC,IAAU8E,EAAO/B,OAAOrB,OACtD4Q,EAAgB1O,KAAK,+CAErB0O,EAAgB1O,KACd,IAAI5D,yEAMV8Q,EAAIO,aAAa,EAAG,EAAG,GAGzBP,EAAIjK,KAAK,KAAK7G,IAAS,GAAI2R,GAC3BA,GAAa,CAAC,IAGTZ,CAAU,EF0BFiC,CACXlC,EACAhM,EACA6M,EACAZ,EACAuB,GAEFvB,EG/F2BmC,EAC7BpC,EACAhP,EACA0Q,EACAzB,EACAuB,KAEA,IAAIX,EAAYa,EAEZb,EAAY,SACdA,EAAY,IAGd,MAAMwB,EAAa,CACjB,CAAEpT,MAAO,cAAeC,MAAO8B,EAAMiB,OAAOrB,QAAU,GACtD,CAAE3B,MAAO,iBAAkBC,MAAO8B,EAAMQ,UAAUZ,QAAU,GAC5D,CAAE3B,MAAO,iBAAkBC,MAAO8B,EAAMY,UAAUhB,QAAU,GAC5D,CAAE3B,MAAO,eAAgBC,MAAO8B,EAAMa,aAAajB,QAAU,GAC7D,CAAE3B,MAAO,eAAgBC,MAAO8B,EAAMc,QAAQlB,QAAU,IAoC1D,OAjCAoP,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIjK,KAAK,oBAAqB,GAAI8K,GAClCA,GAAa,GAEbwB,EAAWtP,SAAQxG,IAAsB,IAArB,MAAE0C,EAAK,MAAEC,GAAO3C,EAClCyT,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,EAAG,GACvBP,EAAIjK,KAAK,GAAG9G,IAAS,GAAI4R,GAEX,IAAV3R,GAA0B,iBAAVD,GAA4BC,EAAQ,GACtD8Q,EAAIO,aAAa,IAAK,EAAG,GACX,iBAAVtR,EACFuS,EAAgB1O,KACd,IAAI5D,2DAEa,mBAAVD,EACTuS,EAAgB1O,KACd,0EAEiB,mBAAV7D,GACTuS,EAAgB1O,KACd,wEAIJkN,EAAIO,aAAa,EAAG,EAAG,GAGzBP,EAAIjK,KAAK,KAAK7G,IAAS,IAAK2R,GAC5BA,GAAa,CAAC,IAGTZ,CAAU,EHyCFmC,CACXpC,EACAhP,EACA6P,EACAZ,EACAuB,IAEDX,EAAWZ,GIhGgBqC,EAC9BtC,EACAoB,EACAM,EACAzB,EACAuB,KAEA,IAAIX,EAAYa,EAChB,MACMtB,EAAaJ,EAAIxO,SAAS2O,SAAS7L,OAKrCuM,EAAY,SACdA,EAAY,IAIdb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIjK,KAAK,sBAbOwM,IAayB1B,GACzCA,GAAa,GAGb,MAAMhK,EAAeuK,EAAYjL,OA4GjC,OA3GA7F,OAAOC,QAAQsG,GAAc9D,SAAQxG,IAAqB,IAAnBoJ,EAAQlD,GAAMlG,EACnDyT,EAAIjF,YAAY,IAEA,OAAXpF,GAA8B,OAAXA,GAA8B,IAAVlD,EAS1CuN,EAAIO,aAAa,EAAG,EAAG,IARvBP,EAAIO,aAAa,IAAK,EAAG,GACV,OAAX5K,GACF6L,EAAgB1O,KAAK,mDACR,OAAX6C,GACF6L,EAAgB1O,KACd,8DAMNkN,EAAIjK,KAAK,GAAGJ,EAAOyB,gBAjCLmL,IAiC+B1B,GAC7Cb,EAAIjK,KAAK,KAAKtD,IAAS+P,IAA2B3B,GAClDA,GAAa,CAAC,IAGhBA,GAAa,GA2FenL,KAC5B,MAAM+M,EAAc,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACnD,IAAIC,GAAa,EAEjB,IAAK,MAAM,IAAE9M,KAASF,EAAS,CAC7B,MAAMiN,EAAeF,EAAYG,QAAQhN,GACzC,GAAI+M,EAAeD,EACjB,OAAO,EAETA,EAAYC,CACd,CAEA,OAAO,CAAI,EApGcE,CAAqBzB,EAAY1L,UAExD8L,EAAgB1O,KACd,sEAKA0O,EAAgB5Q,OAAS,IAC3BoP,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,IAAK,EAAG,GACzBP,EAAIjK,KAAK,mBAAoB,GAAI8K,GACjCA,GAAa,GAEbb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,EAAG,GACvBiB,EAAgBzO,SAASgP,IACnBlB,EAAYT,EAvDC,KAwDfJ,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EA3DY,IA6Ddb,EAAIW,QAAQ,gBACZX,EAAIjK,KAAKiM,OAAOC,aAAa,KAAM,GAAIpB,GACvCb,EAAIW,QAAQ,YAAa,UACzBX,EAAIjK,KAAK,GAAGgM,IAAO,GAAIlB,GACvBA,GAAa,CAAC,IAGhBA,GAAa,IAGXA,EAAY,SACdb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAEdA,GAAa,GAEbb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIjK,KAAK,qCAAsC,IAAK8K,EAAW,CAC7DL,MAAO,WAETK,GAAa,GAEK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACrC9N,SAAS6C,IACKwL,EAAY1L,QAAQjE,QACzCkE,GAAWA,EAAOC,MAAQA,IAGb7C,SAAQrC,IAAmB,IAAlB,IAAEkF,EAAG,KAAEG,GAAMrF,EAChCmQ,EAAYT,EA3FC,KA4FfJ,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EA/FY,IAkGdb,EAAIjF,YAAY,IAGH,OAARnF,GAAwB,OAARA,GAAuC,IAAtBiB,EAAajB,GAGjDoK,EAAIO,aAAa,EAAG,EAAG,GAFvBP,EAAIO,aAAa,IAAK,EAAG,GAK3BP,EAAIjK,KAAK,GAAGH,EAAIwB,iBAAkB0L,GAAiBjC,GAE/Bb,EAAI8B,gBAAgB/L,GAAQ,aAAc,KAClDhD,SAASiO,IACfH,EAAYT,EA9GD,KA+GbJ,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAlHU,IAoHZb,EAAIjK,KAAKiL,EAAM8B,GAAiBjC,GAChCA,GAAa,CAAC,IAEhBA,GAAa,CAAC,GACd,IAGG,CAACA,EAAY,GAAIZ,EAAW,EJrCPqC,CACxBtC,EACAtK,EACAmL,EACAZ,EACAuB,IAEDX,EAAWZ,GK3Ga8C,EAAC/C,EAAKhM,EAAQ0N,EAAezB,KACxD,IAAIY,EAAYa,EAChB,MAAMsB,EAAa,GAEbC,EAAe,CAAC,GAAI,IAAK,GAAI,IA4LnC,OAxLIpC,EAAY,SACdb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAGdb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIjK,KAAK,SAAU,IAAK8K,EAAW,CAAEL,MAAO,WAC5CK,GAAa,GAEM,CACjB,CACE5R,MAAO,cACPkB,KAAM6D,EAAOQ,OAAS,IAExB,CACEvF,MAAO,cACPkB,KAAM6D,EAAOU,OAAS,IAExB,CACEzF,MAAO,sBACPkB,KAAM6D,EAAOS,YAAc,GAC3ByO,kBACGlP,EAAOS,YAAY7D,QAAU,MAAQoD,EAAO/B,OAAOrB,QAAU,GAChEuS,eAAgB,kDAITpQ,SAAQxG,IAAuD,IAAtD,MAAE0C,EAAK,KAAEkB,EAAI,iBAAE+S,EAAgB,eAAEC,GAAgB5W,EAYnE,OAXIsU,EAAYT,MACdJ,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAGdb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIjK,KAAK9G,EAAO+T,EAAYnC,GAC5BA,GAAa,EAETqC,GACFlD,EAAIjF,YAAY,IAChBiF,EAAIW,aAAQnG,EAAW,QACvBwF,EAAIO,aAAa,IAAK,EAAG,GACzBP,EAAIjK,KAAKoN,EAAgBH,GAAiBnC,GAC1Cb,EAAIW,aAAQnG,EAAW,eACvBqG,GAAa,KAIK,IAAhB1Q,EAAKS,QACPoP,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,GACzBP,EAAIjK,KAAK,8BAA+BiN,GAAiBnC,QACzDA,GAAa,MAIfb,EAAIW,aAAQnG,EAAW,QACvBwF,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,EAAG,GACvBP,EAAIjK,KAAK,QAASiN,GAA0BnC,EAjE3B,EAiEoD,GACrEb,EAAIjK,KACF,MACAiN,EAAaC,EAAa,GAtEV,EAuEhBpC,EArEe,EAqEU,GAE3Bb,EAAIjK,KACF,MACAiN,EAAaC,EAAa,GAAKA,EAAa,GA3E5B,EA4EhBpC,EA1Ee,EA0EU,GAE3Bb,EAAIjK,KACF,cACAiN,EACEC,EAAa,GACbA,EAAa,GACbA,EAAa,GAnFC,EAqFhBpC,EAnFe,EAmFU,GAG3BA,GAAauC,EAEbpD,EAAIW,aAAQnG,EAAW,UACvBrK,EAAK4C,SAAQ,CAAArC,EAAyBgD,KAAU,IAAlC,IAAEG,EAAG,IAAEC,EAAG,SAAEI,GAAUxD,EAClC,MAEM2S,EAAUrD,EAAI8B,gBAClBjO,GAAO,SACPoP,EAAa,GAAKK,GAEdC,EAAUvD,EAAI8B,gBAClBhO,GAAO,SACPmP,EAAa,GAAKK,GAEdE,EAAWxD,EAAI8B,gBACnB5N,GAAY,UACZ+O,EAAa,GAAKK,GAQdG,EAA+B,EALpB7E,KAAKpB,IACpB6F,EAAQzS,OACR2S,EAAQ3S,OACR4S,EAAS5S,QA5GI,EAgHXiQ,EAAY4C,EAAoBrD,MAClCJ,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAGdb,EAAIO,aAAa,EAAG,EAAG,GACvBP,EAAIjK,KACF,GAAGrC,EAAQ,IACXsP,GACAnC,EA1Ha,EA0HY,GAI3BwC,EAAQtQ,SAAQ,CAACiO,EAAM0C,KACR,WAAT1C,EACFhB,EAAIO,aAAa,IAAK,EAAG,GAEzBP,EAAIO,aAAa,EAAG,EAAG,KAEzBP,EAAIjK,KACFiL,EACAgC,EAAaC,EAAa,GAxId,EAyIZpC,EAvIW,EAuIc,EAAgB,EAAZ6C,EAC9B,IAIH1D,EAAItO,KACFsR,EAAaC,EAAa,GA/IZ,EAgJdpC,EA9Ia,EA8IY,EACzBoC,EAAa,GAAKK,EAClBG,EACA,CAAE9U,IAAKkF,IAITmM,EAAIO,aAAa,EAAG,EAAG,GACvBgD,EAAQxQ,SAAQ,CAACiO,EAAM0C,KACR,WAAT1C,EACFhB,EAAIO,aAAa,IAAK,EAAG,GAEzBP,EAAIO,aAAa,EAAG,EAAG,GAEzBP,EAAIjK,KACFiL,EACAgC,EAAaC,EAAa,GAAKA,EAAa,GAhKhC,EAiKZpC,EA/JW,EA+Jc,EAAgB,EAAZ6C,EAC9B,IAGHF,EAASzQ,SAAQ,CAACiO,EAAM0C,KACT,mBAAT1C,EACFhB,EAAIO,aAAa,IAAK,EAAG,GAEzBP,EAAIO,aAAa,EAAG,EAAG,GAEzBP,EAAIjK,KACFiL,EACAgC,EACEC,EAAa,GACbA,EAAa,GACbA,EAAa,GAhLH,EAkLZpC,EAhLW,EAgLc,EAAgB,EAAZ6C,EAC9B,IAGH7C,GAAa4C,CAAiB,SAIhC5C,GAAa,IAAE,IAGV,CAACA,EAAY,GAAIZ,EAAW,ELrFP8C,CAAc/C,EAAKhM,EAAQ6M,EAAWZ,IAC/DY,EAAWZ,GM5Ga0D,EAAC3D,EAAKhP,EAAO0Q,EAAezB,KAEvD,IAAIY,EAAYa,EAmGhB,OAjGIb,EAAY,SACdb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAIdb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIjK,KAAK,QAAS,IAAK8K,EAAW,CAAEL,MAAO,WAZxB,CAAC,WAAY,WAAY,eAcjCzN,SAASP,IACdqO,EAAY,GAAK,MACnBb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAGdA,GAAa,GACbb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIjK,KACF,GAAGvD,EAASoR,OAAO,GAAGxM,cAAgB5E,EAASqR,MAAM,WACrD,GACAhD,GAGFA,GAAa,GAGbb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,EAAG,GACvBP,EAAIW,aAAQnG,EAAW,QACvBwF,EAAIjK,KAAK,QAAS,GAAI8K,GACtBb,EAAIjK,KAAK,MAAO,GAAI8K,GACpBb,EAAIjK,KAAK,QAAS,IAAK8K,GACvBA,GAAa,EACbb,EAAIW,aAAQnG,EAAW,UAEvBxJ,EAAMwB,IAAWO,SAAQ,CAAAxG,EAAkBmH,KAAU,IAA3B,KAAElF,EAAI,MAAEH,GAAO9B,EACvC,MAAMuX,EAAU9D,EAAI8B,gBAAgBtT,GAAM8C,QAAU,UAAW,IACzDyS,EAAY/D,EAAI8B,gBAAgBzT,GAAOiD,QAAU,WAAY,IAE7D0S,EAAyD,EAA7CpF,KAAKpB,IAAIsG,EAAQlT,OAAQmT,EAAUnT,QAEjDiQ,EAAYmD,EAAY,MAC1BhE,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAIdb,EAAIO,aAAa,EAAG,EAAG,GACvBP,EAAIjK,KAAK,GAAGrC,EAAQ,IAAK,GAAImN,GAG7BkD,EAAUhR,SAAQ,CAACiO,EAAM0C,KACV,aAAT1C,EACFhB,EAAIO,aAAa,IAAK,EAAG,GAEzBP,EAAIO,aAAa,EAAG,EAAG,GAEzBP,EAAIjK,KAAKiL,EAAM,IAAKH,EAAwB,EAAZ6C,EAAc,IAIhDI,EAAQ/Q,SAAQ,CAACiO,EAAM0C,KACR,YAAT1C,EACFhB,EAAIO,aAAa,IAAK,EAAG,GAEzBP,EAAIO,aAAa,EAAG,EAAG,KAEzBP,EAAIjK,KAAKiL,EAAM,GAAIH,EAAwB,EAAZ6C,EAAc,IAI/C,MAAMO,EAAaD,EACbE,EAAarD,EAAY,EAC/Bb,EAAItO,KAAK,GAAIwS,EAAY,GAAID,EAAY,CAAEtV,IAAKH,IAEhDqS,GAAamD,CAAS,IAGnBhT,EAAMwB,IAAW5B,SAChBiQ,EAAY,MACdb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAY,IAEdb,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,GACzBP,EAAIjK,KAAK,uCAAwC,GAAI8K,GACrDb,EAAIO,aAAa,EAAG,EAAG,GACvBM,GAAa,GACf,IAGK,CAACA,EAAY,GAAIZ,EAAW,ENOP0D,CAAc3D,EAAKhP,EAAO6P,EAAWZ,IAC9DY,EAAWZ,GO7GgBkE,EAACnE,EAAK7F,EAAS0G,EAAWZ,KACxD,MAAMG,EAAaJ,EAAIxO,SAAS2O,SAAS7L,OAEnC8P,EAAS,GAGTnB,EAAe,CAAC,GAAI,GAAI,GAAIoB,IAE9BxD,EAAY,SACdb,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAYuD,GAGdpE,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIW,aAAQnG,EAAW,QACvBwF,EAAIjK,KAAK,cAAe,IAAK8K,EAAW,CAAEL,MAAO,WACjDK,GAAayD,EAEbtE,EAAIjF,YAAY,IAChBiF,EAAIW,aAAQnG,EAAW,QACvBwF,EAAIO,aAAa,EAAG,EAAG,GAEvBP,EAAIjK,KAAK,OAAQqO,EAAQvD,GACzBb,EAAIjK,KAAK,OAAQqO,EAASnB,EAAa,GAAIpC,GAC3Cb,EAAIjK,KAAK,SAAUqO,EAASnB,EAAa,GAAKA,EAAa,GAAIpC,GAC/Db,EAAIjK,KACF,UACAqO,EAASnB,EAAa,GAAKA,EAAa,GAAKA,EAAa,GAC1DpC,GAGFA,GA5BmB,EA6BnBb,EAAIK,aAAa,GACjBL,EAAIgB,KAAKoD,EAAQvD,EAAW,IAAKA,GACjCA,GA/BmB,EAiCnBb,EAAIW,aAAQnG,EAAW,UAEvB,MAAM+J,EAAe,SAAC5J,GAA6C,IAArC6J,EAAUjK,UAAA3J,OAAA,QAAA4J,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIkK,EAAWlK,UAAA3J,OAAA,QAAA4J,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC3D,MAAMnH,EAAOuH,EAAO,UAAY,UAC1BX,EAAOW,EAAOX,MAAQ,UACtB0K,EAASF,GAAc7J,EAAO+J,QAAU,YAE9C,IAAIC,EAAU,CAAC,EACfrU,OAAOC,QAAQoK,GAAQ5H,SAAQxG,IAAkB,IAAhBsE,EAAK3B,GAAM3C,EAEhC,UAARsE,GACQ,SAARA,GACkB,iBAAV3B,GAAgC,OAAVA,IAE9ByV,EAAQ9T,GAAO3B,EACjB,IAGF,MAAM0V,EAAarN,KAAKsN,UAAUF,EAAS,KAAM,GAE3CG,EAAY9E,EAAI8B,gBAAgB1O,EAAM6P,EAAa,GAAK,GACxD8B,EAAY/E,EAAI8B,gBAAgB9H,EAAMiJ,EAAa,GAAK,GACxD+B,EAAchF,EAAI8B,gBAAgB4C,EAAQzB,EAAa,GAAK,GAC5DgC,EAAcjF,EAAI8B,gBAAgB8C,EAAY3B,EAAa,IAE3DiC,EAAWtG,KAAKpB,IACpBsH,EAAUlU,OACVmU,EAAUnU,OACVoU,EAAYpU,OACZqU,EAAYrU,QAKViQ,EAnEa,EAkEKqE,EACU9E,EAAa,KAC3CJ,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAYuD,GAId,IAAK,IAAIe,EAAI,EAAGA,EAAID,EAAUC,IACxBL,EAAUK,IAAInF,EAAIjK,KAAK+O,EAAUK,GAAIf,EAAQvD,GAC7CkE,EAAUI,IACZnF,EAAIjK,KAAKgP,EAAUI,GAAIf,EAASnB,EAAa,GAAIpC,GAC/CmE,EAAYG,IACdnF,EAAIjK,KACFiP,EAAYG,GACZf,EAASnB,EAAa,GAAKA,EAAa,GACxCpC,GAEAoE,EAAYE,IACdnF,EAAIjK,KACFkP,EAAYE,GACZf,EAASnB,EAAa,GAAKA,EAAa,GAAKA,EAAa,GAC1DpC,GAIJA,GA5Fe,EA+FK,iBAAXlG,GAAkC,OAAXA,GAChCrK,OAAOC,QAAQoK,GAAQ5H,SAAQrC,IAAkB,IAAhBG,EAAK3B,GAAMwB,EACrB,iBAAVxB,GAAgC,OAAVA,GAC/BqV,EAAarV,EAAO8K,EAAMyK,EAAc,EAC1C,GAGN,EAWA,OATAtK,EAAQpH,SAAS4H,IACXkG,EAzGa,EAyGYT,EAAa,KACxCJ,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCY,EAAYuD,GAEdG,EAAa5J,GACbkG,GAAa,CAAC,IAET,CAACA,EAAY,GAAIZ,EAAW,EPTPkE,CACxBnE,EACA7F,EACA0G,EACAZ,GQjH4BmF,EAChCpF,EACAnI,EACA6J,EACArT,EACA4R,KAGA,MAAM9D,EAAatE,EAASQ,QAAQrK,cAAc,OAClD,IAAKmO,EAcH,OAbIuF,EAAgB,MAClB1B,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCyB,EAAgB,IAElB1B,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIW,aAAQnG,EAAW,QACvBwF,EAAIjK,KAAK,mBAAoB,IAAK2L,EAAgB,GAAI,CAAElB,MAAO,WAC/DR,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,IAAK,EAAG,GACzBP,EAAIjK,KAAK,oCAAqC,GAAI2L,QAClD1B,EAAIqF,KAAK,mBAAmBhX,GAAS,iBAIvC,MAAM+N,EAAYD,EAAWE,WAAU,GACjCC,EAAOH,EAAWI,UAClBnI,EAAQkI,EAAKlI,MACbE,EAASgI,EAAKhI,OAEpB8H,EAAUI,aAAa,UAAW,GAAGF,EAAKzC,KAAKyC,EAAKvC,KAAK3F,KAASE,KAClE8H,EAAUI,aAAa,QAASpI,GAChCgI,EAAUI,aAAa,SAAUlI,GAEjC,MACMmI,GADa,IAAIC,eACMC,kBAAkBP,GACzClJ,EAAO,IAAIC,KAAK,CAACsJ,GAAY,CAAErJ,KAAM,gCACrCzE,EAAM6B,IAAI6C,gBAAgBH,GAC1Be,EAAM,IAAIU,MAEhBV,EAAI2I,OAAS,KACX,MAAMC,EAAS9O,SAASuF,cAAc,UAEtCuJ,EAAOzI,MADa,EACLA,EACfyI,EAAOvI,OAFa,EAEJA,EAChB,MAAMwI,EAAMD,EAAOE,WAAW,MAC9BD,EAAIE,UAAY,QAChBF,EAAIG,SAAS,EAAG,EAAGJ,EAAOzI,MAAOyI,EAAOvI,QACxCwI,EAAII,UAAUjJ,EAAK,EAAG,EANF,EAMKG,EANL,EAM0BE,GAE9C,MAAM5C,EAAO3D,SAASuF,cAAc,KACpC5B,EAAKlD,KAAOqO,EAAOM,UAAU,aAC7B,MAAMmI,EAAW,IACXC,EAAY,IAClB,IAAIC,EAAWpR,EACXqR,EAAYnR,EAChB,MAAMoR,EAAcF,EAAWC,GAE3BD,EAAWF,GAAYG,EAAYF,KACjCC,EAAWF,EAAWG,EAAYF,GACpCC,EAAWF,EACXG,EAAYH,EAAWI,IAEvBD,EAAYF,EACZC,EAAWD,EAAYG,IAI3B,MACM7L,GADYmG,EAAIxO,SAAS2O,SAAS/L,MACjBoR,GAAY,EAC7BpF,EAAaJ,EAAIxO,SAAS2O,SAAS7L,OAErCoN,EAAgB+D,EAAY,GAAKrF,GACnCJ,EAAI6B,UACJ5B,EAAaF,EAAgBC,EAAKC,GAClCyB,EAAgB,IAEhBA,GAAiB,GAGnB1B,EAAIjF,YAAY,IAChBiF,EAAIO,aAAa,EAAG,IAAK,KACzBP,EAAIjK,KAAK,mBAAoB,IAAK2L,EAAgB,GAAI,CAAElB,MAAO,WAC/DR,EAAI2F,SAASjU,EAAKlD,KAAM,MAAOqL,EAAG6H,EAAgB,GAAI8D,EAAUC,GAWhEjV,IAAIiD,gBAAgB9E,GACpBqR,EAAIqF,KAAK,mBAAmBhX,GAAS,gBAAgB,EAGvD4F,EAAImJ,QAAU,KACZC,QAAQrN,MAAM,uDAAuD,EAGvEiE,EAAIJ,IAAMlF,CAAG,ERYXyW,CAAmBpF,EAAKnI,EAAUgJ,EAAWlR,EAAKtB,MAAO4R,GACzDlQ,GAAW,EAAM,EAMsCzC,GAAG,kBAAiB,mBAGzEZ,EAAAA,cAAA,OAAKC,UAAU,SAASmD,GAAWpD,EAAAA,cAAA,KAAGC,UAAU,gBAC5C,ES/FV,EArBYiZ,KACV,MAAOpZ,EAAWC,IAAgBoD,EAAAA,EAAAA,UAAS,WAE3C,OACEnD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAACmZ,EAAa,CAACrZ,UAAWA,EAAWC,aAAcA,IACnDC,EAAAA,cAAA,OAAKC,UAAU,eACE,YAAdH,GAA2BE,EAAAA,cAACgD,EAAO,MACrB,UAAdlD,GAAyBE,EAAAA,cAACwF,EAAK,MACjB,WAAd1F,GAA0BE,EAAAA,cAACoZ,EAAM,MACnB,YAAdtZ,GAA2BE,EAAAA,cAACqZ,EAAM,MACpB,WAAdvZ,GAA0BE,EAAAA,cAACkO,EAAM,MACnB,kBAAdpO,GAAiCE,EAAAA,cAACmR,EAAa,MACjC,aAAdrR,GAA4BE,EAAAA,cAACuU,EAAW,OAG3CvU,EAAAA,cAACoT,EAAM,MACH,ECxBGkG,EAAAA,WAAoBjY,SAASkY,eAAe,SACpDC,OAAOxZ,EAAAA,cAACkZ,EAAG,M,GCLZO,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB7L,IAAjB8L,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAU1N,KAAK6N,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBM,EAAID,E9BzBpBra,EAAW,GACfga,EAAoBO,EAAI,CAAC7X,EAAQ8X,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAS7B,EAAI,EAAGA,EAAI/Y,EAASwE,OAAQuU,IAAK,CAGzC,IAFA,IAAKyB,EAAUC,EAAIC,GAAY1a,EAAS+Y,GACpC8B,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAShW,OAAQsW,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaxW,OAAO6G,KAAKiP,EAAoBO,GAAGzP,OAAOrG,GAASuV,EAAoBO,EAAE9V,GAAK+V,EAASM,MAC9IN,EAASO,OAAOD,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACb7a,EAAS+a,OAAOhC,IAAK,GACrB,IAAIiC,EAAIP,SACErM,IAAN4M,IAAiBtY,EAASsY,EAC/B,CACD,CACA,OAAOtY,CAnBP,CAJCgY,EAAWA,GAAY,EACvB,IAAI,IAAI3B,EAAI/Y,EAASwE,OAAQuU,EAAI,GAAK/Y,EAAS+Y,EAAI,GAAG,GAAK2B,EAAU3B,IAAK/Y,EAAS+Y,GAAK/Y,EAAS+Y,EAAI,GACrG/Y,EAAS+Y,GAAK,CAACyB,EAAUC,EAAIC,EAqBjB,EC1BVxa,EAAWgE,OAAO+W,eAAkBC,GAAShX,OAAO+W,eAAeC,GAASA,GAASA,EAAa,UAQtGlB,EAAoBmB,EAAI,SAASrY,EAAOsY,GAEvC,GADU,EAAPA,IAAUtY,EAAQuY,KAAKvY,IAChB,EAAPsY,EAAU,OAAOtY,EACpB,GAAoB,iBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPsY,GAAatY,EAAMwY,WAAY,OAAOxY,EAC1C,GAAW,GAAPsY,GAAoC,mBAAftY,EAAMyY,KAAqB,OAAOzY,CAC5D,CACA,IAAI0Y,EAAKtX,OAAOuX,OAAO,MACvBzB,EAAoBgB,EAAEQ,GACtB,IAAIE,EAAM,CAAC,EACXzb,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAI+L,EAAiB,EAAPmP,GAAYtY,EAAyB,iBAAXmJ,KAAyBhM,EAAeuW,QAAQvK,GAAUA,EAAU/L,EAAS+L,GACxH/H,OAAOyX,oBAAoB1P,GAAStF,SAASlC,GAASiX,EAAIjX,GAAO,IAAO3B,EAAM2B,KAI/E,OAFAiX,EAAa,QAAI,IAAM,EACvB1B,EAAoBlN,EAAE0O,EAAIE,GACnBF,CACR,E8BxBAxB,EAAoBlN,EAAI,CAACqN,EAASyB,KACjC,IAAI,IAAInX,KAAOmX,EACX5B,EAAoB6B,EAAED,EAAYnX,KAASuV,EAAoB6B,EAAE1B,EAAS1V,IAC5EP,OAAO4X,eAAe3B,EAAS1V,EAAK,CAAEsX,YAAY,EAAMC,IAAKJ,EAAWnX,IAE1E,ECHDuV,EAAoB1I,EAAI,IAAOnQ,QAAQC,UCHvC4Y,EAAoBiC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOb,MAAQ,IAAIc,SAAS,cAAb,EAChB,CAAE,MAAO7K,GACR,GAAsB,iBAAX9O,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBwX,EAAoB6B,EAAI,CAACX,EAAKkB,IAAUlY,OAAOmY,UAAUC,eAAe/P,KAAK2O,EAAKkB,GCClFpC,EAAoBgB,EAAKb,IACH,oBAAXoC,QAA0BA,OAAOC,aAC1CtY,OAAO4X,eAAe3B,EAASoC,OAAOC,YAAa,CAAE1Z,MAAO,WAE7DoB,OAAO4X,eAAe3B,EAAS,aAAc,CAAErX,OAAO,GAAO,E,MCA9D,IAAI2Z,EAAkB,CACrB,IAAK,GAaNzC,EAAoBO,EAAEO,EAAK4B,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4B7Y,KACvD,IAGIkW,EAAUyC,GAHTlC,EAAUqC,EAAajT,GAAW7F,EAGhBgV,EAAI,EAC3B,GAAGyB,EAASsC,MAAM5b,GAAgC,IAAxBub,EAAgBvb,KAAa,CACtD,IAAI+Y,KAAY4C,EACZ7C,EAAoB6B,EAAEgB,EAAa5C,KACrCD,EAAoBM,EAAEL,GAAY4C,EAAY5C,IAGhD,GAAGrQ,EAAS,IAAIlH,EAASkH,EAAQoQ,EAClC,CAEA,IADG4C,GAA4BA,EAA2B7Y,GACrDgV,EAAIyB,EAAShW,OAAQuU,IACzB2D,EAAUlC,EAASzB,GAChBiB,EAAoB6B,EAAEY,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO1C,EAAoBO,EAAE7X,EAAO,EAGjCqa,EAAqBC,KAAuC,iCAAIA,KAAuC,kCAAK,GAChHD,EAAmBpW,QAAQgW,EAAqBM,KAAK,KAAM,IAC3DF,EAAmBrW,KAAOiW,EAAqBM,KAAK,KAAMF,EAAmBrW,KAAKuW,KAAKF,G,KC7CvF,IAAIG,EAAsBlD,EAAoBO,OAAEnM,EAAW,CAAC,KAAK,IAAO4L,EAAoB,QAC5FkD,EAAsBlD,EAAoBO,EAAE2C,E","sources":["webpack://website-info-crawler/webpack/runtime/chunk loaded","webpack://website-info-crawler/webpack/runtime/create fake namespace object","webpack://website-info-crawler/./src/components/navigator/TabNavigation.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchWebsiteInfo.js","webpack://website-info-crawler/./src/tabs/summary/Summary.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchLinks.js","webpack://website-info-crawler/./src/tabs/links/Links.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchImages.js","webpack://website-info-crawler/./src/tabs/imagestab/Images.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchHeaders.js","webpack://website-info-crawler/./src/tabs/header/Header.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchSchema.js","webpack://website-info-crawler/./src/tabs/utils/renderGraph.js","webpack://website-info-crawler/./src/tabs/utils/buildGraph.js","webpack://website-info-crawler/./src/tabs/schema/Schema.jsx","webpack://website-info-crawler/./src/tabs/utils/downloadGraphAsPng.js","webpack://website-info-crawler/./src/tabs/pagespeed/PageSpeed.jsx","webpack://website-info-crawler/./src/components/footer/Footer.jsx","webpack://website-info-crawler/./src/components/downloadpdf/utils/borderandfooter.js","webpack://website-info-crawler/./src/components/downloadpdf/Downloadpdf.jsx","webpack://website-info-crawler/./src/components/downloadpdf/utils/addMetaLinksDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addImageDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addLinksDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addHeaderDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addImageTable.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addLinksTable.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addschemadetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/downloadGraphAspdf.js","webpack://website-info-crawler/./src/App.jsx","webpack://website-info-crawler/./src/popup.js","webpack://website-info-crawler/webpack/bootstrap","webpack://website-info-crawler/webpack/runtime/define property getters","webpack://website-info-crawler/webpack/runtime/ensure chunk","webpack://website-info-crawler/webpack/runtime/global","webpack://website-info-crawler/webpack/runtime/hasOwnProperty shorthand","webpack://website-info-crawler/webpack/runtime/make namespace object","webpack://website-info-crawler/webpack/runtime/jsonp chunk loading","webpack://website-info-crawler/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import React from \"react\";\r\nimport \"./TabNavigation.css\";\r\n\r\nconst TabNavigation = ({ activeTab, setActiveTab }) => (\r\n  <div className=\"tabs\">\r\n    <button\r\n      className={`tab-button ${activeTab === \"summary\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"summary\")}\r\n    >\r\n      Summary\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"links\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"links\")}\r\n    >\r\n      Links\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"images\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"images\")}\r\n    >\r\n      Images\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"headers\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"headers\")}\r\n    >\r\n      Headers\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"schema\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"schema\")}\r\n    >\r\n      Schema\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"pagespeedtest\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"pagespeedtest\")}\r\n    >\r\n      PageSpeed\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"download\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"download\")}\r\n    >\r\n      Download\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default TabNavigation;\r\n","export const fetchWebsiteInfo = async () => {\r\n  const [tab] = await chrome.tabs.query({\r\n    active: true,\r\n    currentWindow: true,\r\n  });\r\n  const tabId = tab.id;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    chrome.scripting.executeScript(\r\n      {\r\n        target: { tabId },\r\n        func: () => {\r\n          const meta = (name) =>\r\n            document.querySelector(`meta[name=\"${name}\"]`)?.content;\r\n          const robotsMeta =\r\n            document.querySelector('meta[name=\"robots\"]')?.content ||\r\n            \"Not Available\";\r\n          const xRobotsMeta =\r\n            document.querySelector('meta[http-equiv=\"X-Robots-Tag\"]')\r\n              ?.content || \"Not Available\";\r\n          const lang = document.documentElement.lang || \"Not Available\";\r\n\r\n          return {\r\n            title: document.title,\r\n            description: meta(\"description\") || \"Not Available\",\r\n            canonical:\r\n              document.querySelector('link[rel=\"canonical\"]')?.href ||\r\n              \"Not Available\",\r\n            robots: robotsMeta,\r\n            xRobots: xRobotsMeta,\r\n            lang: lang,\r\n            url: window.location.href,\r\n          };\r\n        },\r\n      },\r\n      ([result]) => {\r\n        if (result && result.result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\r\n            new Error(\r\n              \"Error fetching the Metalinks Summary, Please try again later.\"\r\n            )\r\n          );\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchWebsiteInfo } from \"../utils/fetchWebsiteInfo\";\r\nimport \"./Summary.css\";\r\n\r\nconst InfoRow = ({ label, value, valid, message }) => (\r\n  <p className={valid ? \"valid\" : \"invalid\"}>\r\n    <span>\r\n      <strong>{label}</strong>\r\n    </span>\r\n    <span>:</span>\r\n    <span> {value}</span>\r\n    {valid ? (\r\n      <span className=\"status green\">✔️</span>\r\n    ) : (\r\n      <span className=\"status red\" title={message}>\r\n        ❌\r\n      </span>\r\n    )}\r\n  </p>\r\n);\r\n\r\nconst content_val = {\r\n  Title: \"Have a title tag of optimal length (between 50 and 60 characters).\",\r\n  Description:\r\n    \"Have a description tag of optimal length (150 to 160 characters).\",\r\n  Canonical:\r\n    \"Search engines have a limited budget for crawling and indexing websites, Canonical tags help save time by indicating which URL to index.\",\r\n  Language:\r\n    \"This HTML attribute is used by various programs, search engines included, to help figure out what language the page is written in. This is helpful when trying to match the right content to the right user.\",\r\n  \"Robots Meta\":\r\n    \"A robots meta tag is an HTML snippet that tells search engines how to interact with a page, including how to index and display it in search results.\",\r\n  \"X-Robots Meta\":\r\n    \"X-robots meta tag is useful for controlling how search engines index and crawl non-HTML files, like images, PDFs, and other multimedia content.\",\r\n};\r\n\r\nconst Summary = () => {\r\n  const [info, setInfo] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getInfo = async () => {\r\n      try {\r\n        const data = await fetchWebsiteInfo();\r\n        setInfo(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getInfo();\r\n  }, []);\r\n\r\n  const checkValidity = (label, value) => {\r\n    switch (label) {\r\n      case \"Title\":\r\n        return {\r\n          valid: value && value.length >= 50 && value.length <= 60,\r\n          message: content_val.Title,\r\n        };\r\n      case \"Description\":\r\n        return {\r\n          valid: value && value.length >= 150 && value.length <= 160,\r\n          message: content_val.Description,\r\n        };\r\n      default:\r\n        return {\r\n          valid: value && value !== \"Not Available\",\r\n          message: content_val[label] || \"No information available.\",\r\n        };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"active-tab-container\">\r\n      {loading ? (\r\n        <i className=\"loader --1\"></i>\r\n      ) : error ? (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"info\">\r\n          {Object.entries({\r\n            Title: info.title,\r\n            Description: info.description,\r\n            Canonical: info.canonical,\r\n            URL: info.url,\r\n            Language: info.lang,\r\n            \"Robots Meta\": info.robots,\r\n            \"X-Robots Meta\": info.xRobots,\r\n          }).map(([label, value]) => {\r\n            const { valid, message } = checkValidity(label, value);\r\n            return (\r\n              <InfoRow\r\n                key={label}\r\n                label={label}\r\n                value={value}\r\n                valid={valid}\r\n                message={message}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      {info.url && (\r\n        <div className=\"buttons\">\r\n          <button\r\n            onClick={() => window.open(`${info.url}/sitemap.xml`, \"_blank\")}\r\n          >\r\n            Sitemap\r\n          </button>\r\n          <button\r\n            onClick={() => window.open(`${info.url}/robots.txt`, \"_blank\")}\r\n          >\r\n            Robots.txt\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n\r\n// Using Chrome Storage.\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"./Summary.css\";\r\n\r\n// const Summary = ({ data, saveData }) => {\r\n//   const [info, setInfo] = useState(data || {});\r\n//   const [loading, setLoading] = useState(!data);\r\n\r\n//   useEffect(() => {\r\n//     if (!data) {\r\n//       const fetchWebsiteInfo = async () => {\r\n//         const [tab] = await chrome.tabs.query({\r\n//           active: true,\r\n//           currentWindow: true,\r\n//         });\r\n//         const tabId = tab.id;\r\n\r\n//         chrome.scripting.executeScript(\r\n//           {\r\n//             target: { tabId },\r\n//             func: () => {\r\n//               const meta = (name) =>\r\n//                 document.querySelector(`meta[name=\"${name}\"]`)?.content;\r\n//               const robotsMeta =\r\n//                 document.querySelector('meta[name=\"robots\"]')?.content ||\r\n//                 \"Not Available\";\r\n//               const xRobotsMeta =\r\n//                 document.querySelector('meta[http-equiv=\"X-Robots-Tag\"]')\r\n//                   ?.content || \"Not Available\";\r\n//               const lang = document.documentElement.lang || \"Not Available\";\r\n\r\n//               return {\r\n//                 title: document.title,\r\n//                 description: meta(\"description\") || \"Not Available\",\r\n//                 canonical:\r\n//                   document.querySelector('link[rel=\"canonical\"]')?.href ||\r\n//                   \"Not Available\",\r\n//                 robots: robotsMeta,\r\n//                 xRobots: xRobotsMeta,\r\n//                 lang: lang,\r\n//                 url: window.location.href,\r\n//               };\r\n//             },\r\n//           },\r\n//           ([result]) => {\r\n//             const fetchedData = result.result;\r\n//             setInfo(fetchedData);\r\n//             saveData(fetchedData);\r\n//             setLoading(false);\r\n//           }\r\n//         );\r\n//       };\r\n\r\n//       fetchWebsiteInfo();\r\n//     }\r\n//   }, [data, saveData]);\r\n\r\n//   return (\r\n//     <div className=\"active-tab-container\">\r\n//       <h2>Summary</h2>\r\n//       {loading ? (\r\n//         <img src=\"image/loading.gif\" alt=\"Loading\" className=\"loading\"></img>\r\n//       ) : (\r\n//         <div className=\"info\">\r\n//           <p>\r\n//             <span>\r\n//               <strong>Title</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.title}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Description</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.description}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Canonical</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.canonical}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>URL</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.url}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Language</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.lang}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.robots}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>X-Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.xRobots}</span>\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n//       {info.url && (\r\n//         <div className=\"buttons\">\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/sitemap.xml`, \"_blank\")}\r\n//           >\r\n//             Sitemap\r\n//           </button>\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/robots.txt`, \"_blank\")}\r\n//           >\r\n//             Robots.txt\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Summary;\r\n","export const fetchLinks = async () => {\r\n  const [tab] = await chrome.tabs.query({\r\n    active: true,\r\n    currentWindow: true,\r\n  });\r\n  const tabId = tab.id;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    chrome.scripting.executeScript(\r\n      {\r\n        target: { tabId },\r\n        func: () => {\r\n          const links = Array.from(document.querySelectorAll(\"a\")).map((a) => ({\r\n            href: a.href || null,\r\n            title: a.textContent.trim() || \"No title\",\r\n          }));\r\n\r\n          const url = window.location.origin;\r\n\r\n          const internal = links.filter((link) => link.href?.startsWith(url));\r\n          const external = links.filter(\r\n            (link) => link.href && !link.href.startsWith(url)\r\n          );\r\n          const withoutHref = links.filter((link) => !link.href);\r\n          const unique = [...new Set(links.map((link) => link.href))].map(\r\n            (href) => ({\r\n              href,\r\n              title:\r\n                links.find((link) => link.href === href)?.title || \"No title\",\r\n            })\r\n          );\r\n\r\n          return {\r\n            total: links,\r\n            internal,\r\n            external,\r\n            withoutHref,\r\n            unique,\r\n          };\r\n        },\r\n      },\r\n      ([result]) => {\r\n        if (result && result.result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\r\n            new Error(\r\n              \"Error Fetching the Links Details, Please try again later.\"\r\n            )\r\n          );\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchLinks } from \"../utils/fetchLinks\";\r\nimport \"./Links.css\";\r\n\r\nconst Links = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const [view, setView] = useState(\"total\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getLinks = async () => {\r\n      try {\r\n        const data = await fetchLinks();\r\n        setLinks(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getLinks();\r\n  }, []);\r\n\r\n  const exportToCSV = () => {\r\n    const csvRows = [];\r\n    csvRows.push(\"URL,Title,Category,Count\");\r\n    [\"internal\", \"external\", \"withoutHref\"].forEach((category) => {\r\n      links[category]?.forEach(({ href, title }) => {\r\n        const count =\r\n          links.total?.filter((link) => link.href === href).length || 0;\r\n        csvRows.push(\r\n          `\"${href || \"No href\"}\",\"${title}\",\"${category}\",\"${count}\"`\r\n        );\r\n      });\r\n    });\r\n    const csvContent = csvRows.join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `links.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n  const renderLinkCount = (label, category) => {\r\n    const count = links[category]?.length || 0;\r\n    return (\r\n      <div className=\"link-item\">\r\n        <span>{label}</span>\r\n        <span id={category === \"withoutHref\" && count > 0 ? \"red-text\" : \"\"}>\r\n          {count}\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n  const renderFilterButton = (label, category) => (\r\n    <button\r\n      className={view === category ? \"active\" : \"\"}\r\n      onClick={() => setView(category)}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"active-tab-container\">\r\n      {loading ? (\r\n        <i class=\"loader --1\"></i>\r\n      ) : error ? (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"link-counts\">\r\n            {renderLinkCount(\"Total\", \"total\")}\r\n            {renderLinkCount(\"Internal\", \"internal\")}\r\n            {renderLinkCount(\"External\", \"external\")}\r\n            {renderLinkCount(\"Without href\", \"withoutHref\")}\r\n            {renderLinkCount(\"Unique\", \"unique\")}\r\n          </div>\r\n\r\n          <div className=\"filter-buttons\">\r\n            {renderFilterButton(\"Total\", \"total\")}\r\n            {renderFilterButton(\"Internal\", \"internal\")}\r\n            {renderFilterButton(\"External\", \"external\")}\r\n            {renderFilterButton(\"No href\", \"withoutHref\")}\r\n            {renderFilterButton(\"Unique\", \"unique\")}\r\n            <button className=\"link-export-button\" onClick={exportToCSV}>\r\n              Export\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"links-table\">\r\n            {links[view]?.length > 0 ? (\r\n              links[view].map((link, index) => (\r\n                <React.Fragment key={index}>\r\n                  <div className=\"link-details\">\r\n                    <p>\r\n                      <strong>URL:</strong>\r\n                      {link.href ? (\r\n                        <a\r\n                          href={link.href}\r\n                          className=\"link-url\"\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {link.href}\r\n                        </a>\r\n                      ) : (\r\n                        <span id=\"red-text\">No href</span>\r\n                      )}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Title:</strong>{\" \"}\r\n                      <span id={link.title === \"No title\" ? \"red-text\" : \"\"}>\r\n                        {link.title}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"link-count\">\r\n                    <p>\r\n                      <strong>Count:</strong>{\" \"}\r\n                      {links.total?.filter((l) => l.href === link.href)\r\n                        .length || 0}\r\n                    </p>\r\n                  </div>\r\n                </React.Fragment>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-items\" id=\"no-links\">\r\n                <p>\r\n                  No Links to show in this <br /> Category\r\n                </p>\r\n                <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","export const fetchImages = async (tabId) => {\r\n  return new Promise((resolve, reject) => {\r\n    chrome.scripting.executeScript(\r\n      {\r\n        target: { tabId },\r\n        func: () => {\r\n          const images = Array.from(document.querySelectorAll(\"img\")).map(\r\n            (img) => ({\r\n              src: img.src || \"No SRC\",\r\n              alt: img.alt.trim() || \"No ALT\",\r\n              longDesc: img.longdesc || \"No Description\",\r\n              width: img.naturalWidth || \"N/A\",\r\n              height: img.naturalHeight || \"N/A\",\r\n            })\r\n          );\r\n\r\n          const noAlt = images.filter((img) => img.alt === \"No ALT\");\r\n          const noLongDesc = images.filter(\r\n            (img) => img.longDesc === \"No Description\"\r\n          );\r\n          const noSrc = images.filter((img) => img.src === \"No SRC\");\r\n\r\n          return {\r\n            total: images,\r\n            noAlt,\r\n            noLongDesc,\r\n            noSrc,\r\n          };\r\n        },\r\n      },\r\n      ([result]) => {\r\n        if (result?.result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\r\n            new Error(\r\n              \"Error Fetching the images details, Please try again later.\"\r\n            )\r\n          );\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchImages } from \"../utils/fetchImages\";\r\nimport \"./Images.css\";\r\n\r\nconst Image = () => {\r\n  const [images, setImages] = useState({\r\n    total: [],\r\n    noAlt: [],\r\n    noLongDesc: [],\r\n    noSrc: [],\r\n  });\r\n  const [view, setView] = useState(\"total\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchImageData = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({\r\n          active: true,\r\n          currentWindow: true,\r\n        });\r\n        const tabId = tab.id;\r\n        const imagesData = await fetchImages(tabId);\r\n        setImages(imagesData);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchImageData();\r\n  }, []);\r\n\r\n  const exportCSV = () => {\r\n    const csvData = images[view]\r\n      .map(\r\n        (img) =>\r\n          `${img.src},${img.alt},${img.longDesc},${img.width}x${img.height}`\r\n      )\r\n      .join(\"\\n\");\r\n    const blob = new Blob([`URL,ALT,LongDesc,Size\\n${csvData}`], {\r\n      type: \"text/csv\",\r\n    });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"images.csv\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleImageClick = (imgSrc) => {\r\n    const newTab = window.open();\r\n    if (newTab) {\r\n      newTab.document.body.innerHTML = `\r\n        <div style=\"text-align: center; margin: 20px;\">\r\n          <img src=\"${imgSrc}\" alt=\"Full Image\" style=\"max-width: 100%; height: auto; margin-bottom: 20px;\"/><br/>\r\n          <a href=\"${imgSrc}\" download=\"${imgSrc.split(\"/\").pop()}\" \r\n            style=\"display: inline-block; padding: 10px 20px; background-color: #0056b3; color: white; text-decoration: none; border-radius: 5px;\">\r\n            Download\r\n          </a>\r\n        </div>\r\n      `;\r\n    }\r\n  };\r\n\r\n  const renderImageItem = (label, count, category) => {\r\n    return (\r\n      <div className=\"image-item\">\r\n        <span>{label}</span>\r\n        <span id={category !== \"total\" && count > 0 ? \"red-text\" : \"\"}>\r\n          {count || 0}\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"active-tab-container\">\r\n      {loading ? (\r\n        <i class=\"loader --1\"></i>\r\n      ) : error ? (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"image-counts\">\r\n            {renderImageItem(\"Total Images\", images.total?.length, \"total\")}\r\n            {renderImageItem(\"Without ALT\", images.noAlt?.length, \"noAlt\")}\r\n            {renderImageItem(\r\n              \"Without Description\",\r\n              images.noLongDesc?.length,\r\n              \"noLongDesc\"\r\n            )}\r\n            {renderImageItem(\"Without SRC\", images.noSrc?.length, \"noSrc\")}\r\n          </div>\r\n          <div className=\"image-nav\">\r\n            <button onClick={() => setView(\"total\")}>Total</button>\r\n            <button onClick={() => setView(\"noAlt\")}>No ALT</button>\r\n            <button onClick={() => setView(\"noLongDesc\")}>\r\n              No Description\r\n            </button>\r\n            <button onClick={() => setView(\"noSrc\")}>No SRC</button>\r\n            <button className=\"export-button\" onClick={exportCSV}>\r\n              Export\r\n            </button>\r\n          </div>\r\n          <div className=\"images-table\">\r\n            {images[view].length === 0 ? (\r\n              <div className=\"no-items\">\r\n                <p>No Images to show in this Category</p>\r\n                <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n              </div>\r\n            ) : (\r\n              images[view].map((img, index) => (\r\n                <React.Fragment key={index}>\r\n                  <div className=\"image-details\">\r\n                    <p>\r\n                      <strong>URL:</strong>{\" \"}\r\n                      <span\r\n                        onClick={() => handleImageClick(img.src)}\r\n                        className=\"image-url\"\r\n                        id={img.src === \"No SRC\" ? \"red-text\" : \"image-url\"}\r\n                      >\r\n                        {img.src || \"No SRC\"}\r\n                      </span>\r\n                    </p>\r\n                    <p>\r\n                      <strong>ALT:</strong>{\" \"}\r\n                      <span id={img.alt === \"No ALT\" ? \"red-text\" : \"\"}>\r\n                        {img.alt}\r\n                      </span>\r\n                    </p>\r\n                    <p>\r\n                      <strong>Description:</strong>{\" \"}\r\n                      <span\r\n                        id={img.longDesc === \"No Description\" ? \"red-text\" : \"\"}\r\n                      >\r\n                        {img.longDesc}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"image-preview\">\r\n                    {img.src !== \"No SRC\" ? (\r\n                      <img\r\n                        src={img.src}\r\n                        alt=\"Preview\"\r\n                        onClick={() => handleImageClick(img.src)}\r\n                      />\r\n                    ) : (\r\n                      <p>No SRC</p>\r\n                    )}\r\n                    <p>\r\n                      {img.width}x{img.height}\r\n                    </p>\r\n                  </div>\r\n                </React.Fragment>\r\n              ))\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","export const fetchHeaders = async (tabId) => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      chrome.scripting.executeScript(\r\n        {\r\n          target: { tabId },\r\n          func: () => {\r\n            const headers = [];\r\n            const headerTags = Array.from(\r\n              document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\")\r\n            );\r\n            headerTags.forEach((header) => {\r\n              headers.push({\r\n                tag: header.tagName.toLowerCase(),\r\n                text: header.textContent.trim(),\r\n              });\r\n            });\r\n            return headers;\r\n          },\r\n        },\r\n        ([result]) => {\r\n          if (chrome.runtime.lastError) {\r\n            reject(chrome.runtime.lastError);\r\n          } else {\r\n            const fetchedHeaders = result.result || [];\r\n            const counts = {\r\n              h1: fetchedHeaders.filter((h) => h.tag === \"h1\").length,\r\n              h2: fetchedHeaders.filter((h) => h.tag === \"h2\").length,\r\n              h3: fetchedHeaders.filter((h) => h.tag === \"h3\").length,\r\n              h4: fetchedHeaders.filter((h) => h.tag === \"h4\").length,\r\n              h5: fetchedHeaders.filter((h) => h.tag === \"h5\").length,\r\n              h6: fetchedHeaders.filter((h) => h.tag === \"h6\").length,\r\n            };\r\n            resolve({ headers: fetchedHeaders, counts });\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchHeaders } from \"../utils/fetchHeaders\";\r\nimport \"./Header.css\";\r\n\r\nconst Headers = () => {\r\n  const [headers, setHeaders] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [headerCounts, setHeaderCounts] = useState({\r\n    h1: 0,\r\n    h2: 0,\r\n    h3: 0,\r\n    h4: 0,\r\n    h5: 0,\r\n    h6: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getHeaders = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({\r\n          active: true,\r\n          currentWindow: true,\r\n        });\r\n        const tabId = tab.id;\r\n\r\n        const { headers: fetchedHeaders, counts } = await fetchHeaders(tabId);\r\n        setHeaders(fetchedHeaders);\r\n        setHeaderCounts(counts);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getHeaders();\r\n  }, []);\r\n\r\n  const isEmpty = Object.values(headerCounts).every((count) => count === 0);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <i class=\"loader --1\"></i>\r\n      ) : error ? (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"header-counts\">\r\n            {Object.keys(headerCounts).map((key) => (\r\n              <div className=\"header-item\" key={key}>\r\n                <span>{key.toUpperCase()}</span>\r\n                <span\r\n                  id={\r\n                    (key === \"h1\" || key === \"h2\") && headerCounts[key] === 0\r\n                      ? \"red-text\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {headerCounts[key] || 0}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {isEmpty ? (\r\n            <div className=\"no-items\" id=\"no-headers\">\r\n              <p>No Headers Found on this Website.</p>\r\n              <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"header-structure\">\r\n              {headers.map((header, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`header-content header-${header.tag}`}\r\n                >\r\n                  <span className=\"dashed-line\"></span>\r\n                  <strong>\r\n                    <span className=\"header-tag\">{header.tag}</span>\r\n                  </strong>\r\n                  <span className=\"header-text\">{header.text}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Headers;\r\n","export const fetchSchemas = async () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const [tab] = await chrome.tabs.query({\r\n        active: true,\r\n        currentWindow: true,\r\n      });\r\n\r\n      const tabId = tab.id;\r\n\r\n      chrome.scripting.executeScript(\r\n        {\r\n          target: { tabId },\r\n          func: () => {\r\n            const schemaScripts = Array.from(\r\n              document.querySelectorAll('script[type=\"application/ld+json\"]')\r\n            );\r\n            return schemaScripts\r\n              .map((script) => {\r\n                try {\r\n                  return JSON.parse(script.innerText);\r\n                } catch {\r\n                  return null;\r\n                }\r\n              })\r\n              .filter(Boolean);\r\n          },\r\n        },\r\n        (results) => {\r\n          if (chrome.runtime.lastError) {\r\n            reject(chrome.runtime.lastError);\r\n          } else if (results && results.length > 0) {\r\n            resolve(results[0].result || []);\r\n          } else {\r\n            resolve([]);\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      reject(new Error(\"Error Fetching the Schema, Please try again later.\"));\r\n    }\r\n  });\r\n};\r\n","import * as d3 from \"d3\";\r\nexport const renderGraph = (\r\n  graphRef,\r\n  { nodes, links },\r\n  linkDistance,\r\n  fontSize,\r\n  nodeSize,\r\n  isDragEnabled,\r\n  simulationRef,\r\n  width,\r\n  height\r\n) => {\r\n  d3.select(graphRef.current).selectAll(\"*\").remove();\r\n  const svg = d3\r\n    .select(graphRef.current)\r\n    .append(\"svg\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height)\r\n    .call(\r\n      d3\r\n        .zoom()\r\n        .scaleExtent([0.01, 5])\r\n        .on(\"zoom\", (event) => {\r\n          graphGroup.attr(\"transform\", event.transform);\r\n        })\r\n    );\r\n\r\n  const graphGroup = svg.append(\"g\");\r\n\r\n  svg\r\n    .append(\"defs\")\r\n    .append(\"marker\")\r\n    .attr(\"id\", \"arrow\")\r\n    .attr(\"viewBox\", \"0 -5 10 10\")\r\n    .attr(\"refX\", 25)\r\n    .attr(\"refY\", 0)\r\n    .attr(\"markerWidth\", 6)\r\n    .attr(\"markerHeight\", 6)\r\n    .attr(\"orient\", \"auto\")\r\n    .append(\"path\")\r\n    .attr(\"d\", \"M0,-5L10,0L0,5\")\r\n    .attr(\"fill\", \"#aaa\");\r\n\r\n  simulationRef.current = d3\r\n    .forceSimulation(nodes)\r\n    .force(\r\n      \"link\",\r\n      d3\r\n        .forceLink(links)\r\n        .id((d) => d.id)\r\n        .distance(linkDistance)\r\n    )\r\n    .force(\"charge\", d3.forceManyBody().strength(-300))\r\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\r\n\r\n  const link = graphGroup\r\n    .append(\"g\")\r\n    .attr(\"stroke\", \"#aaa\")\r\n    .attr(\"stroke-width\", 1)\r\n    .selectAll(\"line\")\r\n    .data(links)\r\n    .join(\"line\")\r\n    .attr(\"marker-end\", \"url(#arrow)\");\r\n\r\n  const linkLabel = graphGroup\r\n    .append(\"g\")\r\n    .selectAll(\"text\")\r\n    .data(links)\r\n    .join(\"text\")\r\n    .attr(\"class\", \"link-label\")\r\n    .text((d) => d.linkName || \"\")\r\n    .style(\"font-size\", `${fontSize}px`)\r\n    .style(\"fill\", \"#555\");\r\n\r\n  const node = graphGroup\r\n    .append(\"g\")\r\n    .selectAll(\"circle\")\r\n    .data(nodes)\r\n    .join(\"circle\")\r\n    .attr(\"r\", nodeSize)\r\n    .attr(\"fill\", (d) => d3.schemeCategory10[d.id % 10])\r\n    .call(\r\n      d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    );\r\n\r\n  const label = graphGroup\r\n    .append(\"g\")\r\n    .selectAll(\"text\")\r\n    .data(nodes)\r\n    .join(\"text\")\r\n    .attr(\"x\", 6)\r\n    .attr(\"y\", 3)\r\n    .text((d) => d.name)\r\n    .style(\"font-size\", `${fontSize}px`);\r\n\r\n  simulationRef.current.on(\"tick\", () => {\r\n    link\r\n      .attr(\"x1\", (d) => d.source.x)\r\n      .attr(\"y1\", (d) => d.source.y)\r\n      .attr(\"x2\", (d) => d.target.x)\r\n      .attr(\"y2\", (d) => d.target.y);\r\n\r\n    linkLabel\r\n      .attr(\"x\", (d) => (d.source.x + d.target.x) / 2)\r\n      .attr(\"y\", (d) => (d.source.y + d.target.y) / 2);\r\n\r\n    node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\r\n    label.attr(\"x\", (d) => d.x).attr(\"y\", (d) => d.y);\r\n  });\r\n\r\n  function dragstarted(event) {\r\n    if (!event.active) simulationRef.current.alphaTarget(0.3).restart();\r\n    event.subject.fx = event.subject.x;\r\n    event.subject.fy = event.subject.y;\r\n  }\r\n\r\n  function dragged(event) {\r\n    event.subject.fx = event.x;\r\n    event.subject.fy = event.y;\r\n  }\r\n\r\n  function dragended(event) {\r\n    if (!event.active) simulationRef.current.alphaTarget(0);\r\n    event.subject.fx = null;\r\n    event.subject.fy = null;\r\n  }\r\n};\r\n","export const buildGraphData = (schemas) => {\r\n  const nodes = [];\r\n  const links = [];\r\n  const rootNode = { id: 0, name: \"Schema\" };\r\n  nodes.push(rootNode);\r\n\r\n  let nodeId = 1;\r\n\r\n  const traverse = (data, parentId = 0, linkName = \"\") => {\r\n    if (typeof data === \"object\" && data !== null) {\r\n      const hasType = data[\"@type\"];\r\n      const currentId = hasType ? nodeId++ : parentId;\r\n      if (hasType) {\r\n        nodes.push({\r\n          id: currentId,\r\n          name: data[\"@type\"] || \"Object\",\r\n        });\r\n\r\n        links.push({\r\n          source: parentId,\r\n          target: currentId,\r\n          linkName: linkName,\r\n        });\r\n      }\r\n\r\n      Object.entries(data).forEach(([key, value]) => {\r\n        if (key !== \"@type\") {\r\n          traverse(value, currentId, key);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  schemas.forEach((schema) => traverse(schema));\r\n  return { nodes, links };\r\n};\r\n","import * as d3 from \"d3\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { fetchSchemas } from \"../utils/fetchSchema\";\r\nimport { renderGraph } from \"../utils/renderGraph\";\r\nimport { downloadGraphAsPng } from \"../utils/downloadGraphAsPng\";\r\nimport { buildGraphData } from \"../utils/buildGraph\";\r\nimport \"./Schema.css\";\r\n\r\nconst Schema = () => {\r\n  const [schemas, setSchemas] = useState([]);\r\n  const [linkDistance, setLinkDistance] = useState(70);\r\n  const [fontSize, setFontSize] = useState(12);\r\n  const [nodeSize, setNodeSize] = useState(8);\r\n  const [isDragEnabled, setIsDragEnabled] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isGraphView, setIsGraphView] = useState(true); // State to toggle views\r\n  const graphRef = useRef(null);\r\n  const simulationRef = useRef(null);\r\n\r\n  // Fetch schema data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await fetchSchemas();\r\n        setSchemas(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Render graph when schemas change\r\n  useEffect(() => {\r\n    if (schemas.length > 0) {\r\n      try {\r\n        const graphData = buildGraphData(schemas);\r\n        renderGraph(\r\n          graphRef,\r\n          graphData,\r\n          linkDistance,\r\n          fontSize,\r\n          nodeSize,\r\n          isDragEnabled,\r\n          simulationRef,\r\n          1000,\r\n          1000\r\n        );\r\n      } catch (err) {\r\n        setError(`Failed to render graph: ${err.message}`);\r\n      }\r\n    }\r\n  }, [schemas, isGraphView]);\r\n\r\n  // Update link distance\r\n  useEffect(() => {\r\n    if (simulationRef.current) {\r\n      const linkForce = simulationRef.current.force(\"link\");\r\n      if (linkForce) {\r\n        linkForce.distance(linkDistance);\r\n        simulationRef.current.alpha(1).restart();\r\n      }\r\n    }\r\n  }, [linkDistance]);\r\n\r\n  // Update font size\r\n  useEffect(() => {\r\n    d3.select(graphRef.current)\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", `${fontSize}px`);\r\n  }, [fontSize]);\r\n\r\n  // Update node size\r\n  useEffect(() => {\r\n    d3.select(graphRef.current).selectAll(\"circle\").attr(\"r\", nodeSize);\r\n  }, [nodeSize]);\r\n\r\n  // Update drag functionality\r\n  useEffect(() => {\r\n    if (simulationRef.current && graphRef.current) {\r\n      const nodes = d3.select(graphRef.current).selectAll(\"circle\");\r\n      if (isDragEnabled) {\r\n        nodes.call(drag(simulationRef.current));\r\n      } else {\r\n        nodes.on(\".drag\", null);\r\n      }\r\n    }\r\n  }, [isDragEnabled]);\r\n\r\n  const drag = (simulation) => {\r\n    function dragstarted(event) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      event.subject.fx = event.subject.x;\r\n      event.subject.fy = event.subject.y;\r\n    }\r\n\r\n    function dragged(event) {\r\n      event.subject.fx = event.x;\r\n      event.subject.fy = event.y;\r\n    }\r\n\r\n    function dragended(event) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      event.subject.fx = null;\r\n      event.subject.fy = null;\r\n    }\r\n\r\n    return d3\r\n      .drag()\r\n      .on(\"start\", dragstarted)\r\n      .on(\"drag\", dragged)\r\n      .on(\"end\", dragended);\r\n  };\r\n\r\n  const SchemaItem = ({ data, title }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n    const renderValue = (key, value) => {\r\n      if (typeof value === \"object\" && value !== null) {\r\n        return <SchemaItem data={value} title={value[\"@type\"] || key} />;\r\n      }\r\n      return (\r\n        <div className=\"schema-value\">\r\n          <strong>{key}:</strong> {value}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"schema-item\">\r\n        <div className=\"schema-header\" onClick={toggleOpen}>\r\n          <span>{title}</span>\r\n          <button>{isOpen ? \"▲\" : \"▼\"}</button>\r\n        </div>\r\n        {isOpen && (\r\n          <div className=\"schema-content\">\r\n            {Object.entries(data).map(([key, value], index) => (\r\n              <div key={index} className=\"schema-entry\">\r\n                {renderValue(key, value)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setIsGraphView((prev) => !prev)}\r\n        className=\"toggle-view-btn\"\r\n      >\r\n        {isGraphView ? \"Switch to List View\" : \"Switch to Graph View\"}\r\n      </button>\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n      {isLoading && <i className=\"loader --1\"></i>}\r\n      {!isLoading && !error && schemas.length > 0 && (\r\n        <div>\r\n          {isGraphView ? (\r\n            <div>\r\n              <div className=\"container\">\r\n                <div className=\"container-but\">\r\n                  <button\r\n                    onClick={() => setIsDragEnabled((prev) => !prev)}\r\n                    id=\"pause-play\"\r\n                  >\r\n                    {isDragEnabled ? (\r\n                      <img src=\"image/pause.svg\" alt=\"Pause button\" />\r\n                    ) : (\r\n                      <img src=\"image/play.svg\" alt=\"Play button\" />\r\n                    )}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => downloadGraphAsPng(graphRef)}\r\n                    id=\"download-btn\"\r\n                  >\r\n                    <img src=\"image/download.svg\" alt=\"Download Graph\" />\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"controls\">\r\n                  <div className=\"control-item\">\r\n                    <label>Font Size</label>\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"8\"\r\n                      max=\"30\"\r\n                      value={fontSize}\r\n                      onChange={(e) => setFontSize(Number(e.target.value))}\r\n                    />\r\n                    <span>{fontSize}</span>\r\n                  </div>\r\n                  <div className=\"control-item\">\r\n                    <label>Node Size</label>\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"5\"\r\n                      max=\"50\"\r\n                      value={nodeSize}\r\n                      onChange={(e) => setNodeSize(Number(e.target.value))}\r\n                    />\r\n                    <span>{nodeSize}</span>\r\n                  </div>\r\n                  <div className=\"control-item\">\r\n                    <label>Link Distance</label>\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"20\"\r\n                      max=\"200\"\r\n                      value={linkDistance}\r\n                      onChange={(e) => setLinkDistance(Number(e.target.value))}\r\n                    />\r\n                    <span>{linkDistance}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div ref={graphRef} className=\"graph-container\"></div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2 id=\"markup\">Schema Markup</h2>\r\n              <p className=\"schema-description\">\r\n                <strong>\r\n                  Schema Markup is a semantic vocabulary of tags that helps\r\n                  search engines understand your webpage and better represent it\r\n                  in the search results.\r\n                </strong>\r\n              </p>\r\n              <div className=\"schema-scrolling\">\r\n                <div className=\"schema-container\">\r\n                  {schemas.map((schema, index) => (\r\n                    <SchemaItem\r\n                      key={index}\r\n                      data={schema}\r\n                      title={schema[\"@type\"] || `Schema ${index + 1}`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      {!isLoading && !error && schemas.length === 0 && (\r\n        <div className=\"no-items\">\r\n          <p>\r\n            No Schema Found on this Website.{\" \"}\r\n            <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Schema;\r\n","// import { jsPDF } from \"jspdf\";\r\nexport const downloadGraphAsPng = (graphRef) => {\r\n  // const doc = new jsPDF();\r\n\r\n  // Get the SVG element and convert it to an image URL (PNG)\r\n  const svgElement = graphRef.current.querySelector(\"svg\");\r\n  if (!svgElement) return;\r\n\r\n  // const imageUrl = svgElement.toDataURL(\"image/png\");\r\n\r\n  // Add the image to the PDF document (you can adjust the coordinates and dimensions)\r\n\r\n  // const svgElement = graphRef.current.querySelector(\"svg\");\r\n  // if (!svgElement) return;\r\n\r\n  const clonedSvg = svgElement.cloneNode(true);\r\n  const bbox = svgElement.getBBox();\r\n  const width = bbox.width;\r\n  const height = bbox.height;\r\n\r\n  clonedSvg.setAttribute(\"viewBox\", `${bbox.x} ${bbox.y} ${width} ${height}`);\r\n  clonedSvg.setAttribute(\"width\", width);\r\n  clonedSvg.setAttribute(\"height\", height);\r\n\r\n  const serializer = new XMLSerializer();\r\n  const svgString = serializer.serializeToString(clonedSvg);\r\n  const blob = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\r\n  const url = URL.createObjectURL(blob);\r\n  const img = new Image();\r\n\r\n  img.onload = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleFactor = 4;\r\n    canvas.width = width * scaleFactor;\r\n    canvas.height = height * scaleFactor;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.drawImage(img, 0, 0, width * scaleFactor, height * scaleFactor);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"schema-graph.png\";\r\n    link.href = canvas.toDataURL(\"image/png\");\r\n    link.click();\r\n\r\n    URL.revokeObjectURL(url);\r\n    // doc.text(\"Schema Structure\", 105, 10, { align: \"center\" });\r\n    // doc.addImage(link.href, \"PNG\", 30, 70, 180, 180); // Adjust the image size and position here\r\n\r\n    // Save the PDF with the desired filename\r\n    // doc.save(\"schema-graph.pdf\");\r\n  };\r\n\r\n  img.onerror = () => {\r\n    console.error(\"Error occurred while loading the image for download.\");\r\n  };\r\n\r\n  img.src = url;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./PageSpeed.css\";\r\n\r\nconst PageSpeedTest = () => {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [desktopResult, setDesktopResult] = useState(null);\r\n  const [mobileResult, setMobileResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const getActiveTabUrl = async () => {\r\n    const [tab] = await chrome.tabs.query({\r\n      active: true,\r\n      currentWindow: true,\r\n    });\r\n    return tab.url;\r\n  };\r\n\r\n  const API_KEY = \"AIzaSyCdskX2l4jTGn8RXH9zjDqnV31aHdhxTEU\";\r\n\r\n  const fetchPageSpeedData = async (url, strategy) => {\r\n    const endpoint = `https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=${url}&strategy=${strategy}&key=${API_KEY}`;\r\n    const response = await fetch(endpoint);\r\n    if (!response.ok) throw new Error(\"Failed to fetch PageSpeed data\");\r\n    return response.json();\r\n  };\r\n\r\n  const runTest = async () => {\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const activeUrl = await getActiveTabUrl();\r\n      setUrl(activeUrl);\r\n\r\n      const [desktop, mobile] = await Promise.all([\r\n        fetchPageSpeedData(activeUrl, \"desktop\"),\r\n        fetchPageSpeedData(activeUrl, \"mobile\"),\r\n      ]);\r\n\r\n      setDesktopResult(desktop.lighthouseResult);\r\n      setMobileResult(mobile.lighthouseResult);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getScoreColor = (score) => {\r\n    if (score >= 90) return \"#4caf50\";\r\n    if (score >= 50) return \"#ffc107\";\r\n    return \"#f44336\";\r\n  };\r\n\r\n  const renderMetrics = (result) => {\r\n    const audits = result.audits;\r\n    return (\r\n      <div className=\"metrics\">\r\n        <p>\r\n          <strong>First Contentful Paint</strong>\r\n          {\":\"}\r\n          {audits[\"first-contentful-paint\"].displayValue}\r\n        </p>\r\n        <p>\r\n          <strong>Largest Contentful Paint</strong>\r\n          {\":\"}\r\n          {audits[\"largest-contentful-paint\"].displayValue}\r\n        </p>\r\n        <p>\r\n          <strong>Total Blocking Time</strong>\r\n          {\":\"}\r\n          {audits[\"total-blocking-time\"].displayValue}\r\n        </p>\r\n        <p>\r\n          <strong>Cumulative Layout Shift</strong>\r\n          {\":\"}\r\n          {audits[\"cumulative-layout-shift\"].displayValue}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderScoreCard = (result, strategy) => {\r\n    const score = Math.round(result.categories.performance.score * 100);\r\n    const scoreColor = getScoreColor(score);\r\n\r\n    return (\r\n      <div className=\"score-card\">\r\n        <div\r\n          className=\"score-circle\"\r\n          style={{\r\n            backgroundColor: `white`,\r\n            backgroundImage: `conic-gradient(${scoreColor} ${score}%, #f3f3f3 ${score}%)`,\r\n          }}\r\n        >\r\n          <span>{score}</span>\r\n        </div>\r\n        <p className=\"circle-label\">{strategy} PageSpeed</p>\r\n        <p className=\"url-text\">\r\n          Google PageSpeed Insights for <br />{\" \"}\r\n          <span className=\"url\">{url}</span>\r\n        </p>\r\n        {renderMetrics(result)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagespeed-container\">\r\n      <button onClick={runTest} disabled={isLoading}>\r\n        {isLoading ? \"Running Test...\" : \"Run Speed Test\"}\r\n      </button>\r\n      {isLoading && (\r\n        <div className=\"active-tab-container\">\r\n          <p>It Might Take a While to Process, Please Wait!</p>\r\n          <br />\r\n          <i class=\"loader --1\"></i>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"score-container\">\r\n        {mobileResult && renderScoreCard(mobileResult, \"Mobile\")}\r\n        {desktopResult && renderScoreCard(desktopResult, \"Desktop\")}\r\n      </div>\r\n\r\n      {desktopResult && mobileResult && (\r\n        <div className=\"legend\">\r\n          <div>\r\n            <span className=\"legend-color green\"></span>\r\n            <strong>Good</strong>\r\n          </div>\r\n          <div>\r\n            <span className=\"legend-color yellow\"></span>\r\n            <strong>Can Be Better</strong>\r\n          </div>\r\n          <div>\r\n            <span className=\"legend-color red\"></span>\r\n            <strong>Need to Be Updated</strong>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageSpeedTest;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer-content\">\r\n        <p className=\"footer-text\">\r\n          For better results, visualization, and automated SEO <br /> audit of\r\n          your website, visit Digispot-AI.\r\n        </p>\r\n        <a\r\n          href=\"https://digispot.ai\"\r\n          id=\"mainlink\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <div className=\"footer-button\">\r\n            <img src=\"image/icon16.png\" alt=\"digispot.ai logo\" id=\"logo\" />\r\n            Digispot-AI\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const borderAndFooter = (doc, pageNumber) => {\r\n  const pageWidth = doc.internal.pageSize.width;\r\n  const pageHeight = doc.internal.pageSize.height;\r\n\r\n  // Draws the border\r\n  doc.setDrawColor(0, 0, 0);\r\n  doc.rect(10, 10, pageWidth - 20, pageHeight - 20);\r\n  doc.rect(8, 8, pageWidth - 16, pageHeight - 16);\r\n\r\n  // Adding Watermark to the page\r\n  const watermarkText = \"Digispot.AI\";\r\n  doc.setFontSize(70);\r\n  doc.setTextColor(230, 230, 230);\r\n  doc.text(watermarkText, pageWidth / 2, pageHeight / 2, {\r\n    align: \"center\",\r\n    angle: 45,\r\n  });\r\n\r\n  // Add footer text and page number\r\n  doc.setFontSize(10);\r\n  doc.setTextColor(222, 149, 149); // Pink color.\r\n  const footerurl = \"https://digispot.ai\";\r\n  const headertext = \"Report by Digispot.AI\";\r\n\r\n  // Adding footertext\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.text(headertext, pageWidth - 20, 5, {\r\n    align: \"right\",\r\n  });\r\n\r\n  doc.text(`${pageNumber}`, pageWidth / 2, pageHeight - 3, { align: \"center\" });\r\n  // Adding footerurl\r\n  const xPosition = pageWidth - 20;\r\n  const yPosition = pageHeight - 3;\r\n  doc.setFont(undefined, \"normal\");\r\n  doc.setTextColor(0, 0, 139);\r\n  doc.text(footerurl, xPosition, yPosition, {\r\n    align: \"right\",\r\n  });\r\n  const textWidth = doc.getTextWidth(footerurl);\r\n  doc.setDrawColor(0, 0, 139);\r\n  doc.line(xPosition - textWidth, yPosition + 1, xPosition, yPosition + 1);\r\n  doc.link(\r\n    pageWidth - 20 - doc.getTextWidth(footerurl),\r\n    pageHeight - 12,\r\n    doc.getTextWidth(footerurl),\r\n    11,\r\n    { url: footerurl }\r\n  );\r\n  doc.setTextColor(0, 0, 0);\r\n  return pageNumber + 1;\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { fetchWebsiteInfo } from \"../../tabs/utils/fetchWebsiteInfo\";\r\nimport { fetchLinks } from \"../../tabs/utils/fetchLinks\";\r\nimport { fetchImages } from \"../../tabs/utils/fetchImages\";\r\nimport { fetchHeaders } from \"../../tabs/utils/fetchHeaders\";\r\nimport { fetchSchemas } from \"../../tabs/utils/fetchSchema\";\r\nimport { renderGraph } from \"../../tabs/utils/renderGraph\";\r\nimport { buildGraphData } from \"../../tabs/utils/buildGraph\";\r\nimport { downloadGraphAsPdf } from \"./utils/downloadGraphAspdf\";\r\nimport { addMetaLinksDetails } from \"./utils/addMetaLinksDetails\";\r\nimport { addLinksSummary } from \"./utils/addLinksDetails\";\r\nimport { addLinksTable } from \"./utils/addLinksTable\";\r\nimport { addImageSummary } from \"./utils/addImageDetails\";\r\nimport { addImageTable } from \"./utils/addImageTable\";\r\nimport { addHeaderDetails } from \"./utils/addHeaderDetails\";\r\nimport { addSchemaDetails } from \"./utils/addschemadetails\";\r\nimport \"./Download.css\";\r\n\r\nconst DownloadPdf = () => {\r\n  const [info, setInfo] = useState({});\r\n  const [links, setLinks] = useState({});\r\n  const [images, setImages] = useState({});\r\n  const [headers, setHeaders] = useState({ headers: [], counts: {} });\r\n  const [schemas, setSchemas] = useState([]);\r\n  const [isDragEnabled, setIsDragEnabled] = useState(true);\r\n  const graphRef = useRef(null);\r\n  const simulationRef = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({\r\n          active: true,\r\n          currentWindow: true,\r\n        });\r\n        const tabId = tab.id;\r\n\r\n        const [websiteInfo, linksData, imagesData, headersData, schemadata] =\r\n          await Promise.all([\r\n            fetchWebsiteInfo(),\r\n            fetchLinks(),\r\n            fetchImages(tabId),\r\n            fetchHeaders(tabId),\r\n            fetchSchemas(),\r\n          ]);\r\n        setInfo(websiteInfo);\r\n        setLinks(linksData);\r\n        setImages(imagesData);\r\n        setHeaders(headersData);\r\n        setSchemas(schemadata);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (schemas && schemas.length > 0) {\r\n      const graphData = buildGraphData(schemas);\r\n      renderGraph(\r\n        graphRef,\r\n        graphData,\r\n        100,\r\n        12,\r\n        10,\r\n        isDragEnabled,\r\n        simulationRef,\r\n        40,\r\n        40\r\n      );\r\n    }\r\n  }, [schemas]);\r\n\r\n  const downloadPdf = async () => {\r\n    setLoading(true);\r\n    const jsPDF = (await import(\"jspdf\")).jsPDF;\r\n    const doc = new jsPDF();\r\n    let yPosition = 35;\r\n    let pageNumber = 1;\r\n    const recommendations = [];\r\n    [yPosition, pageNumber] = addMetaLinksDetails(\r\n      doc,\r\n      info,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n    pageNumber = addImageSummary(\r\n      doc,\r\n      images,\r\n      yPosition,\r\n      pageNumber,\r\n      recommendations\r\n    );\r\n    pageNumber = addLinksSummary(\r\n      doc,\r\n      links,\r\n      yPosition,\r\n      pageNumber,\r\n      recommendations\r\n    );\r\n    [yPosition, pageNumber] = addHeaderDetails(\r\n      doc,\r\n      headers,\r\n      yPosition,\r\n      pageNumber,\r\n      recommendations\r\n    );\r\n    [yPosition, pageNumber] = addImageTable(doc, images, yPosition, pageNumber);\r\n    [yPosition, pageNumber] = addLinksTable(doc, links, yPosition, pageNumber);\r\n    [yPosition, pageNumber] = addSchemaDetails(\r\n      doc,\r\n      schemas,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n    downloadGraphAsPdf(doc, graphRef, yPosition, info.title, pageNumber);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabs\" id=\"downloadpdf\">\r\n      <div ref={graphRef} className=\"noref\"></div>\r\n      <button className=\"tab-button\" onClick={downloadPdf} id=\"downloadbutton\">\r\n        Download as PDF\r\n      </button>\r\n      <div className=\"noref\">{loading && <i className=\"loader --1\"></i>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadPdf;\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\nexport const addMetaLinksDetails = (doc, info, startPosition, pageNumber) => {\r\n  const recommendations = [];\r\n  const metaLinks = [\r\n    { label: \"URL\", value: info.url },\r\n    { label: \"Title\", value: info.title },\r\n    { label: \"Description\", value: info.description },\r\n    { label: \"Canonical\", value: info.canonical },\r\n    { label: \"Language\", value: info.lang },\r\n    { label: \"Robots Meta\", value: info.robots },\r\n    { label: \"X-Robots Meta\", value: info.xRobots },\r\n  ];\r\n\r\n  pageNumber = borderAndFooter(doc, pageNumber);\r\n  doc.setFontSize(16);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.text(\"OnPage SEO Analysis\", 105, 20, { align: \"center\" });\r\n\r\n  doc.setFontSize(14);\r\n  doc.setFont(undefined, \"normal\");\r\n  doc.text(\"Meta Links Data\", 20, startPosition);\r\n\r\n  let yPosition = startPosition + 10;\r\n\r\n  metaLinks.forEach((item) => {\r\n    if (yPosition > 280) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = 20;\r\n    }\r\n\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${item.label}`, 20, yPosition);\r\n    doc.text(\":\", 50, yPosition);\r\n    doc.setFontSize(10);\r\n\r\n    const content_val = {\r\n      Title:\r\n        \"Have a title tag of optimal length (between 50 and 60 characters).\",\r\n      Description:\r\n        \"Have a description tag of optimal length (150 to 160 characters).\",\r\n      Canonical:\r\n        \"Search engines have a limited budget for crawling and indexing websites, Canonical tags help save time by indicating which URL to index.\",\r\n      Language:\r\n        \"This HTML attribute is used by various programs, search engines included, to help figure out what language the page is written in. This is helpful when trying to match the right content to the right user.\",\r\n      \"Robots Meta\":\r\n        \"A robots meta tag is an HTML snippet that tells search engines how to interact with a page, including how to index and display it in search results.\",\r\n      \"X-Robots Meta\":\r\n        \"X-robots meta tag is useful for controlling how search engines index and crawl non-HTML files, like images, PDFs, and other multimedia content.\",\r\n    };\r\n\r\n    if (item.value === \"Not Available\") {\r\n      doc.setTextColor(255, 0, 0); // Red\r\n      recommendations.push(\r\n        `The ${item.label} is missing. Ensure to add it. ${\r\n          content_val[item.label]\r\n        }`\r\n      );\r\n    } else if (\r\n      item.label === \"Title\" &&\r\n      (item.value.length < 50 || item.value.length > 60)\r\n    ) {\r\n      doc.setTextColor(255, 165, 0); // Yellow\r\n      recommendations.push(\r\n        `Your Title lenght ${item.value.length}, Optimal (50-60 characters recommended). Adjust it.`\r\n      );\r\n    } else if (\r\n      item.label === \"Description\" &&\r\n      (item.value.length < 150 || item.value.length > 160)\r\n    ) {\r\n      doc.setTextColor(255, 165, 0); // Yellow\r\n      recommendations.push(\r\n        `Your Description length ${item.value.length}, Optimal (150-160 characters recommended). Adjust it.`\r\n      );\r\n    } else {\r\n      doc.setTextColor(0, 0, 0); // Black\r\n    }\r\n\r\n    const wrappedText = doc.splitTextToSize(item.value, 140);\r\n    wrappedText.forEach((line) => {\r\n      if (yPosition > 280) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = 20;\r\n      }\r\n      doc.text(line, 55, yPosition);\r\n      yPosition += 7;\r\n    });\r\n  });\r\n\r\n  if (recommendations.length > 0) {\r\n    yPosition += 10;\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(255, 0, 0); // Red\r\n    doc.text(\"Recommendations\", 20, yPosition);\r\n    yPosition += 10;\r\n\r\n    recommendations.forEach((rec) => {\r\n      if (yPosition > 280) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = 20;\r\n      }\r\n\r\n      doc.setFontSize(12);\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.setFont(\"ZapfDingbats\");\r\n      doc.text(String.fromCharCode(334), 20, yPosition);\r\n      doc.setFont(\"helvetica\", \"normal\");\r\n      const splitText = doc.splitTextToSize(`${rec}`, 170);\r\n      splitText.forEach((line) => {\r\n        doc.text(line, 24, yPosition);\r\n        yPosition += 7;\r\n      });\r\n    });\r\n  }\r\n\r\n  return [yPosition + 10, pageNumber];\r\n};\r\n\r\n// import { borderAndFooter } from \"./borderandfooter\";\r\n// export const addMetaLinksDetails = (doc, info, startPosition, pageNumber) => {\r\n//   const metaLinks = [\r\n//     { label: \"URL\", value: info.url },\r\n//     { label: \"Title\", value: info.title },\r\n//     { label: \"Description\", value: info.description },\r\n//     { label: \"Canonical\", value: info.canonical },\r\n//     { label: \"Language\", value: info.lang },\r\n//     { label: \"Robots Meta\", value: info.robots },\r\n//     { label: \"X-Robots Meta\", value: info.xRobots },\r\n//   ];\r\n\r\n//   // Title of the Report\r\n//   pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n//   doc.setFontSize(16);\r\n//   doc.setTextColor(0, 123, 255);\r\n//   doc.setFont(undefined, \"bold\");\r\n//   doc.text(\"OnPage SEO Analysis\", 105, 20, { align: \"center\" });\r\n\r\n//   doc.setFontSize(14);\r\n//   doc.setFont(undefined, \"normal\");\r\n//   doc.text(\"Meta Links Data\", 20, startPosition);\r\n//   let yPosition = startPosition + 10;\r\n\r\n//   metaLinks.forEach((item) => {\r\n//     if (yPosition > 280) {\r\n//       doc.addPage();\r\n//       pageNumber = borderAndFooter(doc, pageNumber);\r\n//       yPosition = 20;\r\n//     }\r\n\r\n//     // Set label text\r\n//     doc.setFontSize(12);\r\n//     doc.setTextColor(0, 0, 0);\r\n//     doc.text(`${item.label}`, 20, yPosition);\r\n//     doc.text(\":\", 50, yPosition);\r\n//     doc.setFontSize(10);\r\n\r\n//     // Determine text color based on conditions\r\n//     if (item.value === \"Not Available\") {\r\n//       doc.setTextColor(255, 0, 0); // Red color for \"Not Available\"\r\n//     } else if (\r\n//       (item.label === \"Title\" &&\r\n//         (item.value.length < 50 || item.value.length > 60)) ||\r\n//       (item.label === \"Description\" &&\r\n//         (item.value.length < 150 || item.value.length > 160))\r\n//     ) {\r\n//       doc.setTextColor(255, 165, 0); // Yellow color for invalid Title/Description length\r\n//     } else {\r\n//       doc.setTextColor(0, 0, 0); // Default black color\r\n//     }\r\n\r\n//     // Wrap and display text\r\n//     const pageWidth = 140;\r\n//     const wrappedText = doc.splitTextToSize(item.value, pageWidth);\r\n\r\n//     wrappedText.forEach((line) => {\r\n//       if (yPosition > 280) {\r\n//         pageNumber++;\r\n//         doc.addPage();\r\n//         pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n//         yPosition = 20;\r\n//       }\r\n//       doc.text(line, 55, yPosition);\r\n//       yPosition += 7;\r\n//     });\r\n//   });\r\n\r\n//   return [yPosition + 15, pageNumber];\r\n// };\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\nexport const addImageSummary = (\r\n  doc,\r\n  images,\r\n  startPosition,\r\n  pageNumber,\r\n  recommendations\r\n) => {\r\n  let yPosition = startPosition;\r\n  if (yPosition > 297.0 * (3 / 4)) {\r\n    doc.addPage();\r\n    pageNumber = borderAndFooter(doc, pageNumber);\r\n    yPosition = 20;\r\n  }\r\n\r\n  const imageCounts = [\r\n    { label: \"Total Images\", value: images.total?.length || 0 },\r\n    { label: \"Without ALT\", value: images.noAlt?.length || 0 },\r\n    { label: \"Without Desc\", value: images.noLongDesc?.length || 0 },\r\n    { label: \"Without SRC\", value: images.noSrc?.length || 0 },\r\n  ];\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Image Information\", 20, yPosition);\r\n  yPosition += 10;\r\n\r\n  imageCounts.forEach(({ label, value }) => {\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${label}`, 20, yPosition);\r\n\r\n    if (value > 0 && label !== \"Total Images\") {\r\n      doc.setTextColor(255, 0, 0); // Red\r\n      if (label === \"Without ALT\") {\r\n        recommendations.push(\r\n          `\"${value}\"` +\r\n            \" images are missing 'ALT' attributes. Add descriptive ALT texts.\"\r\n        );\r\n      } else if (label === \"Without SRC\") {\r\n        recommendations.push(\r\n          `\"${value}\"` +\r\n            \" images are missing 'SRC' attributes. Ensure valid image sources.\"\r\n        );\r\n      } else {\r\n        if (label === \"Without Desc\" && value === images.total?.length) {\r\n          recommendations.push(\"Consider adding Description for the images.\");\r\n        } else {\r\n          recommendations.push(\r\n            `\"${value}\"` +\r\n              \" images are missing 'Description'. Add description for the images.\"\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      doc.setTextColor(0, 0, 0); // Black\r\n    }\r\n\r\n    doc.text(`: ${value}`, 55, yPosition);\r\n    yPosition += 7;\r\n  });\r\n\r\n  return pageNumber;\r\n};\r\n\r\n// let startX = 20;\r\n// let columnWidth = 50;\r\n// export const addImageSummary = (doc, images, startPosition, pageNumber) => {\r\n//   let yPosition = startPosition;\r\n//   const columnX = startX;\r\n\r\n//   // Title\r\n//   doc.setFontSize(14);\r\n//   doc.setTextColor(0, 123, 255);\r\n//   doc.text(\"Image Information\", columnX, yPosition);\r\n//   yPosition += 10;\r\n\r\n//   // Content\r\n//   const imageCounts = [\r\n//     { label: \"Total Images\", value: images.total?.length || 0 },\r\n//     { label: \"Without ALT\", value: images.noAlt?.length || 0 },\r\n//     { label: \"Without Desc\", value: images.noLongDesc?.length || 0 },\r\n//     { label: \"Without SRC\", value: images.noSrc?.length || 0 },\r\n//   ];\r\n\r\n//   imageCounts.forEach(({ label, value }) => {\r\n//     doc.setFontSize(12);\r\n//     doc.setTextColor(0, 0, 0);\r\n//     doc.text(`${label}`, columnX, yPosition);\r\n\r\n//     if (value > 0 && label !== \"Total Images\") {\r\n//       doc.setTextColor(255, 0, 0); // Red\r\n//     } else {\r\n//       doc.setTextColor(0, 0, 0); // Black\r\n//     }\r\n\r\n//     doc.text(`: ${value}`, columnX + columnWidth / 2 + 10, yPosition);\r\n//     yPosition += 7;\r\n//   });\r\n\r\n//   return pageNumber;\r\n// };\r\n","export const addLinksSummary = (\r\n  doc,\r\n  links,\r\n  startPosition,\r\n  pageNumber,\r\n  recommendations\r\n) => {\r\n  let yPosition = startPosition;\r\n\r\n  if (yPosition > 297.0 * (3 / 4)) {\r\n    yPosition = 20;\r\n  }\r\n\r\n  const linkCounts = [\r\n    { label: \"Total Links\", value: links.total?.length || 0 },\r\n    { label: \"Internal Links\", value: links.internal?.length || 0 },\r\n    { label: \"External Links\", value: links.external?.length || 0 },\r\n    { label: \"Without href\", value: links.withoutHref?.length || 0 },\r\n    { label: \"Unique Links\", value: links.unique?.length || 0 },\r\n  ];\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Links Information\", 80, yPosition);\r\n  yPosition += 10;\r\n\r\n  linkCounts.forEach(({ label, value }) => {\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${label}`, 80, yPosition);\r\n\r\n    if (value === 0 || (label === \"Without href\" && value > 0)) {\r\n      doc.setTextColor(255, 0, 0); // Red\r\n      if (label === \"Without href\") {\r\n        recommendations.push(\r\n          `\"${value}\"` + \" links are missing 'href' attributes. Add valid URLs.\"\r\n        );\r\n      } else if (label === \"Internal Links\") {\r\n        recommendations.push(\r\n          \"No internal links found. Ensure your website links to its own content.\"\r\n        );\r\n      } else if (label === \"External Links\") {\r\n        recommendations.push(\r\n          \"No external links found. Include some authoritative external links.\"\r\n        );\r\n      }\r\n    } else {\r\n      doc.setTextColor(0, 0, 0); // Black\r\n    }\r\n\r\n    doc.text(`: ${value}`, 115, yPosition);\r\n    yPosition += 7;\r\n  });\r\n\r\n  return pageNumber;\r\n};\r\n\r\n// const columnWidth = 50;\r\n// const startX = 20;\r\n// const columnGap = 10;\r\n// export const addLinksSummary = (doc, links, startPosition, pageNumber) => {\r\n//   let yPosition = startPosition;\r\n//   const columnX = startX + columnWidth + columnGap;\r\n\r\n//   // Title\r\n//   doc.setFontSize(14);\r\n//   doc.setTextColor(0, 123, 255);\r\n//   doc.text(\"Links Information\", columnX, yPosition);\r\n//   yPosition += 10;\r\n\r\n//   // Content\r\n//   const linkCounts = [\r\n//     { label: \"Total Links\", value: links.total?.length || 0 },\r\n//     { label: \"Internal Links\", value: links.internal?.length || 0 },\r\n//     { label: \"External Links\", value: links.external?.length || 0 },\r\n//     { label: \"Without href\", value: links.withoutHref?.length || 0 },\r\n//     { label: \"Unique Links\", value: links.unique?.length || 0 },\r\n//   ];\r\n\r\n//   linkCounts.forEach(({ label, value }) => {\r\n//     doc.setFontSize(12);\r\n//     doc.setTextColor(0, 0, 0);\r\n//     doc.text(`${label}`, columnX, yPosition);\r\n\r\n//     if (value === 0 || (label === \"Without href\" && value > 0)) {\r\n//       doc.setTextColor(255, 0, 0); // Red\r\n//     } else {\r\n//       doc.setTextColor(0, 0, 0); // Black\r\n//     }\r\n\r\n//     doc.text(`: ${value}`, columnX + columnWidth / 2 + columnGap, yPosition);\r\n//     yPosition += 7;\r\n//   });\r\n\r\n//   return pageNumber;\r\n// };\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nlet columnWidth = 50;\r\nlet columnGap = 10;\r\nlet startX = 20;\r\n\r\nexport const addHeaderDetails = (\r\n  doc,\r\n  headersData,\r\n  startPosition,\r\n  pageNumber,\r\n  recommendations\r\n) => {\r\n  let yPosition = startPosition;\r\n  const columnX = startX + 2 * (columnWidth + columnGap);\r\n  const pageHeight = doc.internal.pageSize.height; // Page height\r\n  const marginTop = 20; // Top margin\r\n  const marginBottom = 20; // Bottom margin\r\n  const marginLeft = 10;\r\n\r\n  if (yPosition > 297.0 * (3 / 4)) {\r\n    yPosition = 20;\r\n  }\r\n\r\n  // Title\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Headers Information\", columnX, yPosition);\r\n  yPosition += 10;\r\n\r\n  // Content\r\n  const headerCounts = headersData.counts;\r\n  Object.entries(headerCounts).forEach(([header, count]) => {\r\n    doc.setFontSize(12);\r\n\r\n    if ((header === \"h1\" || header === \"h2\") && count === 0) {\r\n      doc.setTextColor(255, 0, 0); // Red\r\n      if (header === \"h1\")\r\n        recommendations.push(\"No H1 tags found. Add an H1 tag for better SEO.\");\r\n      if (header === \"h2\")\r\n        recommendations.push(\r\n          \"No H2 tags found. Consider using H2 tags for subheadings.\"\r\n        );\r\n    } else {\r\n      doc.setTextColor(0, 0, 0); // Black\r\n    }\r\n\r\n    doc.text(`${header.toUpperCase()}`, columnX, yPosition);\r\n    doc.text(`: ${count}`, columnX + columnWidth / 5, yPosition);\r\n    yPosition += 7;\r\n  });\r\n\r\n  yPosition += 10;\r\n\r\n  // Add header hierarchy check warning BEFORE the header details\r\n  const isHierarchyValid = checkHeaderHierarchy(headersData.headers);\r\n  if (!isHierarchyValid) {\r\n    recommendations.push(\r\n      \"The headers do not follow a proper hierarchy. Fix their structure.\"\r\n    );\r\n  }\r\n\r\n  // Write recommendations above the \"Header Details in proper hierarchy\"\r\n  if (recommendations.length > 0) {\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(255, 0, 0);\r\n    doc.text(\"Recommendations:\", 20, yPosition);\r\n    yPosition += 10;\r\n\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    recommendations.forEach((rec) => {\r\n      if (yPosition > pageHeight - marginBottom) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = marginTop;\r\n      }\r\n      doc.setFont(\"ZapfDingbats\");\r\n      doc.text(String.fromCharCode(334), 20, yPosition);\r\n      doc.setFont(\"helvetica\", \"normal\");\r\n      doc.text(`${rec}`, 24, yPosition);\r\n      yPosition += 7;\r\n    });\r\n\r\n    yPosition += 10;\r\n  }\r\n\r\n  if (yPosition > 297.0 * (3 / 4)) {\r\n    doc.addPage();\r\n    pageNumber = borderAndFooter(doc, pageNumber);\r\n    yPosition = 10;\r\n  }\r\n  yPosition += 10;\r\n  // Add detailed header content\r\n  doc.setFontSize(14); // Unified font size\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Header Details in proper hierarchy\", 105, yPosition, {\r\n    align: \"center\",\r\n  });\r\n  yPosition += 10;\r\n\r\n  let headerOrder = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];\r\n  headerOrder.forEach((tag) => {\r\n    const filteredHeaders = headersData.headers.filter(\r\n      (header) => header.tag === tag\r\n    );\r\n\r\n    filteredHeaders.forEach(({ tag, text }) => {\r\n      if (yPosition > pageHeight - marginBottom) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = marginTop;\r\n      }\r\n\r\n      doc.setFontSize(12); // Unified font size\r\n\r\n      // Set text color to red if the count of h1 or h2 is 0\r\n      if ((tag === \"h1\" || tag === \"h2\") && headerCounts[tag] === 0) {\r\n        doc.setTextColor(255, 0, 0); // Red\r\n      } else {\r\n        doc.setTextColor(0, 0, 0); // Black\r\n      }\r\n\r\n      doc.text(`${tag.toUpperCase()}:`, marginLeft + 10, yPosition);\r\n\r\n      const wrappedText = doc.splitTextToSize(text || \"No Content\", 160);\r\n      wrappedText.forEach((line) => {\r\n        if (yPosition > pageHeight - marginBottom) {\r\n          doc.addPage();\r\n          pageNumber = borderAndFooter(doc, pageNumber);\r\n          yPosition = marginTop;\r\n        }\r\n        doc.text(line, marginLeft + 20, yPosition);\r\n        yPosition += 4;\r\n      });\r\n      yPosition += 5;\r\n    });\r\n  });\r\n\r\n  return [yPosition + 10, pageNumber];\r\n};\r\n\r\n// Function to check header hierarchy\r\nconst checkHeaderHierarchy = (headers) => {\r\n  const headerOrder = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];\r\n  let lastIndex = -1;\r\n\r\n  for (const { tag } of headers) {\r\n    const currentIndex = headerOrder.indexOf(tag);\r\n    if (currentIndex < lastIndex) {\r\n      return false; // Hierarchy violated\r\n    }\r\n    lastIndex = currentIndex;\r\n  }\r\n\r\n  return true; // Hierarchy is valid\r\n};\r\n\r\n// import { borderAndFooter } from \"./borderandfooter\";\r\n// let columnWidth = 50;\r\n// let columnGap = 10;\r\n// let startX = 20;\r\n// export const addHeaderDetails = (\r\n//   doc,\r\n//   headersData,\r\n//   startPosition,\r\n//   pageNumber\r\n// ) => {\r\n//   let yPosition = startPosition;\r\n//   const columnX = startX + 2 * (columnWidth + columnGap);\r\n//   const pageHeight = doc.internal.pageSize.height; // Page height\r\n//   const marginTop = 20; // Top margin\r\n//   const marginBottom = 20; // Bottom margin\r\n//   const marginLeft = 10;\r\n\r\n//   // Title\r\n//   doc.setFontSize(14);\r\n//   doc.setTextColor(0, 123, 255);\r\n//   doc.text(\"Headers Information\", columnX, yPosition);\r\n//   yPosition += 10;\r\n\r\n//   // Content\r\n//   const headerCounts = headersData.counts;\r\n//   Object.entries(headerCounts).forEach(([header, count]) => {\r\n//     doc.setFontSize(12);\r\n\r\n//     if ((header === \"h1\" || header === \"h2\") && count === 0) {\r\n//       doc.setTextColor(255, 0, 0); // Red\r\n//     } else {\r\n//       doc.setTextColor(0, 0, 0); // Black\r\n//     }\r\n\r\n//     doc.text(`${header.toUpperCase()}`, columnX, yPosition);\r\n//     doc.text(`: ${count}`, columnX + columnWidth / 5, yPosition);\r\n//     yPosition += 7;\r\n//   });\r\n\r\n//   if (yPosition > 297.0 * (3 / 4)) {\r\n//     doc.addPage();\r\n//     pageNumber = borderAndFooter(doc, pageNumber);\r\n//     yPosition = 10;\r\n//   }\r\n//   yPosition += 10;\r\n\r\n//   // Add header hierarchy check warning BEFORE the header details\r\n//   const isHierarchyValid = checkHeaderHierarchy(headersData.headers);\r\n//   if (!isHierarchyValid) {\r\n//     if (yPosition > pageHeight - marginBottom) {\r\n//       doc.addPage();\r\n//       pageNumber = borderAndFooter(doc, pageNumber);\r\n//       yPosition = marginTop;\r\n//     }\r\n\r\n//     doc.setFontSize(12);\r\n//     doc.setTextColor(255, 0, 0); // Red\r\n//     doc.text(\r\n//       \"The Headers in your Website are not following the Hierarchy.\",\r\n//       20,\r\n//       yPosition\r\n//     );\r\n//     yPosition += 15;\r\n//   }\r\n\r\n//   // Add detailed header content\r\n//   doc.setFontSize(14); // Unified font size\r\n//   doc.setTextColor(0, 123, 255);\r\n//   doc.text(\"Header Details in proper hierarchy\", 105, yPosition, {\r\n//     align: \"center\",\r\n//   });\r\n//   yPosition += 10;\r\n//   let headerOrder = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];\r\n\r\n//   headerOrder.forEach((tag) => {\r\n//     const filteredHeaders = headersData.headers.filter(\r\n//       (header) => header.tag === tag\r\n//     );\r\n\r\n//     filteredHeaders.forEach(({ tag, text }) => {\r\n//       if (yPosition > pageHeight - marginBottom) {\r\n//         doc.addPage();\r\n//         pageNumber = borderAndFooter(doc, pageNumber);\r\n//         yPosition = marginTop;\r\n//       }\r\n\r\n//       doc.setFontSize(12); // Unified font size\r\n\r\n//       // Set text color to red if the count of h1 or h2 is 0\r\n//       if ((tag === \"h1\" || tag === \"h2\") && headerCounts[tag] === 0) {\r\n//         doc.setTextColor(255, 0, 0); // Red\r\n//       } else {\r\n//         doc.setTextColor(0, 0, 0); // Black\r\n//       }\r\n\r\n//       doc.text(`${tag.toUpperCase()}:`, marginLeft + 10, yPosition);\r\n\r\n//       const wrappedText = doc.splitTextToSize(text || \"No Content\", 160);\r\n//       wrappedText.forEach((line) => {\r\n//         if (yPosition > pageHeight - marginBottom) {\r\n//           doc.addPage();\r\n//           pageNumber = borderAndFooter(doc, pageNumber);\r\n//           yPosition = marginTop;\r\n//         }\r\n//         doc.text(line, marginLeft + 20, yPosition);\r\n//         yPosition += 4;\r\n//       });\r\n//       yPosition += 5;\r\n//     });\r\n//   });\r\n\r\n//   return [yPosition + 10, pageNumber];\r\n// };\r\n\r\n// // Function to check header hierarchy\r\n// const checkHeaderHierarchy = (headers) => {\r\n//   const headerOrder = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];\r\n//   let lastIndex = -1;\r\n\r\n//   for (const { tag } of headers) {\r\n//     const currentIndex = headerOrder.indexOf(tag);\r\n//     if (currentIndex < lastIndex) {\r\n//       return false; // Hierarchy violated\r\n//     }\r\n//     lastIndex = currentIndex;\r\n//   }\r\n\r\n//   return true; // Hierarchy is valid\r\n// };\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addImageTable = (doc, images, startPosition, pageNumber) => {\r\n  let yPosition = startPosition;\r\n  const leftMargin = 15;\r\n  const cellPadding = 2;\r\n  const columnWidths = [15, 115, 28, 28];\r\n  const rowPadding = 2;\r\n  const pageHeight = 290;\r\n\r\n  if (yPosition > 297.0 * (3 / 4)) {\r\n    doc.addPage();\r\n    pageNumber = borderAndFooter(doc, pageNumber);\r\n    yPosition = 20;\r\n  }\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Images\", 105, yPosition, { align: \"center\" });\r\n  yPosition += 10;\r\n\r\n  const categories = [\r\n    {\r\n      label: \"Without ALT\",\r\n      data: images.noAlt || [],\r\n    },\r\n    {\r\n      label: \"Without SRC\",\r\n      data: images.noSrc || [],\r\n    },\r\n    {\r\n      label: \"Without Description\",\r\n      data: images.noLongDesc || [],\r\n      specialCondition:\r\n        (images.noLongDesc?.length || 0) === (images.total?.length || 0),\r\n      specialMessage: \"All links in the website have no Description.\",\r\n    },\r\n  ];\r\n\r\n  categories.forEach(({ label, data, specialCondition, specialMessage }) => {\r\n    if (yPosition > pageHeight - 20) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber); // Add border and footer\r\n      yPosition = 20; // Reset yPosition with top padding\r\n    }\r\n\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(label, leftMargin, yPosition);\r\n    yPosition += 7;\r\n\r\n    if (specialCondition) {\r\n      doc.setFontSize(14);\r\n      doc.setFont(undefined, \"bold\");\r\n      doc.setTextColor(255, 0, 0); // Red.\r\n      doc.text(specialMessage, leftMargin + 10, yPosition);\r\n      doc.setFont(undefined, \"normal\");\r\n      yPosition += 15; // Add space after the message\r\n      return;\r\n    }\r\n\r\n    if (data.length === 0) {\r\n      doc.setFontSize(10);\r\n      doc.setTextColor(0, 255, 0); // Green\r\n      doc.text(\"No images in this category.\", leftMargin + 10, yPosition);\r\n      yPosition += 15;\r\n      return;\r\n    }\r\n\r\n    doc.setFont(undefined, \"bold\");\r\n    doc.setFontSize(10);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(\"Index\", leftMargin + cellPadding, yPosition + rowPadding + 2);\r\n    doc.text(\r\n      \"URL\",\r\n      leftMargin + columnWidths[0] + cellPadding,\r\n      yPosition + rowPadding + 2\r\n    );\r\n    doc.text(\r\n      \"ALT\",\r\n      leftMargin + columnWidths[0] + columnWidths[1] + cellPadding,\r\n      yPosition + rowPadding + 2\r\n    );\r\n    doc.text(\r\n      \"Description\",\r\n      leftMargin +\r\n        columnWidths[0] +\r\n        columnWidths[1] +\r\n        columnWidths[2] +\r\n        cellPadding,\r\n      yPosition + rowPadding + 2\r\n    );\r\n\r\n    yPosition += rowPadding + 5;\r\n\r\n    doc.setFont(undefined, \"normal\");\r\n    data.forEach(({ src, alt, longDesc }, index) => {\r\n      const rowStartY = yPosition;\r\n\r\n      const srcText = doc.splitTextToSize(\r\n        src || \"No SRC\",\r\n        columnWidths[1] - cellPadding * 2\r\n      );\r\n      const altText = doc.splitTextToSize(\r\n        alt || \"No ALT\",\r\n        columnWidths[2] - cellPadding * 2\r\n      );\r\n      const descText = doc.splitTextToSize(\r\n        longDesc || \"No Desc\",\r\n        columnWidths[3] - cellPadding * 2\r\n      );\r\n\r\n      const maxLines = Math.max(\r\n        srcText.length,\r\n        altText.length,\r\n        descText.length\r\n      );\r\n      const rowHeightAdjusted = maxLines * 5 + rowPadding; // Adjust row height dynamically\r\n\r\n      if (yPosition + rowHeightAdjusted > pageHeight - 20) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber); // Add border and footer\r\n        yPosition = 20; // Reset yPosition with top padding\r\n      }\r\n      // Add content to the table\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.text(\r\n        `${index + 1}`,\r\n        leftMargin + cellPadding,\r\n        yPosition + rowPadding + 2\r\n      );\r\n\r\n      // URL column - make it clickable\r\n      srcText.forEach((line, lineIndex) => {\r\n        if (line === \"No SRC\") {\r\n          doc.setTextColor(255, 0, 0);\r\n        } else {\r\n          doc.setTextColor(0, 0, 139);\r\n        }\r\n        doc.text(\r\n          line,\r\n          leftMargin + columnWidths[0] + cellPadding,\r\n          yPosition + rowPadding + 2 + lineIndex * 5\r\n        );\r\n      });\r\n\r\n      // Add clickable link for URL\r\n      doc.link(\r\n        leftMargin + columnWidths[0] + cellPadding,\r\n        yPosition + rowPadding + 2,\r\n        columnWidths[1] - cellPadding * 2,\r\n        rowHeightAdjusted,\r\n        { url: src }\r\n      );\r\n\r\n      // ALT and Description columns\r\n      doc.setTextColor(0, 0, 0); // Reset color for ALT and Description\r\n      altText.forEach((line, lineIndex) => {\r\n        if (line === \"No ALT\") {\r\n          doc.setTextColor(255, 0, 0);\r\n        } else {\r\n          doc.setTextColor(0, 0, 0);\r\n        }\r\n        doc.text(\r\n          line,\r\n          leftMargin + columnWidths[0] + columnWidths[1] + cellPadding,\r\n          yPosition + rowPadding + 2 + lineIndex * 5\r\n        );\r\n      });\r\n\r\n      descText.forEach((line, lineIndex) => {\r\n        if (line === \"No Description\") {\r\n          doc.setTextColor(255, 0, 0);\r\n        } else {\r\n          doc.setTextColor(0, 0, 0);\r\n        }\r\n        doc.text(\r\n          line,\r\n          leftMargin +\r\n            columnWidths[0] +\r\n            columnWidths[1] +\r\n            columnWidths[2] +\r\n            cellPadding,\r\n          yPosition + rowPadding + 2 + lineIndex * 5\r\n        );\r\n      });\r\n\r\n      yPosition += rowHeightAdjusted;\r\n    });\r\n\r\n    // Add spacing after each table\r\n    yPosition += 15;\r\n  });\r\n\r\n  return [yPosition + 10, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addLinksTable = (doc, links, startPosition, pageNumber) => {\r\n  const categories = [\"internal\", \"external\", \"withoutHref\"];\r\n  let yPosition = startPosition;\r\n\r\n  if (yPosition > 297.0 * (3 / 4)) {\r\n    doc.addPage();\r\n    pageNumber = borderAndFooter(doc, pageNumber);\r\n    yPosition = 20;\r\n  }\r\n\r\n  // Table of Categories\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Links\", 105, yPosition, { align: \"center\" });\r\n\r\n  categories.forEach((category) => {\r\n    if (yPosition + 17 > 270) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = 20;\r\n    }\r\n\r\n    yPosition += 10;\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(\r\n      `${category.charAt(0).toUpperCase() + category.slice(1)} Links`,\r\n      20,\r\n      yPosition\r\n    );\r\n\r\n    yPosition += 10;\r\n\r\n    // Table Headers\r\n    doc.setFontSize(10);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.setFont(undefined, \"bold\");\r\n    doc.text(\"Index\", 22, yPosition);\r\n    doc.text(\"URL\", 34, yPosition);\r\n    doc.text(\"Title\", 122, yPosition);\r\n    yPosition += 7;\r\n    doc.setFont(undefined, \"normal\");\r\n\r\n    links[category]?.forEach(({ href, title }, index) => {\r\n      const urlText = doc.splitTextToSize(href?.trim() || \"No href\", 85);\r\n      const titleText = doc.splitTextToSize(title?.trim() || \"No title\", 68);\r\n\r\n      const rowHeight = Math.max(urlText.length, titleText.length) * 7;\r\n\r\n      if (yPosition + rowHeight > 285) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = 20;\r\n      }\r\n\r\n      // Set color to black for index and other text\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.text(`${index + 1}`, 22, yPosition);\r\n\r\n      // Handle title text with conditional coloring\r\n      titleText.forEach((line, lineIndex) => {\r\n        if (line === \"No title\") {\r\n          doc.setTextColor(255, 0, 0); // Red color for \"No title\"\r\n        } else {\r\n          doc.setTextColor(0, 0, 0); // Black color for valid titles\r\n        }\r\n        doc.text(line, 122, yPosition + lineIndex * 7);\r\n      });\r\n\r\n      // Set color to dark blue for clickable URL text\r\n      urlText.forEach((line, lineIndex) => {\r\n        if (line === \"No href\") {\r\n          doc.setTextColor(255, 0, 0); // Red color for \"No href\"\r\n        } else {\r\n          doc.setTextColor(0, 0, 139); // Dark Blue color for valid liks\r\n        }\r\n        doc.text(line, 34, yPosition + lineIndex * 7);\r\n      });\r\n\r\n      // Add clickable link\r\n      const linkHeight = rowHeight;\r\n      const linkStartY = yPosition - 5;\r\n      doc.link(32, linkStartY, 88, linkHeight, { url: href });\r\n\r\n      yPosition += rowHeight;\r\n    });\r\n\r\n    if (!links[category]?.length) {\r\n      if (yPosition > 270) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = 20;\r\n      }\r\n      doc.setFontSize(10);\r\n      doc.setTextColor(0, 255, 0);\r\n      doc.text(\"No links available in this category.\", 20, yPosition);\r\n      doc.setTextColor(0, 0, 0);\r\n      yPosition += 10;\r\n    }\r\n  });\r\n\r\n  return [yPosition + 10, pageNumber];\r\n};\r\n","// Code with handled nested content in the details.\r\nimport { borderAndFooter } from \"./borderandfooter\";\r\nexport const addSchemaDetails = (doc, schemas, yPosition, pageNumber) => {\r\n  const pageHeight = doc.internal.pageSize.height;\r\n  const pageWidth = 210; // Page width\r\n  const margin = 20; // Margin on both sides\r\n  const contentWidth = pageWidth - margin * 2;\r\n  const lineHeight = 5;\r\n  const columnWidths = [30, 30, 30, contentWidth - 85]; // Add a new page if starting position is too low\r\n\r\n  if (yPosition > 297 * (3 / 4)) {\r\n    doc.addPage();\r\n    pageNumber = borderAndFooter(doc, pageNumber);\r\n    yPosition = margin;\r\n  }\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.text(\"Schema List\", 105, yPosition, { align: \"center\" });\r\n  yPosition += lineHeight + 4; // Add table header\r\n\r\n  doc.setFontSize(10);\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.setTextColor(0, 0, 0); // Header labels\r\n\r\n  doc.text(\"Type\", margin, yPosition);\r\n  doc.text(\"Name\", margin + columnWidths[0], yPosition);\r\n  doc.text(\"Parent\", margin + columnWidths[0] + columnWidths[1], yPosition);\r\n  doc.text(\r\n    \"Details\",\r\n    margin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n    yPosition\r\n  );\r\n\r\n  yPosition += lineHeight;\r\n  doc.setDrawColor(0);\r\n  doc.line(margin, yPosition, 195, yPosition); // Add underline for the header\r\n  yPosition += lineHeight;\r\n\r\n  doc.setFont(undefined, \"normal\"); // Recursive function to handle nested schemas\r\n\r\n  const renderSchema = (schema, parentName = \"\", indentLevel = 0) => {\r\n    const type = schema[\"@type\"] || \"No Type\";\r\n    const name = schema.name || \"No Name\";\r\n    const parent = parentName || schema.parent || \"No Parent\"; // Use parentName if provided // Avoid including nested schema details in the parent row\r\n\r\n    let details = {};\r\n    Object.entries(schema).forEach(([key, value]) => {\r\n      if (\r\n        key !== \"@type\" &&\r\n        key !== \"name\" &&\r\n        (typeof value !== \"object\" || value === null)\r\n      ) {\r\n        details[key] = value; // Include only non-nested fields\r\n      }\r\n    });\r\n\r\n    const detailText = JSON.stringify(details, null, 2); // Split text for each column\r\n\r\n    const typeLines = doc.splitTextToSize(type, columnWidths[0] - 5);\r\n    const nameLines = doc.splitTextToSize(name, columnWidths[1] - 5);\r\n    const parentLines = doc.splitTextToSize(parent, columnWidths[2] - 5);\r\n    const detailLines = doc.splitTextToSize(detailText, columnWidths[3]); // Determine the maximum number of lines needed for the row\r\n\r\n    const maxLines = Math.max(\r\n      typeLines.length,\r\n      nameLines.length,\r\n      parentLines.length,\r\n      detailLines.length\r\n    );\r\n\r\n    // Check if the entire row fits on the current page\r\n    const requiredSpace = maxLines * lineHeight;\r\n    if (yPosition + requiredSpace > pageHeight - 10) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = margin;\r\n    }\r\n\r\n    // Render the row\r\n    for (let i = 0; i < maxLines; i++) {\r\n      if (typeLines[i]) doc.text(typeLines[i], margin, yPosition);\r\n      if (nameLines[i])\r\n        doc.text(nameLines[i], margin + columnWidths[0], yPosition);\r\n      if (parentLines[i])\r\n        doc.text(\r\n          parentLines[i],\r\n          margin + columnWidths[0] + columnWidths[1],\r\n          yPosition\r\n        );\r\n      if (detailLines[i]) {\r\n        doc.text(\r\n          detailLines[i],\r\n          margin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n          yPosition\r\n        );\r\n      }\r\n\r\n      yPosition += lineHeight; // Move to the next line\r\n    } // Recursively render nested schemas\r\n\r\n    if (typeof schema === \"object\" && schema !== null) {\r\n      Object.entries(schema).forEach(([key, value]) => {\r\n        if (typeof value === \"object\" && value !== null) {\r\n          renderSchema(value, name, indentLevel + 1); // Increase indentation for nested objects\r\n        }\r\n      });\r\n    }\r\n  }; // Add schema details row by row\r\n\r\n  schemas.forEach((schema) => {\r\n    if (yPosition + lineHeight > pageHeight - 15) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = margin;\r\n    }\r\n    renderSchema(schema); // Add spacing between rows\r\n    yPosition += 5;\r\n  });\r\n  return [yPosition + 10, pageNumber];\r\n};\r\n\r\n// // Only need to remove the nested content from the parent.\r\n// import { borderAndFooter } from \"./borderandfooter\";\r\n// export const addSchemaDetails = (doc, schemas, yPosition, pageNumber) => {\r\n//   const pageHeight = doc.internal.pageSize.height;\r\n//   const pageWidth = 210; // Page width\r\n//   const margin = 20; // Margin on both sides\r\n//   const contentWidth = pageWidth - margin * 2;\r\n//   const lineHeight = 5;\r\n//   const columnWidths = [30, 30, 30, contentWidth - 85];\r\n\r\n//   // Add a new page if starting position is too low\r\n//   if (yPosition > 297 * (3 / 4)) {\r\n//     doc.addPage();\r\n//     pageNumber = borderAndFooter(doc, pageNumber);\r\n//     yPosition = margin;\r\n//   }\r\n\r\n//   // Add section title\r\n//   doc.setFontSize(14);\r\n//   doc.setTextColor(0, 123, 255);\r\n//   doc.setFont(undefined, \"bold\");\r\n//   doc.text(\"Schema List\", 105, yPosition, { align: \"center\" });\r\n//   yPosition += lineHeight + 4;\r\n\r\n//   // Add table header\r\n//   doc.setFontSize(10);\r\n//   doc.setFont(undefined, \"bold\");\r\n//   doc.setTextColor(0, 0, 0);\r\n\r\n//   // Header labels\r\n//   doc.text(\"Type\", margin, yPosition);\r\n//   doc.text(\"Name\", margin + columnWidths[0], yPosition);\r\n//   doc.text(\"Parent\", margin + columnWidths[0] + columnWidths[1], yPosition);\r\n//   doc.text(\r\n//     \"Details\",\r\n//     margin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n//     yPosition\r\n//   );\r\n\r\n//   yPosition += lineHeight;\r\n//   doc.setDrawColor(0);\r\n//   doc.line(margin, yPosition, 195, yPosition); // Add underline for the header\r\n//   yPosition += lineHeight;\r\n\r\n//   doc.setFont(undefined, \"normal\");\r\n\r\n//   // Recursive function to handle nested schemas\r\n//   const renderSchema = (schema, parentName = \"\", indentLevel = 0) => {\r\n//     const type = schema[\"@type\"] || \"No Type\";\r\n//     const name = schema.name || \"No Name\";\r\n//     const parent = parentName || schema.parent || \"No Parent\"; // Use parentName if provided\r\n//     let details = JSON.stringify(schema, null, 2);\r\n\r\n//     // Split text for each column\r\n//     const typeLines = doc.splitTextToSize(type, columnWidths[0]);\r\n//     const nameLines = doc.splitTextToSize(name, columnWidths[1]);\r\n//     const parentLines = doc.splitTextToSize(parent, columnWidths[2]);\r\n//     const detailLines = doc.splitTextToSize(details, columnWidths[3]);\r\n\r\n//     // Determine the maximum number of lines needed for the row\r\n//     const maxLines = Math.max(\r\n//       typeLines.length,\r\n//       nameLines.length,\r\n//       parentLines.length,\r\n//       detailLines.length\r\n//     );\r\n\r\n//     // Ensure there is enough space for the row\r\n//     for (let i = 0; i < maxLines; i++) {\r\n//       if (yPosition + lineHeight > pageHeight - 15) {\r\n//         doc.addPage();\r\n//         pageNumber = borderAndFooter(doc, pageNumber);\r\n//         yPosition = margin + lineHeight; // Reset position for the new page\r\n//       }\r\n\r\n//       // Add each line of text for the current row\r\n//       if (typeLines[i]) doc.text(typeLines[i], margin, yPosition);\r\n//       if (nameLines[i])\r\n//         doc.text(nameLines[i], margin + columnWidths[0], yPosition);\r\n//       if (parentLines[i])\r\n//         doc.text(\r\n//           parentLines[i],\r\n//           margin + columnWidths[0] + columnWidths[1],\r\n//           yPosition\r\n//         );\r\n//       if (detailLines[i]) {\r\n//         doc.text(\r\n//           detailLines[i],\r\n//           margin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n//           yPosition\r\n//         );\r\n//       }\r\n\r\n//       yPosition += lineHeight; // Move to the next line\r\n//     }\r\n\r\n//     // Recursively render nested schemas\r\n//     if (typeof schema === \"object\" && schema !== null) {\r\n//       Object.entries(schema).forEach(([key, value]) => {\r\n//         if (typeof value === \"object\" && value !== null) {\r\n//           renderSchema(value, name, indentLevel + 1); // Increase indentation for nested objects\r\n//         }\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   // Add schema details row by row\r\n//   schemas.forEach((schema) => {\r\n//     if (yPosition + lineHeight > pageHeight - 15) {\r\n//       doc.addPage();\r\n//       pageNumber = borderAndFooter(doc, pageNumber);\r\n//       yPosition = margin + lineHeight * 2; // Adjust for new page\r\n//     }\r\n\r\n//     renderSchema(schema);\r\n\r\n//     // Add spacing between rows\r\n//     yPosition += 4;\r\n//   });\r\n\r\n//   return [yPosition + 10, pageNumber];\r\n// };\r\n\r\n// // Without Handing Nested json.\r\n// import { borderAndFooter } from \"./borderandfooter\";\r\n\r\n// export const addSchemaDetails = (doc, schemas, yPosition, pageNumber) => {\r\n//   const pageHeight = doc.internal.pageSize.height;\r\n//   const pageWidth = 210; // Page width\r\n//   const margin = 20; // Margin on both sides\r\n//   const contentWidth = pageWidth - margin * 2;\r\n//   const lineHeight = 5;\r\n//   const columnWidths = [30, 30, 30, contentWidth - 85];\r\n\r\n//   // Add a new page if starting position is too low\r\n//   if (yPosition > 297 * (3 / 4)) {\r\n//     doc.addPage();\r\n//     pageNumber = borderAndFooter(doc, pageNumber);\r\n//     yPosition = margin;\r\n//   }\r\n\r\n//   // Add section title\r\n//   doc.setFontSize(12);\r\n//   doc.setTextColor(0, 123, 255);\r\n//   doc.setFont(undefined, \"bold\");\r\n//   doc.text(\"Schema List\", margin, yPosition);\r\n//   yPosition += lineHeight + 4;\r\n\r\n//   // Add table header\r\n//   doc.setFontSize(10);\r\n//   doc.setFont(undefined, \"bold\");\r\n//   doc.setTextColor(0, 0, 0);\r\n\r\n//   // Header labels\r\n//   doc.text(\"Type\", margin, yPosition);\r\n//   doc.text(\"Name\", margin + columnWidths[0], yPosition);\r\n//   doc.text(\"Parent\", margin + columnWidths[0] + columnWidths[1], yPosition);\r\n//   doc.text(\r\n//     \"Details\",\r\n//     margin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n//     yPosition\r\n//   );\r\n\r\n//   yPosition += lineHeight;\r\n//   doc.setDrawColor(0);\r\n//   doc.line(margin, yPosition, 195, yPosition); // Add underline for the header\r\n//   yPosition += lineHeight;\r\n\r\n//   doc.setFont(undefined, \"normal\");\r\n\r\n//   // Add schema details row by row\r\n//   schemas.forEach((schema) => {\r\n//     if (yPosition + lineHeight > pageHeight - 15) {\r\n//       doc.addPage();\r\n//       pageNumber = borderAndFooter(doc, pageNumber);\r\n//       yPosition = margin + lineHeight * 2; // Adjust for new page\r\n//     }\r\n\r\n//     const type = schema[\"@type\"] || \"No Type\";\r\n//     const name = schema.name || \"No Name\";\r\n//     const parent = schema.parent || \"No Parent\";\r\n//     const details = JSON.stringify(schema, null, 2);\r\n\r\n//     // Split details into multiple lines if needed\r\n//     const detailLines = doc.splitTextToSize(details, columnWidths[3]);\r\n\r\n//     // Write content row\r\n//     doc.text(type, margin, yPosition);\r\n//     doc.text(name, margin + columnWidths[0], yPosition);\r\n//     doc.text(parent, margin + columnWidths[0] + columnWidths[1], yPosition);\r\n//     doc.text(\r\n//       detailLines[0],\r\n//       margin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n//       yPosition\r\n//     );\r\n\r\n//     yPosition += lineHeight;\r\n\r\n//     // Handle additional lines in the \"Details\" column\r\n//     if (detailLines.length > 1) {\r\n//       detailLines.slice(1).forEach((line) => {\r\n//         if (yPosition + lineHeight > pageHeight - 15) {\r\n//           doc.addPage();\r\n//           pageNumber = borderAndFooter(doc, pageNumber);\r\n//           yPosition = margin + lineHeight;\r\n//         }\r\n//         doc.text(\r\n//           line,\r\n//           margin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n//           yPosition\r\n//         );\r\n//         yPosition += lineHeight;\r\n//       });\r\n//     }\r\n\r\n//     // Add spacing between rows\r\n//     yPosition += 4;\r\n//   });\r\n\r\n//   return [yPosition + 10, pageNumber];\r\n// };\r\n\r\n// // Without table in the Schema.\r\n// import { borderAndFooter } from \"./borderandfooter\";\r\n\r\n// export const addSchemaDetails = (doc, schemas, yPosition, pageNumber) => {\r\n//   const pageHeight = doc.internal.pageSize.height;\r\n//   const margin = 20;\r\n//   const lineHeight = 5;\r\n\r\n//   if (yPosition > 297 * (3 / 4)) {\r\n//     doc.addPage();\r\n//     pageNumber = borderAndFooter(doc, pageNumber);\r\n//     yPosition = margin;\r\n//   }\r\n\r\n//   // Add section title\r\n//   doc.setFontSize(12);\r\n//   doc.setTextColor(0, 123, 255);\r\n//   doc.setFont(undefined, \"bold\");\r\n//   doc.text(\"Schema List\", margin, yPosition);\r\n//   yPosition += lineHeight;\r\n\r\n//   doc.setFontSize(10);\r\n//   doc.setFont(undefined, \"normal\");\r\n\r\n//   schemas.forEach((schema, index) => {\r\n//     const schemaText = `${index + 1}. ${JSON.stringify(schema, null, 2)}`;\r\n//     const textLines = doc.splitTextToSize(\r\n//       schemaText,\r\n//       doc.internal.pageSize.width - margin * 2\r\n//     );\r\n\r\n//     textLines.forEach((line) => {\r\n//       if (yPosition + lineHeight > pageHeight - 15) {\r\n//         doc.addPage();\r\n//         pageNumber = borderAndFooter(doc, pageNumber);\r\n//         yPosition = margin;\r\n//       }\r\n//       doc.setTextColor(0, 0, 0);\r\n//       doc.text(line, margin, yPosition);\r\n//       yPosition += lineHeight;\r\n//     });\r\n//   });\r\n\r\n//   return [yPosition + 10, pageNumber];\r\n// };\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const downloadGraphAsPdf = (\r\n  doc,\r\n  graphRef,\r\n  startPosition,\r\n  title,\r\n  pageNumber\r\n) => {\r\n  // Get the SVG element and convert it to an image URL (PNG)\r\n  const svgElement = graphRef.current.querySelector(\"svg\");\r\n  if (!svgElement) {\r\n    if (startPosition > 277) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      startPosition = 30;\r\n    }\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.setFont(undefined, \"bold\");\r\n    doc.text(\"Schema Structure\", 105, startPosition - 10, { align: \"center\" });\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(255, 0, 0);\r\n    doc.text(\"No Schema in the Website to show.\", 20, startPosition);\r\n    doc.save(`SEOAudit report-${title || \"Website\"}.pdf`);\r\n    return;\r\n  }\r\n\r\n  const clonedSvg = svgElement.cloneNode(true);\r\n  const bbox = svgElement.getBBox();\r\n  const width = bbox.width;\r\n  const height = bbox.height;\r\n\r\n  clonedSvg.setAttribute(\"viewBox\", `${bbox.x} ${bbox.y} ${width} ${height}`);\r\n  clonedSvg.setAttribute(\"width\", width);\r\n  clonedSvg.setAttribute(\"height\", height);\r\n\r\n  const serializer = new XMLSerializer();\r\n  const svgString = serializer.serializeToString(clonedSvg);\r\n  const blob = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\r\n  const url = URL.createObjectURL(blob);\r\n  const img = new Image();\r\n\r\n  img.onload = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleFactor = 4;\r\n    canvas.width = width * scaleFactor;\r\n    canvas.height = height * scaleFactor;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.drawImage(img, 0, 0, width * scaleFactor, height * scaleFactor);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = canvas.toDataURL(\"image/png\");\r\n    const maxWidth = 180;\r\n    const maxHeight = 200;\r\n    let imgWidth = width;\r\n    let imgHeight = height;\r\n    const aspectRatio = imgWidth / imgHeight;\r\n\r\n    if (imgWidth > maxWidth || imgHeight > maxHeight) {\r\n      if (imgWidth / maxWidth > imgHeight / maxHeight) {\r\n        imgWidth = maxWidth;\r\n        imgHeight = maxWidth / aspectRatio;\r\n      } else {\r\n        imgHeight = maxHeight;\r\n        imgWidth = maxHeight * aspectRatio;\r\n      }\r\n    }\r\n\r\n    const pageWidth = doc.internal.pageSize.width;\r\n    const x = (pageWidth - imgWidth) / 2;\r\n    const pageHeight = doc.internal.pageSize.height;\r\n\r\n    if (startPosition + imgHeight + 40 > pageHeight) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      startPosition = 30;\r\n    } else {\r\n      startPosition += 20;\r\n    }\r\n\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(\"Schema Structure\", 105, startPosition - 10, { align: \"center\" });\r\n    doc.addImage(link.href, \"PNG\", x, startPosition + 10, imgWidth, imgHeight);\r\n\r\n    // Adding WaterMark on the image.\r\n    // doc.setFontSize(70);\r\n    // doc.setTextColor(220, 220, 220);\r\n\r\n    // doc.text(\"Digispot.AI\", 210.0 / 2, 297.0 / 2, {\r\n    //   align: \"center\",\r\n    //   angle: 45,\r\n    // });\r\n\r\n    URL.revokeObjectURL(url);\r\n    doc.save(`SEOAudit report-${title || \"Website\"}.pdf`);\r\n  };\r\n\r\n  img.onerror = () => {\r\n    console.error(\"Error occurred while loading the image for download.\");\r\n  };\r\n\r\n  img.src = url;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport TabNavigation from \"./components/navigator/TabNavigation\";\r\nimport Summary from \"./tabs/summary/Summary\";\r\nimport Links from \"./tabs/links/Links\";\r\nimport Images from \"./tabs/imagestab/Images\";\r\nimport Header from \"./tabs/header/Header\";\r\nimport Schema from \"./tabs/schema/Schema\";\r\nimport PageSpeedTest from \"./tabs/pagespeed/PageSpeed\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport DownloadPdf from \"./components/downloadpdf/Downloadpdf\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [activeTab, setActiveTab] = useState(\"summary\");\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <TabNavigation activeTab={activeTab} setActiveTab={setActiveTab} />\r\n      <div className=\"app-content\">\r\n        {activeTab === \"summary\" && <Summary />}\r\n        {activeTab === \"links\" && <Links />}\r\n        {activeTab === \"images\" && <Images />}\r\n        {activeTab === \"headers\" && <Header />}\r\n        {activeTab === \"schema\" && <Schema />}\r\n        {activeTab === \"pagespeedtest\" && <PageSpeedTest />}\r\n        {activeTab === \"download\" && <DownloadPdf />}\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import TabNavigation from \"./components/navigator/TabNavigation\";\r\n// import Summary from \"./tabs/summary/Summary\";\r\n// import Links from \"./tabs/links/Links\";\r\n// import Images from \"./tabs/imagestab/Images\";\r\n// import Header from \"./tabs/header/Header\";\r\n// import Schema from \"./tabs/schema/Schema\";\r\n// import PageSpeedTest from \"./tabs/pagespeed/PageSpeed\";\r\n// import Footer from \"./components/footer/Footer\";\r\n// import \"./App.css\";\r\n\r\n// const App = () => {\r\n//   const [activeTab, setActiveTab] = useState(\"summary\");\r\n\r\n//   // State to track all tabs data\r\n//   const [tabData, setTabData] = useState({\r\n//     summary: null,\r\n//     links: null,\r\n//     images: null,\r\n//     headers: null,\r\n//     schema: null,\r\n//     pagespeedtest: null,\r\n//   });\r\n\r\n//   // Load data from chrome.storage when the app is initialized\r\n//   useEffect(() => {\r\n//     chrome.storage.local.get(null, (data) => {\r\n//       setTabData((prev) => ({ ...prev, ...data }));\r\n//     });\r\n//   }, []);\r\n\r\n//   // Save activeTab data to chrome.storage\r\n//   const saveTabData = (tabName, data) => {\r\n//     setTabData((prev) => ({ ...prev, [tabName]: data }));\r\n//     chrome.storage.local.set({ [tabName]: data });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"app-container\">\r\n//       <TabNavigation activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n//       <div className=\"app-content\">\r\n//         {activeTab === \"summary\" && (\r\n//           <Summary\r\n//             data={tabData.summary}\r\n//             saveData={(data) => saveTabData(\"summary\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"links\" && (\r\n//           <Links\r\n//             data={tabData.links}\r\n//             saveData={(data) => saveTabData(\"links\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"images\" && (\r\n//           <Images\r\n//             data={tabData.images}\r\n//             saveData={(data) => saveTabData(\"images\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"headers\" && (\r\n//           <Header\r\n//             data={tabData.headers}\r\n//             saveData={(data) => saveTabData(\"headers\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"schema\" && (\r\n//           <Schema\r\n//             data={tabData.schema}\r\n//             saveData={(data) => saveTabData(\"schema\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"pagespeedtest\" && (\r\n//           <PageSpeedTest\r\n//             data={tabData.pagespeedtest}\r\n//             saveData={(data) => saveTabData(\"pagespeedtest\", data)}\r\n//           />\r\n//         )}\r\n//       </div>\r\n\r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\n// import \"./styles.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t887: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebsite_info_crawler\"] = self[\"webpackChunkwebsite_info_crawler\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(4907)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","_ref","activeTab","setActiveTab","React","className","onClick","fetchWebsiteInfo","async","tab","chrome","tabs","query","active","currentWindow","tabId","id","Promise","resolve","reject","scripting","executeScript","target","func","robotsMeta","document","querySelector","content","xRobotsMeta","lang","documentElement","title","description","canonical","href","robots","xRobots","url","window","location","result","Error","InfoRow","label","value","valid","message","content_val","Title","Description","Canonical","Language","Summary","info","setInfo","useState","loading","setLoading","error","setError","useEffect","data","err","getInfo","Object","entries","URL","map","_ref2","checkValidity","length","key","open","fetchLinks","links","Array","from","querySelectorAll","a","textContent","trim","origin","internal","filter","link","startsWith","external","withoutHref","unique","Set","find","total","Links","setLinks","view","setView","getLinks","renderLinkCount","category","count","renderFilterButton","class","exportToCSV","csvRows","push","forEach","csvContent","join","blob","Blob","type","createObjectURL","createElement","download","click","revokeObjectURL","index","rel","l","src","alt","fetchImages","images","img","longDesc","longdesc","width","naturalWidth","height","naturalHeight","noAlt","noLongDesc","noSrc","Image","setImages","imagesData","fetchImageData","handleImageClick","imgSrc","newTab","body","innerHTML","split","pop","renderImageItem","exportCSV","csvData","fetchHeaders","headers","header","tag","tagName","toLowerCase","text","runtime","lastError","fetchedHeaders","counts","h1","h","h2","h3","h4","h5","h6","Headers","setHeaders","headerCounts","setHeaderCounts","getHeaders","isEmpty","values","every","keys","toUpperCase","fetchSchemas","script","JSON","parse","innerText","Boolean","results","renderGraph","graphRef","linkDistance","fontSize","nodeSize","isDragEnabled","simulationRef","nodes","d3","current","selectAll","remove","svg","append","attr","call","scaleExtent","on","event","graphGroup","transform","force","d","distance","strength","linkLabel","linkName","style","node","alphaTarget","restart","subject","fx","x","fy","y","name","source","buildGraphData","schemas","nodeId","traverse","parentId","arguments","undefined","hasType","currentId","schema","Schema","setSchemas","setLinkDistance","setFontSize","setNodeSize","setIsDragEnabled","isLoading","setIsLoading","isGraphView","setIsGraphView","useRef","fetchData","graphData","linkForce","alpha","drag","simulation","SchemaItem","isOpen","setIsOpen","toggleOpen","renderValue","prev","svgElement","clonedSvg","cloneNode","bbox","getBBox","setAttribute","svgString","XMLSerializer","serializeToString","onload","canvas","ctx","getContext","fillStyle","fillRect","drawImage","toDataURL","onerror","console","downloadGraphAsPng","min","max","onChange","e","Number","ref","PageSpeedTest","setUrl","desktopResult","setDesktopResult","mobileResult","setMobileResult","fetchPageSpeedData","strategy","endpoint","response","fetch","ok","json","renderScoreCard","score","Math","round","categories","performance","scoreColor","getScoreColor","backgroundColor","backgroundImage","audits","displayValue","renderMetrics","activeUrl","getActiveTabUrl","desktop","mobile","all","lighthouseResult","disabled","Footer","borderAndFooter","doc","pageNumber","pageWidth","pageSize","pageHeight","setDrawColor","rect","setTextColor","align","angle","footerurl","setFont","xPosition","yPosition","textWidth","getTextWidth","line","DownloadPdf","websiteInfo","linksData","headersData","schemadata","getData","jsPDF","recommendations","addMetaLinksDetails","startPosition","metaLinks","item","addPage","splitTextToSize","rec","String","fromCharCode","addImageSummary","imageCounts","addLinksSummary","linkCounts","addHeaderDetails","startX","columnX","headerOrder","lastIndex","currentIndex","indexOf","checkHeaderHierarchy","marginLeft","addImageTable","leftMargin","columnWidths","specialCondition","specialMessage","rowPadding","srcText","cellPadding","altText","descText","rowHeightAdjusted","lineIndex","addLinksTable","charAt","slice","urlText","titleText","rowHeight","linkHeight","linkStartY","addSchemaDetails","margin","contentWidth","lineHeight","renderSchema","parentName","indentLevel","parent","details","detailText","stringify","typeLines","nameLines","parentLines","detailLines","maxLines","i","downloadGraphAsPdf","save","maxWidth","maxHeight","imgWidth","imgHeight","aspectRatio","addImage","App","TabNavigation","Images","Header","ReactDOM","getElementById","render","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","getPrototypeOf","obj","t","mode","this","__esModule","then","ns","create","def","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}