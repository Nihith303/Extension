{"version":3,"file":"js/popup.js","mappings":"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","sources":["webpack://website-info-crawler/webpack/runtime/chunk loaded","webpack://website-info-crawler/webpack/runtime/create fake namespace object","webpack://website-info-crawler/./src/components/navigator/TabNavigation.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchWebsiteInfo.js","webpack://website-info-crawler/./src/tabs/summary/Summary.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchLinks.js","webpack://website-info-crawler/./src/tabs/links/Links.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchImages.js","webpack://website-info-crawler/./src/tabs/imagestab/Images.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchHeaders.js","webpack://website-info-crawler/./src/tabs/header/Header.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchSchema.js","webpack://website-info-crawler/./src/tabs/utils/renderGraph.js","webpack://website-info-crawler/./src/tabs/utils/buildGraph.js","webpack://website-info-crawler/./src/tabs/schema/Schema.jsx","webpack://website-info-crawler/./src/tabs/utils/downloadGraphAsPng.js","webpack://website-info-crawler/./src/tabs/pagespeed/PageSpeed.jsx","webpack://website-info-crawler/./src/components/footer/Footer.jsx","webpack://website-info-crawler/./src/components/downloadpdf/utils/borderandfooter.js","webpack://website-info-crawler/./src/components/downloadpdf/Downloadpdf.jsx","webpack://website-info-crawler/./src/components/downloadpdf/utils/addMetaLinksDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addLinksDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addImageDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addHeaderDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addImageTable.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addLinksTable.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/downloadGraphAspdf.js","webpack://website-info-crawler/./src/App.jsx","webpack://website-info-crawler/./src/popup.js","webpack://website-info-crawler/webpack/bootstrap","webpack://website-info-crawler/webpack/runtime/define property getters","webpack://website-info-crawler/webpack/runtime/ensure chunk","webpack://website-info-crawler/webpack/runtime/global","webpack://website-info-crawler/webpack/runtime/hasOwnProperty shorthand","webpack://website-info-crawler/webpack/runtime/make namespace object","webpack://website-info-crawler/webpack/runtime/jsonp chunk loading","webpack://website-info-crawler/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import React from \"react\";\r\nimport \"./TabNavigation.css\";\r\n\r\nconst TabNavigation = ({ activeTab, setActiveTab }) => (\r\n  <div className=\"tabs\">\r\n    <button\r\n      className={`tab-button ${activeTab === \"summary\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"summary\")}\r\n    >\r\n      Summary\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"links\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"links\")}\r\n    >\r\n      Links\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"images\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"images\")}\r\n    >\r\n      Images\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"headers\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"headers\")}\r\n    >\r\n      Headers\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"schema\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"schema\")}\r\n    >\r\n      Schema\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"pagespeedtest\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"pagespeedtest\")}\r\n    >\r\n      PageSpeed\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"download\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"download\")}\r\n    >\r\n      Download\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default TabNavigation;\r\n","export const fetchWebsiteInfo = async () => {\r\n  const [tab] = await chrome.tabs.query({\r\n    active: true,\r\n    currentWindow: true,\r\n  });\r\n  const tabId = tab.id;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    chrome.scripting.executeScript(\r\n      {\r\n        target: { tabId },\r\n        func: () => {\r\n          const meta = (name) =>\r\n            document.querySelector(`meta[name=\"${name}\"]`)?.content;\r\n          const robotsMeta =\r\n            document.querySelector('meta[name=\"robots\"]')?.content ||\r\n            \"Not Available\";\r\n          const xRobotsMeta =\r\n            document.querySelector('meta[http-equiv=\"X-Robots-Tag\"]')\r\n              ?.content || \"Not Available\";\r\n          const lang = document.documentElement.lang || \"Not Available\";\r\n\r\n          return {\r\n            title: document.title,\r\n            description: meta(\"description\") || \"Not Available\",\r\n            canonical:\r\n              document.querySelector('link[rel=\"canonical\"]')?.href ||\r\n              \"Not Available\",\r\n            robots: robotsMeta,\r\n            xRobots: xRobotsMeta,\r\n            lang: lang,\r\n            url: window.location.href,\r\n          };\r\n        },\r\n      },\r\n      ([result]) => {\r\n        if (result && result.result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\r\n            new Error(\r\n              \"Error fetching the Metalinks Summary, Please try again later.\"\r\n            )\r\n          );\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchWebsiteInfo } from \"../utils/fetchWebsiteInfo\";\r\nimport \"./Summary.css\";\r\n\r\nconst InfoRow = ({ label, value }) => (\r\n  <p>\r\n    <span>\r\n      <strong>{label}</strong>\r\n    </span>\r\n    <span>:</span>\r\n    <span> {value}</span>\r\n  </p>\r\n);\r\n\r\nconst Summary = () => {\r\n  const [info, setInfo] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getInfo = async () => {\r\n      try {\r\n        const data = await fetchWebsiteInfo();\r\n        setInfo(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"active-tab-container\">\r\n      {loading ? (\r\n        <i class=\"loader --1\"></i>\r\n      ) : error ? (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"info\">\r\n          <InfoRow label=\"Title\" value={info.title} />\r\n          <InfoRow label=\"Description\" value={info.description} />\r\n          <InfoRow label=\"Canonical\" value={info.canonical} />\r\n          <InfoRow label=\"URL\" value={info.url} />\r\n          <InfoRow label=\"Language\" value={info.lang} />\r\n          <InfoRow label=\"Robots Meta\" value={info.robots} />\r\n          <InfoRow label=\"X-Robots Meta\" value={info.xRobots} />\r\n        </div>\r\n      )}\r\n      {info.url && (\r\n        <div className=\"buttons\">\r\n          <button\r\n            onClick={() => window.open(`${info.url}/sitemap.xml`, \"_blank\")}\r\n          >\r\n            Sitemap\r\n          </button>\r\n          <button\r\n            onClick={() => window.open(`${info.url}/robots.txt`, \"_blank\")}\r\n          >\r\n            Robots.txt\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n\r\n// Using Chrome Storage.\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"./Summary.css\";\r\n\r\n// const Summary = ({ data, saveData }) => {\r\n//   const [info, setInfo] = useState(data || {});\r\n//   const [loading, setLoading] = useState(!data);\r\n\r\n//   useEffect(() => {\r\n//     if (!data) {\r\n//       const fetchWebsiteInfo = async () => {\r\n//         const [tab] = await chrome.tabs.query({\r\n//           active: true,\r\n//           currentWindow: true,\r\n//         });\r\n//         const tabId = tab.id;\r\n\r\n//         chrome.scripting.executeScript(\r\n//           {\r\n//             target: { tabId },\r\n//             func: () => {\r\n//               const meta = (name) =>\r\n//                 document.querySelector(`meta[name=\"${name}\"]`)?.content;\r\n//               const robotsMeta =\r\n//                 document.querySelector('meta[name=\"robots\"]')?.content ||\r\n//                 \"Not Available\";\r\n//               const xRobotsMeta =\r\n//                 document.querySelector('meta[http-equiv=\"X-Robots-Tag\"]')\r\n//                   ?.content || \"Not Available\";\r\n//               const lang = document.documentElement.lang || \"Not Available\";\r\n\r\n//               return {\r\n//                 title: document.title,\r\n//                 description: meta(\"description\") || \"Not Available\",\r\n//                 canonical:\r\n//                   document.querySelector('link[rel=\"canonical\"]')?.href ||\r\n//                   \"Not Available\",\r\n//                 robots: robotsMeta,\r\n//                 xRobots: xRobotsMeta,\r\n//                 lang: lang,\r\n//                 url: window.location.href,\r\n//               };\r\n//             },\r\n//           },\r\n//           ([result]) => {\r\n//             const fetchedData = result.result;\r\n//             setInfo(fetchedData);\r\n//             saveData(fetchedData);\r\n//             setLoading(false);\r\n//           }\r\n//         );\r\n//       };\r\n\r\n//       fetchWebsiteInfo();\r\n//     }\r\n//   }, [data, saveData]);\r\n\r\n//   return (\r\n//     <div className=\"active-tab-container\">\r\n//       <h2>Summary</h2>\r\n//       {loading ? (\r\n//         <img src=\"image/loading.gif\" alt=\"Loading\" className=\"loading\"></img>\r\n//       ) : (\r\n//         <div className=\"info\">\r\n//           <p>\r\n//             <span>\r\n//               <strong>Title</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.title}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Description</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.description}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Canonical</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.canonical}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>URL</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.url}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Language</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.lang}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.robots}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>X-Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.xRobots}</span>\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n//       {info.url && (\r\n//         <div className=\"buttons\">\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/sitemap.xml`, \"_blank\")}\r\n//           >\r\n//             Sitemap\r\n//           </button>\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/robots.txt`, \"_blank\")}\r\n//           >\r\n//             Robots.txt\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Summary;\r\n","export const fetchLinks = async () => {\r\n  const [tab] = await chrome.tabs.query({\r\n    active: true,\r\n    currentWindow: true,\r\n  });\r\n  const tabId = tab.id;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    chrome.scripting.executeScript(\r\n      {\r\n        target: { tabId },\r\n        func: () => {\r\n          const links = Array.from(document.querySelectorAll(\"a\")).map((a) => ({\r\n            href: a.href || null,\r\n            title: a.textContent.trim() || \"No title\",\r\n          }));\r\n\r\n          const url = window.location.origin;\r\n\r\n          const internal = links.filter((link) => link.href?.startsWith(url));\r\n          const external = links.filter(\r\n            (link) => link.href && !link.href.startsWith(url)\r\n          );\r\n          const withoutHref = links.filter((link) => !link.href);\r\n          const unique = [...new Set(links.map((link) => link.href))].map(\r\n            (href) => ({\r\n              href,\r\n              title:\r\n                links.find((link) => link.href === href)?.title || \"No title\",\r\n            })\r\n          );\r\n\r\n          return {\r\n            total: links,\r\n            internal,\r\n            external,\r\n            withoutHref,\r\n            unique,\r\n          };\r\n        },\r\n      },\r\n      ([result]) => {\r\n        if (result && result.result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\r\n            new Error(\r\n              \"Error Fetching the Links Details, Please try again later.\"\r\n            )\r\n          );\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchLinks } from \"../utils/fetchLinks\";\r\nimport \"./Links.css\";\r\n\r\nconst Links = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const [view, setView] = useState(\"total\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getLinks = async () => {\r\n      try {\r\n        const data = await fetchLinks();\r\n        setLinks(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getLinks();\r\n  }, []);\r\n\r\n  const exportToCSV = () => {\r\n    const csvRows = [];\r\n    csvRows.push(\"URL,Title,Category,Count\");\r\n    [\"internal\", \"external\", \"withoutHref\"].forEach((category) => {\r\n      links[category]?.forEach(({ href, title }) => {\r\n        const count =\r\n          links.total?.filter((link) => link.href === href).length || 0;\r\n        csvRows.push(\r\n          `\"${href || \"No href\"}\",\"${title}\",\"${category}\",\"${count}\"`\r\n        );\r\n      });\r\n    });\r\n    const csvContent = csvRows.join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `links.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n  const renderLinkCount = (label, category) => (\r\n    <div className=\"link-item\">\r\n      <span>{label}</span>\r\n      <span>{links[category]?.length || 0}</span>\r\n    </div>\r\n  );\r\n  const renderFilterButton = (label, category) => (\r\n    <button\r\n      className={view === category ? \"active\" : \"\"}\r\n      onClick={() => setView(category)}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"active-tab-container\">\r\n      {loading ? (\r\n        <i class=\"loader --1\"></i>\r\n      ) : error ? (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"link-counts\">\r\n            {renderLinkCount(\"Total\", \"total\")}\r\n            {renderLinkCount(\"Internal\", \"internal\")}\r\n            {renderLinkCount(\"External\", \"external\")}\r\n            {renderLinkCount(\"Without href\", \"withoutHref\")}\r\n            {renderLinkCount(\"Unique\", \"unique\")}\r\n          </div>\r\n\r\n          <div className=\"filter-buttons\">\r\n            {renderFilterButton(\"Total\", \"total\")}\r\n            {renderFilterButton(\"Internal\", \"internal\")}\r\n            {renderFilterButton(\"External\", \"external\")}\r\n            {renderFilterButton(\"No href\", \"withoutHref\")}\r\n            {renderFilterButton(\"Unique\", \"unique\")}\r\n            <button className=\"link-export-button\" onClick={exportToCSV}>\r\n              Export\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"links-table\">\r\n            {links[view]?.length > 0 ? (\r\n              links[view].map((link, index) => (\r\n                <React.Fragment key={index}>\r\n                  <div className=\"link-details\">\r\n                    <p>\r\n                      <strong>URL:</strong>\r\n                      {link.href ? (\r\n                        <a\r\n                          href={link.href}\r\n                          className=\"link-url\"\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {link.href}\r\n                        </a>\r\n                      ) : (\r\n                        \"No href\"\r\n                      )}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Title:</strong> {link.title}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"link-count\">\r\n                    <p>\r\n                      <strong>Count:</strong>{\" \"}\r\n                      {links.total?.filter((l) => l.href === link.href)\r\n                        .length || 0}\r\n                    </p>\r\n                  </div>\r\n                </React.Fragment>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-items\" id=\"no-links\">\r\n                <p>\r\n                  No Links to show in this <br /> Category\r\n                </p>\r\n                <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","export const fetchImages = async (tabId) => {\r\n  return new Promise((resolve, reject) => {\r\n    chrome.scripting.executeScript(\r\n      {\r\n        target: { tabId },\r\n        func: () => {\r\n          const images = Array.from(document.querySelectorAll(\"img\")).map(\r\n            (img) => ({\r\n              src: img.src || \"No SRC\",\r\n              alt: img.alt || \"No ALT\",\r\n              longDesc: img.longdesc || \"No Description\",\r\n              width: img.naturalWidth || \"N/A\",\r\n              height: img.naturalHeight || \"N/A\",\r\n            })\r\n          );\r\n\r\n          const noAlt = images.filter((img) => img.alt === \"No ALT\");\r\n          const noLongDesc = images.filter(\r\n            (img) => img.longDesc === \"No Description\"\r\n          );\r\n          const noSrc = images.filter((img) => img.src === \"No SRC\");\r\n\r\n          return {\r\n            total: images,\r\n            noAlt,\r\n            noLongDesc,\r\n            noSrc,\r\n          };\r\n        },\r\n      },\r\n      ([result]) => {\r\n        if (result?.result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\r\n            new Error(\r\n              \"Error Fetching the images details, Please try again later.\"\r\n            )\r\n          );\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchImages } from \"../utils/fetchImages\";\r\nimport \"./Images.css\";\r\n\r\nconst Image = () => {\r\n  const [images, setImages] = useState({\r\n    total: [],\r\n    noAlt: [],\r\n    noLongDesc: [],\r\n    noSrc: [],\r\n  });\r\n  const [view, setView] = useState(\"total\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchImageData = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({\r\n          active: true,\r\n          currentWindow: true,\r\n        });\r\n        const tabId = tab.id;\r\n        const imagesData = await fetchImages(tabId);\r\n        setImages(imagesData);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchImageData();\r\n  }, []);\r\n\r\n  const exportCSV = () => {\r\n    const csvData = images[view]\r\n      .map(\r\n        (img) =>\r\n          `${img.src},${img.alt},${img.longDesc},${img.width}x${img.height}`\r\n      )\r\n      .join(\"\\n\");\r\n    const blob = new Blob([`URL,ALT,LongDesc,Size\\n${csvData}`], {\r\n      type: \"text/csv\",\r\n    });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"images.csv\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleImageClick = (imgSrc) => {\r\n    const newTab = window.open();\r\n    if (newTab) {\r\n      newTab.document.body.innerHTML = `\r\n        <div style=\"text-align: center; margin: 20px;\">\r\n          <img src=\"${imgSrc}\" alt=\"Full Image\" style=\"max-width: 100%; height: auto; margin-bottom: 20px;\"/><br/>\r\n          <a href=\"${imgSrc}\" download=\"${imgSrc.split(\"/\").pop()}\" \r\n            style=\"display: inline-block; padding: 10px 20px; background-color: #0056b3; color: white; text-decoration: none; border-radius: 5px;\">\r\n            Download\r\n          </a>\r\n        </div>\r\n      `;\r\n    }\r\n  };\r\n\r\n  const renderImageItem = (label, count) => (\r\n    <div className=\"image-item\">\r\n      <span>{label}</span>\r\n      <span>{count || 0}</span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"active-tab-container\">\r\n      {loading ? (\r\n        <i class=\"loader --1\"></i>\r\n      ) : error ? (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"image-counts\">\r\n            {renderImageItem(\"Total Images\", images.total?.length)}\r\n            {renderImageItem(\"Without ALT\", images.noAlt?.length)}\r\n            {renderImageItem(\"Without Description\", images.noLongDesc?.length)}\r\n            {renderImageItem(\"Without SRC\", images.noSrc?.length)}\r\n          </div>\r\n          <div className=\"image-nav\">\r\n            <button onClick={() => setView(\"total\")}>Total</button>\r\n            <button onClick={() => setView(\"noAlt\")}>No ALT</button>\r\n            <button onClick={() => setView(\"noLongDesc\")}>\r\n              No Description\r\n            </button>\r\n            <button onClick={() => setView(\"noSrc\")}>No SRC</button>\r\n            <button className=\"export-button\" onClick={exportCSV}>\r\n              Export\r\n            </button>\r\n          </div>\r\n          <div className=\"images-table\">\r\n            {images[view].length === 0 ? (\r\n              <div className=\"no-items\">\r\n                <p>No Images to show in this Category</p>\r\n                <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n              </div>\r\n            ) : (\r\n              images[view].map((img, index) => (\r\n                <React.Fragment key={index}>\r\n                  <div className=\"image-details\">\r\n                    <p onClick={() => handleImageClick(img.src)}>\r\n                      <strong>URL:</strong>{\" \"}\r\n                      <span className=\"image-url\">{img.src}</span>\r\n                    </p>\r\n                    <p>\r\n                      <strong>ALT:</strong> {img.alt}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Description:</strong> {img.longDesc}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"image-preview\">\r\n                    {img.src !== \"No SRC\" ? (\r\n                      <img\r\n                        src={img.src}\r\n                        alt=\"Preview\"\r\n                        onClick={() => handleImageClick(img.src)}\r\n                      />\r\n                    ) : (\r\n                      <p>No SRC</p>\r\n                    )}\r\n                    <p>\r\n                      {img.width}x{img.height}\r\n                    </p>\r\n                  </div>\r\n                </React.Fragment>\r\n              ))\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","export const fetchHeaders = async (tabId) => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      chrome.scripting.executeScript(\r\n        {\r\n          target: { tabId },\r\n          func: () => {\r\n            const headers = [];\r\n            const headerTags = Array.from(\r\n              document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\")\r\n            );\r\n            headerTags.forEach((header) => {\r\n              headers.push({\r\n                tag: header.tagName.toLowerCase(),\r\n                text: header.textContent.trim(),\r\n              });\r\n            });\r\n            return headers;\r\n          },\r\n        },\r\n        ([result]) => {\r\n          if (chrome.runtime.lastError) {\r\n            reject(chrome.runtime.lastError);\r\n          } else {\r\n            const fetchedHeaders = result.result || [];\r\n            const counts = {\r\n              h1: fetchedHeaders.filter((h) => h.tag === \"h1\").length,\r\n              h2: fetchedHeaders.filter((h) => h.tag === \"h2\").length,\r\n              h3: fetchedHeaders.filter((h) => h.tag === \"h3\").length,\r\n              h4: fetchedHeaders.filter((h) => h.tag === \"h4\").length,\r\n              h5: fetchedHeaders.filter((h) => h.tag === \"h5\").length,\r\n              h6: fetchedHeaders.filter((h) => h.tag === \"h6\").length,\r\n            };\r\n            resolve({ headers: fetchedHeaders, counts });\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchHeaders } from \"../utils/fetchHeaders\";\r\nimport \"./Header.css\";\r\n\r\nconst Headers = () => {\r\n  const [headers, setHeaders] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [headerCounts, setHeaderCounts] = useState({\r\n    h1: 0,\r\n    h2: 0,\r\n    h3: 0,\r\n    h4: 0,\r\n    h5: 0,\r\n    h6: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getHeaders = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({\r\n          active: true,\r\n          currentWindow: true,\r\n        });\r\n        const tabId = tab.id;\r\n\r\n        const { headers: fetchedHeaders, counts } = await fetchHeaders(tabId);\r\n        setHeaders(fetchedHeaders);\r\n        setHeaderCounts(counts);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getHeaders();\r\n  }, []);\r\n\r\n  const isEmpty = Object.values(headerCounts).every((count) => count === 0);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <i class=\"loader --1\"></i>\r\n      ) : error ? (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"header-counts\">\r\n            {Object.keys(headerCounts).map((key) => (\r\n              <div className=\"header-item\" key={key}>\r\n                <span>{key.toUpperCase()}</span>\r\n                <span>{headerCounts[key] || 0}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {isEmpty ? (\r\n            <div className=\"no-items\" id=\"no-headers\">\r\n              <p>No Headers Found on this Website.</p>\r\n              <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"header-structure\">\r\n              {headers.map((header, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`header-content header-${header.tag}`}\r\n                >\r\n                  <span className=\"dashed-line\"></span>\r\n                  <strong>\r\n                    <span className=\"header-tag\">{header.tag}</span>\r\n                  </strong>\r\n                  <span className=\"header-text\">{header.text}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Headers;\r\n","export const fetchSchemas = async () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const [tab] = await chrome.tabs.query({\r\n        active: true,\r\n        currentWindow: true,\r\n      });\r\n\r\n      const tabId = tab.id;\r\n\r\n      chrome.scripting.executeScript(\r\n        {\r\n          target: { tabId },\r\n          func: () => {\r\n            const schemaScripts = Array.from(\r\n              document.querySelectorAll('script[type=\"application/ld+json\"]')\r\n            );\r\n            return schemaScripts\r\n              .map((script) => {\r\n                try {\r\n                  return JSON.parse(script.innerText);\r\n                } catch {\r\n                  return null;\r\n                }\r\n              })\r\n              .filter(Boolean);\r\n          },\r\n        },\r\n        (results) => {\r\n          if (chrome.runtime.lastError) {\r\n            reject(chrome.runtime.lastError);\r\n          } else if (results && results.length > 0) {\r\n            resolve(results[0].result || []);\r\n          } else {\r\n            resolve([]);\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      reject(new Error(\"Error Fetching the Schema, Please try again later.\"));\r\n    }\r\n  });\r\n};\r\n","import * as d3 from \"d3\";\r\nexport const renderGraph = (\r\n  graphRef,\r\n  { nodes, links },\r\n  linkDistance,\r\n  fontSize,\r\n  nodeSize,\r\n  isDragEnabled,\r\n  simulationRef,\r\n  width,\r\n  height\r\n) => {\r\n  d3.select(graphRef.current).selectAll(\"*\").remove();\r\n  const svg = d3\r\n    .select(graphRef.current)\r\n    .append(\"svg\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height)\r\n    .call(\r\n      d3\r\n        .zoom()\r\n        .scaleExtent([0.01, 5])\r\n        .on(\"zoom\", (event) => {\r\n          graphGroup.attr(\"transform\", event.transform);\r\n        })\r\n    );\r\n\r\n  const graphGroup = svg.append(\"g\");\r\n\r\n  svg\r\n    .append(\"defs\")\r\n    .append(\"marker\")\r\n    .attr(\"id\", \"arrow\")\r\n    .attr(\"viewBox\", \"0 -5 10 10\")\r\n    .attr(\"refX\", 25)\r\n    .attr(\"refY\", 0)\r\n    .attr(\"markerWidth\", 6)\r\n    .attr(\"markerHeight\", 6)\r\n    .attr(\"orient\", \"auto\")\r\n    .append(\"path\")\r\n    .attr(\"d\", \"M0,-5L10,0L0,5\")\r\n    .attr(\"fill\", \"#aaa\");\r\n\r\n  simulationRef.current = d3\r\n    .forceSimulation(nodes)\r\n    .force(\r\n      \"link\",\r\n      d3\r\n        .forceLink(links)\r\n        .id((d) => d.id)\r\n        .distance(linkDistance)\r\n    )\r\n    .force(\"charge\", d3.forceManyBody().strength(-300))\r\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\r\n\r\n  const link = graphGroup\r\n    .append(\"g\")\r\n    .attr(\"stroke\", \"#aaa\")\r\n    .attr(\"stroke-width\", 1)\r\n    .selectAll(\"line\")\r\n    .data(links)\r\n    .join(\"line\")\r\n    .attr(\"marker-end\", \"url(#arrow)\");\r\n\r\n  const linkLabel = graphGroup\r\n    .append(\"g\")\r\n    .selectAll(\"text\")\r\n    .data(links)\r\n    .join(\"text\")\r\n    .attr(\"class\", \"link-label\")\r\n    .text((d) => d.linkName || \"\")\r\n    .style(\"font-size\", `${fontSize}px`)\r\n    .style(\"fill\", \"#555\");\r\n\r\n  const node = graphGroup\r\n    .append(\"g\")\r\n    .selectAll(\"circle\")\r\n    .data(nodes)\r\n    .join(\"circle\")\r\n    .attr(\"r\", nodeSize)\r\n    .attr(\"fill\", (d) => d3.schemeCategory10[d.id % 10])\r\n    .call(\r\n      d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    );\r\n\r\n  const label = graphGroup\r\n    .append(\"g\")\r\n    .selectAll(\"text\")\r\n    .data(nodes)\r\n    .join(\"text\")\r\n    .attr(\"x\", 6)\r\n    .attr(\"y\", 3)\r\n    .text((d) => d.name)\r\n    .style(\"font-size\", `${fontSize}px`);\r\n\r\n  simulationRef.current.on(\"tick\", () => {\r\n    link\r\n      .attr(\"x1\", (d) => d.source.x)\r\n      .attr(\"y1\", (d) => d.source.y)\r\n      .attr(\"x2\", (d) => d.target.x)\r\n      .attr(\"y2\", (d) => d.target.y);\r\n\r\n    linkLabel\r\n      .attr(\"x\", (d) => (d.source.x + d.target.x) / 2)\r\n      .attr(\"y\", (d) => (d.source.y + d.target.y) / 2);\r\n\r\n    node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\r\n    label.attr(\"x\", (d) => d.x).attr(\"y\", (d) => d.y);\r\n  });\r\n\r\n  function dragstarted(event) {\r\n    if (!event.active) simulationRef.current.alphaTarget(0.3).restart();\r\n    event.subject.fx = event.subject.x;\r\n    event.subject.fy = event.subject.y;\r\n  }\r\n\r\n  function dragged(event) {\r\n    event.subject.fx = event.x;\r\n    event.subject.fy = event.y;\r\n  }\r\n\r\n  function dragended(event) {\r\n    if (!event.active) simulationRef.current.alphaTarget(0);\r\n    event.subject.fx = null;\r\n    event.subject.fy = null;\r\n  }\r\n};\r\n","export const buildGraphData = (schemas) => {\r\n  const nodes = [];\r\n  const links = [];\r\n  const rootNode = { id: 0, name: \"Schema\" };\r\n  nodes.push(rootNode);\r\n\r\n  let nodeId = 1;\r\n\r\n  const traverse = (data, parentId = 0, linkName = \"\") => {\r\n    if (typeof data === \"object\" && data !== null) {\r\n      const hasType = data[\"@type\"];\r\n      const currentId = hasType ? nodeId++ : parentId;\r\n      if (hasType) {\r\n        nodes.push({\r\n          id: currentId,\r\n          name: data[\"@type\"] || \"Object\",\r\n        });\r\n\r\n        links.push({\r\n          source: parentId,\r\n          target: currentId,\r\n          linkName: linkName,\r\n        });\r\n      }\r\n\r\n      Object.entries(data).forEach(([key, value]) => {\r\n        if (key !== \"@type\") {\r\n          traverse(value, currentId, key);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  schemas.forEach((schema) => traverse(schema));\r\n  return { nodes, links };\r\n};\r\n","import * as d3 from \"d3\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { fetchSchemas } from \"../utils/fetchSchema\";\r\nimport { renderGraph } from \"../utils/renderGraph\";\r\nimport { downloadGraphAsPng } from \"../utils/downloadGraphAsPng\";\r\nimport { buildGraphData } from \"../utils/buildGraph\";\r\nimport \"./Schema.css\";\r\n\r\nconst Schema = () => {\r\n  const [schemas, setSchemas] = useState([]);\r\n  const [linkDistance, setLinkDistance] = useState(70);\r\n  const [fontSize, setFontSize] = useState(12);\r\n  const [nodeSize, setNodeSize] = useState(8);\r\n  const [isDragEnabled, setIsDragEnabled] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isGraphView, setIsGraphView] = useState(true); // State to toggle views\r\n  const graphRef = useRef(null);\r\n  const simulationRef = useRef(null);\r\n\r\n  // Fetch schema data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await fetchSchemas();\r\n        setSchemas(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Render graph when schemas change\r\n  useEffect(() => {\r\n    if (schemas.length > 0) {\r\n      try {\r\n        const graphData = buildGraphData(schemas);\r\n        renderGraph(\r\n          graphRef,\r\n          graphData,\r\n          linkDistance,\r\n          fontSize,\r\n          nodeSize,\r\n          isDragEnabled,\r\n          simulationRef,\r\n          1000,\r\n          1000\r\n        );\r\n      } catch (err) {\r\n        setError(`Failed to render graph: ${err.message}`);\r\n      }\r\n    }\r\n  }, [schemas, isGraphView]);\r\n\r\n  // Update link distance\r\n  useEffect(() => {\r\n    if (simulationRef.current) {\r\n      const linkForce = simulationRef.current.force(\"link\");\r\n      if (linkForce) {\r\n        linkForce.distance(linkDistance);\r\n        simulationRef.current.alpha(1).restart();\r\n      }\r\n    }\r\n  }, [linkDistance]);\r\n\r\n  // Update font size\r\n  useEffect(() => {\r\n    d3.select(graphRef.current)\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", `${fontSize}px`);\r\n  }, [fontSize]);\r\n\r\n  // Update node size\r\n  useEffect(() => {\r\n    d3.select(graphRef.current).selectAll(\"circle\").attr(\"r\", nodeSize);\r\n  }, [nodeSize]);\r\n\r\n  // Update drag functionality\r\n  useEffect(() => {\r\n    if (simulationRef.current && graphRef.current) {\r\n      const nodes = d3.select(graphRef.current).selectAll(\"circle\");\r\n      if (isDragEnabled) {\r\n        nodes.call(drag(simulationRef.current));\r\n      } else {\r\n        nodes.on(\".drag\", null);\r\n      }\r\n    }\r\n  }, [isDragEnabled]);\r\n\r\n  const drag = (simulation) => {\r\n    function dragstarted(event) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      event.subject.fx = event.subject.x;\r\n      event.subject.fy = event.subject.y;\r\n    }\r\n\r\n    function dragged(event) {\r\n      event.subject.fx = event.x;\r\n      event.subject.fy = event.y;\r\n    }\r\n\r\n    function dragended(event) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      event.subject.fx = null;\r\n      event.subject.fy = null;\r\n    }\r\n\r\n    return d3\r\n      .drag()\r\n      .on(\"start\", dragstarted)\r\n      .on(\"drag\", dragged)\r\n      .on(\"end\", dragended);\r\n  };\r\n\r\n  const SchemaItem = ({ data, title }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n    const renderValue = (key, value) => {\r\n      if (typeof value === \"object\" && value !== null) {\r\n        return <SchemaItem data={value} title={value[\"@type\"] || key} />;\r\n      }\r\n      return (\r\n        <div className=\"schema-value\">\r\n          <strong>{key}:</strong> {value}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"schema-item\">\r\n        <div className=\"schema-header\" onClick={toggleOpen}>\r\n          <span>{title}</span>\r\n          <button>{isOpen ? \"▲\" : \"▼\"}</button>\r\n        </div>\r\n        {isOpen && (\r\n          <div className=\"schema-content\">\r\n            {Object.entries(data).map(([key, value], index) => (\r\n              <div key={index} className=\"schema-entry\">\r\n                {renderValue(key, value)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setIsGraphView((prev) => !prev)}\r\n        className=\"toggle-view-btn\"\r\n      >\r\n        {isGraphView ? \"Switch to List View\" : \"Switch to Graph View\"}\r\n      </button>\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n      {isLoading && <i className=\"loader --1\"></i>}\r\n      {!isLoading && !error && schemas.length > 0 && (\r\n        <div>\r\n          {isGraphView ? (\r\n            <div>\r\n              <div className=\"container\">\r\n                <div className=\"container-but\">\r\n                  <button\r\n                    onClick={() => setIsDragEnabled((prev) => !prev)}\r\n                    id=\"pause-play\"\r\n                  >\r\n                    {isDragEnabled ? (\r\n                      <img src=\"image/pause.svg\" alt=\"Pause button\" />\r\n                    ) : (\r\n                      <img src=\"image/play.svg\" alt=\"Play button\" />\r\n                    )}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => downloadGraphAsPng(graphRef)}\r\n                    id=\"download-btn\"\r\n                  >\r\n                    <img src=\"image/download.svg\" alt=\"Download Graph\" />\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"controls\">\r\n                  <div className=\"control-item\">\r\n                    <label>Font Size</label>\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"8\"\r\n                      max=\"30\"\r\n                      value={fontSize}\r\n                      onChange={(e) => setFontSize(Number(e.target.value))}\r\n                    />\r\n                    <span>{fontSize}</span>\r\n                  </div>\r\n                  <div className=\"control-item\">\r\n                    <label>Node Size</label>\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"5\"\r\n                      max=\"50\"\r\n                      value={nodeSize}\r\n                      onChange={(e) => setNodeSize(Number(e.target.value))}\r\n                    />\r\n                    <span>{nodeSize}</span>\r\n                  </div>\r\n                  <div className=\"control-item\">\r\n                    <label>Link Distance</label>\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"20\"\r\n                      max=\"200\"\r\n                      value={linkDistance}\r\n                      onChange={(e) => setLinkDistance(Number(e.target.value))}\r\n                    />\r\n                    <span>{linkDistance}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div ref={graphRef} className=\"graph-container\"></div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2 id=\"markup\">Schema Markup</h2>\r\n              <p className=\"schema-description\">\r\n                <strong>\r\n                  Schema Markup is a semantic vocabulary of tags that helps\r\n                  search engines understand your webpage and better represent it\r\n                  in the search results.\r\n                </strong>\r\n              </p>\r\n              <div className=\"schema-scrolling\">\r\n                <div className=\"schema-container\">\r\n                  {schemas.map((schema, index) => (\r\n                    <SchemaItem\r\n                      key={index}\r\n                      data={schema}\r\n                      title={schema[\"@type\"] || `Schema ${index + 1}`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      {!isLoading && !error && schemas.length === 0 && (\r\n        <div className=\"no-items\">\r\n          <p>\r\n            No Schema Found on this Website.{\" \"}\r\n            <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Schema;\r\n\r\n// import * as d3 from \"d3\";\r\n// import React, { useEffect, useState, useRef } from \"react\";\r\n// import { fetchSchemas } from \"../utils/fetchSchema\";\r\n// import { renderGraph } from \"../utils/renderGraph\";\r\n// import { downloadGraphAsPng } from \"../utils/downloadGraphAsPng\";\r\n// import { buildGraphData } from \"../utils/buildGraph\";\r\n// import \"./Schema.css\";\r\n\r\n// const Schema = () => {\r\n//   const [schemas, setSchemas] = useState([]);\r\n//   const [linkDistance, setLinkDistance] = useState(70);\r\n//   const [fontSize, setFontSize] = useState(12);\r\n//   const [nodeSize, setNodeSize] = useState(8);\r\n//   const [isDragEnabled, setIsDragEnabled] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const graphRef = useRef(null);\r\n//   const simulationRef = useRef(null);\r\n\r\n//   // Fetch schema data\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       setIsLoading(true); // Start loading\r\n//       try {\r\n//         const data = await fetchSchemas();\r\n//         setSchemas(data);\r\n//       } catch (err) {\r\n//         setError(err.message);\r\n//       } finally {\r\n//         setIsLoading(false); // End loading\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   // Render graph when schemas change\r\n//   useEffect(() => {\r\n//     if (schemas.length > 0) {\r\n//       try {\r\n//         const graphData = buildGraphData(schemas);\r\n//         renderGraph(\r\n//           graphRef,\r\n//           graphData,\r\n//           linkDistance,\r\n//           fontSize,\r\n//           nodeSize,\r\n//           isDragEnabled,\r\n//           simulationRef,\r\n//           1000,\r\n//           1000\r\n//         );\r\n//       } catch (err) {\r\n//         setError(`Failed to render graph: ${err.message}`);\r\n//       }\r\n//     }\r\n//   }, [schemas]);\r\n\r\n//   // Update link distance\r\n//   useEffect(() => {\r\n//     if (simulationRef.current) {\r\n//       const linkForce = simulationRef.current.force(\"link\");\r\n//       if (linkForce) {\r\n//         linkForce.distance(linkDistance);\r\n//         simulationRef.current.alpha(1).restart();\r\n//       }\r\n//     }\r\n//   }, [linkDistance]);\r\n\r\n//   // Update font size\r\n//   useEffect(() => {\r\n//     d3.select(graphRef.current)\r\n//       .selectAll(\"text\")\r\n//       .style(\"font-size\", `${fontSize}px`);\r\n//   }, [fontSize]);\r\n\r\n//   // Update node size\r\n//   useEffect(() => {\r\n//     d3.select(graphRef.current).selectAll(\"circle\").attr(\"r\", nodeSize);\r\n//   }, [nodeSize]);\r\n\r\n//   // Update drag functionality\r\n//   useEffect(() => {\r\n//     if (simulationRef.current && graphRef.current) {\r\n//       const nodes = d3.select(graphRef.current).selectAll(\"circle\");\r\n//       if (isDragEnabled) {\r\n//         nodes.call(drag(simulationRef.current));\r\n//       } else {\r\n//         nodes.on(\".drag\", null);\r\n//       }\r\n//     }\r\n//   }, [isDragEnabled]);\r\n\r\n//   const drag = (simulation) => {\r\n//     function dragstarted(event) {\r\n//       if (!event.active) simulation.alphaTarget(0.3).restart();\r\n//       event.subject.fx = event.subject.x;\r\n//       event.subject.fy = event.subject.y;\r\n//     }\r\n\r\n//     function dragged(event) {\r\n//       event.subject.fx = event.x;\r\n//       event.subject.fy = event.y;\r\n//     }\r\n\r\n//     function dragended(event) {\r\n//       if (!event.active) simulation.alphaTarget(0);\r\n//       event.subject.fx = null;\r\n//       event.subject.fy = null;\r\n//     }\r\n\r\n//     return d3\r\n//       .drag()\r\n//       .on(\"start\", dragstarted)\r\n//       .on(\"drag\", dragged)\r\n//       .on(\"end\", dragended);\r\n//   };\r\n\r\n//   const SchemaItem = ({ data, title }) => {\r\n//     const [isOpen, setIsOpen] = useState(false);\r\n\r\n//     const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n//     const renderValue = (key, value) => {\r\n//       if (typeof value === \"object\" && value !== null) {\r\n//         return <SchemaItem data={value} title={value[\"@type\"] || key} />;\r\n//       }\r\n//       return (\r\n//         <div className=\"schema-value\">\r\n//           <strong>{key}:</strong> {value}\r\n//         </div>\r\n//       );\r\n//     };\r\n\r\n//     return (\r\n//       <div className=\"schema-item\">\r\n//         <div className=\"schema-header\" onClick={toggleOpen}>\r\n//           <span>{title}</span>\r\n//           <button>{isOpen ? \"▲\" : \"▼\"}</button>\r\n//         </div>\r\n//         {isOpen && (\r\n//           <div className=\"schema-content\">\r\n//             {Object.entries(data).map(([key, value], index) => (\r\n//               <div key={index} className=\"schema-entry\">\r\n//                 {renderValue(key, value)}\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       {error && (\r\n//         <div className=\"error-message\">\r\n//           <p>{error}</p>\r\n//         </div>\r\n//       )}\r\n//       {isLoading && <i class=\"loader --1\"></i>}\r\n//       {!isLoading && !error && schemas.length > 0 && (\r\n//         <div>\r\n//           <div className=\"container\">\r\n//             <div className=\"container-but\">\r\n//               <button\r\n//                 onClick={() => setIsDragEnabled((prev) => !prev)}\r\n//                 id=\"pause-play\"\r\n//               >\r\n//                 {isDragEnabled ? (\r\n//                   <img src=\"image/pause.svg\" alt=\"Pause button\" />\r\n//                 ) : (\r\n//                   <img src=\"image/play.svg\" alt=\"Play button\" />\r\n//                 )}\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => downloadGraphAsPng(graphRef)}\r\n//                 id=\"download-btn\"\r\n//               >\r\n//                 <img src=\"image/download.svg\" alt=\"Download Graph\" />\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"controls\">\r\n//               <div className=\"control-item\">\r\n//                 <label>Font Size</label>\r\n//                 <input\r\n//                   type=\"range\"\r\n//                   min=\"8\"\r\n//                   max=\"30\"\r\n//                   value={fontSize}\r\n//                   onChange={(e) => setFontSize(Number(e.target.value))}\r\n//                 />\r\n//                 <span>{fontSize}</span>\r\n//               </div>\r\n//               <div className=\"control-item\">\r\n//                 <label>Node Size</label>\r\n//                 <input\r\n//                   type=\"range\"\r\n//                   min=\"5\"\r\n//                   max=\"50\"\r\n//                   value={nodeSize}\r\n//                   onChange={(e) => setNodeSize(Number(e.target.value))}\r\n//                 />\r\n//                 <span>{nodeSize}</span>\r\n//               </div>\r\n//               <div className=\"control-item\">\r\n//                 <label>Link Distance</label>\r\n//                 <input\r\n//                   type=\"range\"\r\n//                   min=\"20\"\r\n//                   max=\"200\"\r\n//                   value={linkDistance}\r\n//                   onChange={(e) => setLinkDistance(Number(e.target.value))}\r\n//                 />\r\n//                 <span>{linkDistance}</span>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div ref={graphRef} className=\"graph-container\"></div>\r\n//         </div>\r\n//       )}\r\n//       {!isLoading && !error && schemas.length === 0 && (\r\n//         <div className=\"no-items\">\r\n//           <p>\r\n//             No Schema Found on this Website.{\" \"}\r\n//             <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n//       <div>\r\n//         <h2>Schema</h2>\r\n//         <p className=\"schema-description\">\r\n//           <strong>\r\n//             Schema Markup is a semantic vocabulary of tags that helps search\r\n//             engines understand your webpage and better represent it in the\r\n//             search results.\r\n//           </strong>\r\n//         </p>\r\n//         <div className=\"schema-container\">\r\n//           {schemas.length > 0 ? (\r\n//             schemas.map((schema, index) => (\r\n//               <SchemaItem\r\n//                 key={index}\r\n//                 data={schema}\r\n//                 title={schema[\"@type\"] || `Schema ${index + 1}`}\r\n//               />\r\n//             ))\r\n//           ) : (\r\n//             <div className=\"no-items\" id=\"no-schema\">\r\n//               <p>No Schema Found on this Website.</p>\r\n//               <img src=\"notfound.svg\" alt=\"Not Found\" />\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Schema;\r\n","// import { jsPDF } from \"jspdf\";\r\nexport const downloadGraphAsPng = (graphRef) => {\r\n  // const doc = new jsPDF();\r\n\r\n  // Get the SVG element and convert it to an image URL (PNG)\r\n  const svgElement = graphRef.current.querySelector(\"svg\");\r\n  if (!svgElement) return;\r\n\r\n  // const imageUrl = svgElement.toDataURL(\"image/png\");\r\n\r\n  // Add the image to the PDF document (you can adjust the coordinates and dimensions)\r\n\r\n  // const svgElement = graphRef.current.querySelector(\"svg\");\r\n  // if (!svgElement) return;\r\n\r\n  const clonedSvg = svgElement.cloneNode(true);\r\n  const bbox = svgElement.getBBox();\r\n  const width = bbox.width;\r\n  const height = bbox.height;\r\n\r\n  clonedSvg.setAttribute(\"viewBox\", `${bbox.x} ${bbox.y} ${width} ${height}`);\r\n  clonedSvg.setAttribute(\"width\", width);\r\n  clonedSvg.setAttribute(\"height\", height);\r\n\r\n  const serializer = new XMLSerializer();\r\n  const svgString = serializer.serializeToString(clonedSvg);\r\n  const blob = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\r\n  const url = URL.createObjectURL(blob);\r\n  const img = new Image();\r\n\r\n  img.onload = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleFactor = 4;\r\n    canvas.width = width * scaleFactor;\r\n    canvas.height = height * scaleFactor;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.drawImage(img, 0, 0, width * scaleFactor, height * scaleFactor);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"schema-graph.png\";\r\n    link.href = canvas.toDataURL(\"image/png\");\r\n    link.click();\r\n\r\n    URL.revokeObjectURL(url);\r\n    // doc.text(\"Schema Structure\", 105, 10, { align: \"center\" });\r\n    // doc.addImage(link.href, \"PNG\", 30, 70, 180, 180); // Adjust the image size and position here\r\n\r\n    // Save the PDF with the desired filename\r\n    // doc.save(\"schema-graph.pdf\");\r\n  };\r\n\r\n  img.onerror = () => {\r\n    console.error(\"Error occurred while loading the image for download.\");\r\n  };\r\n\r\n  img.src = url;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./PageSpeed.css\";\r\n\r\nconst PageSpeedTest = () => {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [desktopResult, setDesktopResult] = useState(null);\r\n  const [mobileResult, setMobileResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const getActiveTabUrl = async () => {\r\n    const [tab] = await chrome.tabs.query({\r\n      active: true,\r\n      currentWindow: true,\r\n    });\r\n    return tab.url;\r\n  };\r\n\r\n  const API_KEY = \"AIzaSyCdskX2l4jTGn8RXH9zjDqnV31aHdhxTEU\";\r\n\r\n  const fetchPageSpeedData = async (url, strategy) => {\r\n    const endpoint = `https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=${url}&strategy=${strategy}&key=${API_KEY}`;\r\n    const response = await fetch(endpoint);\r\n    if (!response.ok) throw new Error(\"Failed to fetch PageSpeed data\");\r\n    return response.json();\r\n  };\r\n\r\n  const runTest = async () => {\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const activeUrl = await getActiveTabUrl();\r\n      setUrl(activeUrl);\r\n\r\n      const [desktop, mobile] = await Promise.all([\r\n        fetchPageSpeedData(activeUrl, \"desktop\"),\r\n        fetchPageSpeedData(activeUrl, \"mobile\"),\r\n      ]);\r\n\r\n      setDesktopResult(desktop.lighthouseResult);\r\n      setMobileResult(mobile.lighthouseResult);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getScoreColor = (score) => {\r\n    if (score >= 85) return \"#4caf50\";\r\n    if (score >= 50) return \"#ffc107\";\r\n    return \"#f44336\";\r\n  };\r\n\r\n  const renderMetrics = (result) => {\r\n    const audits = result.audits;\r\n    return (\r\n      <div className=\"metrics\">\r\n        <p>\r\n          <strong>First Contentful Paint</strong>\r\n          {\":\"}\r\n          {audits[\"first-contentful-paint\"].displayValue}\r\n        </p>\r\n        <p>\r\n          <strong>Largest Contentful Paint</strong>\r\n          {\":\"}\r\n          {audits[\"largest-contentful-paint\"].displayValue}\r\n        </p>\r\n        <p>\r\n          <strong>Total Blocking Time</strong>\r\n          {\":\"}\r\n          {audits[\"total-blocking-time\"].displayValue}\r\n        </p>\r\n        <p>\r\n          <strong>Cumulative Layout Shift</strong>\r\n          {\":\"}\r\n          {audits[\"cumulative-layout-shift\"].displayValue}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderScoreCard = (result, strategy) => {\r\n    const score = Math.round(result.categories.performance.score * 100);\r\n    const scoreColor = getScoreColor(score);\r\n\r\n    return (\r\n      <div className=\"score-card\">\r\n        <div\r\n          className=\"score-circle\"\r\n          style={{\r\n            backgroundColor: `white`,\r\n            backgroundImage: `conic-gradient(${scoreColor} ${score}%, #f3f3f3 ${score}%)`,\r\n          }}\r\n        >\r\n          <span>{score}</span>\r\n        </div>\r\n        <p className=\"circle-label\">{strategy} PageSpeed</p>\r\n        <p className=\"url-text\">\r\n          Google PageSpeed Insights for <br />{\" \"}\r\n          <span className=\"url\">{url}</span>\r\n        </p>\r\n        {renderMetrics(result)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagespeed-container\">\r\n      <button onClick={runTest} disabled={isLoading}>\r\n        {isLoading ? \"Running Test...\" : \"Run Speed Test\"}\r\n      </button>\r\n      {isLoading && (\r\n        <div className=\"active-tab-container\">\r\n          <p>It Might Take a While to Process, Please Wait!</p>\r\n          <br />\r\n          <i class=\"loader --1\"></i>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"score-container\">\r\n        {mobileResult && renderScoreCard(mobileResult, \"Mobile\")}\r\n        {desktopResult && renderScoreCard(desktopResult, \"Desktop\")}\r\n      </div>\r\n\r\n      {desktopResult && mobileResult && (\r\n        <div className=\"legend\">\r\n          <div>\r\n            <span className=\"legend-color green\"></span>\r\n            <strong>Good</strong>\r\n          </div>\r\n          <div>\r\n            <span className=\"legend-color yellow\"></span>\r\n            <strong>Can Be Better</strong>\r\n          </div>\r\n          <div>\r\n            <span className=\"legend-color red\"></span>\r\n            <strong>Need to Be Updated</strong>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageSpeedTest;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer-content\">\r\n        <p className=\"footer-text\">\r\n          For better results, visualization, and automated SEO <br /> audit of\r\n          your website, visit Digispot-AI.\r\n        </p>\r\n        <a\r\n          href=\"https://digispot.ai\"\r\n          id=\"mainlink\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <div className=\"footer-button\">\r\n            <img src=\"image/icon16.png\" alt=\"digispot.ai logo\" id=\"logo\" />\r\n            Digispot-AI\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const borderAndFooter = (doc, pageNumber) => {\r\n  const pageWidth = doc.internal.pageSize.width;\r\n  const pageHeight = doc.internal.pageSize.height;\r\n\r\n  // Draws the border\r\n  doc.rect(10, 10, pageWidth - 20, pageHeight - 20);\r\n  doc.rect(8, 8, pageWidth - 16, pageHeight - 16);\r\n\r\n  // Adding Watermark to the page\r\n  const watermarkText = \"Digispot.AI\";\r\n  doc.setFontSize(70);\r\n  doc.setTextColor(220, 220, 220);\r\n  doc.text(watermarkText, pageWidth / 2, pageHeight / 2, {\r\n    align: \"center\",\r\n    angle: 45,\r\n  });\r\n\r\n  // Add footer text and page number\r\n  doc.setFontSize(10);\r\n  doc.setTextColor(222, 149, 149);\r\n  const footerurl = \"https://digispot.ai\";\r\n  const headertext = \"Report by Digispot.AI\";\r\n\r\n  // Adding footertext\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.text(headertext, pageWidth - 20, 5, {\r\n    align: \"right\",\r\n  });\r\n\r\n  // Adding footerurl\r\n  doc.setFont(undefined, \"normal\");\r\n  doc.text(footerurl, pageWidth - 20, pageHeight - 3, {\r\n    align: \"right\",\r\n  });\r\n  doc.link(\r\n    pageWidth - 20 - doc.getTextWidth(footerurl),\r\n    pageHeight - 13,\r\n    doc.getTextWidth(footerurl),\r\n    10,\r\n    { url: footerurl }\r\n  );\r\n\r\n  doc.text(`${pageNumber}`, pageWidth / 2, pageHeight - 3, { align: \"center\" });\r\n  doc.setTextColor(0, 0, 0);\r\n  return pageNumber + 1;\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { fetchWebsiteInfo } from \"../../tabs/utils/fetchWebsiteInfo\";\r\nimport { fetchLinks } from \"../../tabs/utils/fetchLinks\";\r\nimport { fetchImages } from \"../../tabs/utils/fetchImages\";\r\nimport { fetchHeaders } from \"../../tabs/utils/fetchHeaders\";\r\nimport { fetchSchemas } from \"../../tabs/utils/fetchSchema\";\r\nimport { renderGraph } from \"../../tabs/utils/renderGraph\";\r\nimport { buildGraphData } from \"../../tabs/utils/buildGraph\";\r\nimport { downloadGraphAsPdf } from \"./utils/downloadGraphAspdf\";\r\nimport { addMetaLinksDetails } from \"./utils/addMetaLinksDetails\";\r\nimport { addLinksSummary } from \"./utils/addLinksDetails\";\r\nimport { addLinksTable } from \"./utils/addLinksTable\";\r\nimport { addImageSummary } from \"./utils/addImageDetails\";\r\nimport { addImageTable } from \"./utils/addImageTable\";\r\nimport { addHeaderDetails } from \"./utils/addHeaderDetails\";\r\nimport \"./Download.css\";\r\n\r\nconst DownloadPdf = () => {\r\n  const [info, setInfo] = useState({});\r\n  const [links, setLinks] = useState({});\r\n  const [images, setImages] = useState({});\r\n  const [headers, setHeaders] = useState({ headers: [], counts: {} });\r\n  const [schemas, setSchemas] = useState([]);\r\n  const [isDragEnabled, setIsDragEnabled] = useState(true);\r\n  const graphRef = useRef(null);\r\n  const simulationRef = useRef(null);\r\n  const [loading, setLoading] = useState(false); // Track loading state\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({\r\n          active: true,\r\n          currentWindow: true,\r\n        });\r\n        const tabId = tab.id;\r\n\r\n        const [websiteInfo, linksData, imagesData, headersData, schemadata] =\r\n          await Promise.all([\r\n            fetchWebsiteInfo(),\r\n            fetchLinks(),\r\n            fetchImages(tabId),\r\n            fetchHeaders(tabId),\r\n            fetchSchemas(),\r\n          ]);\r\n        setInfo(websiteInfo);\r\n        setLinks(linksData);\r\n        setImages(imagesData);\r\n        setHeaders(headersData);\r\n        setSchemas(schemadata);\r\n        console.log(schemas);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (schemas && schemas.length > 0) {\r\n      const graphData = buildGraphData(schemas);\r\n      renderGraph(\r\n        graphRef,\r\n        graphData,\r\n        100,\r\n        12,\r\n        10,\r\n        isDragEnabled,\r\n        simulationRef,\r\n        40,\r\n        40\r\n      );\r\n      console.log(graphRef);\r\n    }\r\n  }, [schemas]);\r\n\r\n  const downloadPdf = async () => {\r\n    setLoading(true); // Show loader when downloading starts\r\n    const jsPDF = (await import(\"jspdf\")).jsPDF;\r\n    const doc = new jsPDF();\r\n\r\n    let yPosition = 35;\r\n    let pageNumber = 1;\r\n    //doc.save(\"Schema.pdf\");\r\n\r\n    [yPosition, pageNumber] = addMetaLinksDetails(\r\n      doc,\r\n      info,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n    [yPosition, pageNumber] = addLinksSummary(\r\n      doc,\r\n      links,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n    [yPosition, pageNumber] = addImageSummary(\r\n      doc,\r\n      images,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n    [yPosition, pageNumber] = addHeaderDetails(\r\n      doc,\r\n      headers,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n    [yPosition, pageNumber] = addImageTable(doc, images, yPosition, pageNumber);\r\n    [yPosition, pageNumber] = addLinksTable(doc, links, yPosition, pageNumber);\r\n    setLoading(false);\r\n    downloadGraphAsPdf(doc, graphRef, yPosition, info.title, pageNumber);\r\n    // Hide loader once the download is complete\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabs\" id=\"downloadpdf\">\r\n      <div ref={graphRef} className=\"noref\"></div>\r\n      <button className=\"tab-button\" onClick={downloadPdf} id=\"downloadbutton\">\r\n        Download as PDF\r\n      </button>\r\n      <div className=\"noref\">{loading && <i class=\"loader --1\"></i>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadPdf;\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addMetaLinksDetails = (doc, info, startPosition, pageNumber) => {\r\n  const metaLinks = [\r\n    { label: \"Title\", value: info.title },\r\n    { label: \"Description\", value: info.description },\r\n    { label: \"Canonical\", value: info.canonical },\r\n    { label: \"URL\", value: info.url },\r\n    { label: \"Language\", value: info.lang },\r\n    { label: \"Robots Meta\", value: info.robots },\r\n    { label: \"X-Robots Meta\", value: info.xRobots },\r\n  ];\r\n\r\n  // Title of the Report\r\n  pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n  doc.setFontSize(16);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.text(\"Website SEO Report\", 105, 20, { align: \"center\" });\r\n\r\n  doc.setFontSize(14);\r\n  doc.setFont(undefined, \"normal\");\r\n  doc.text(\"Meta Links Data\", 20, startPosition);\r\n  let yPosition = startPosition + 10;\r\n\r\n  metaLinks.forEach((item) => {\r\n    if (yPosition > 280) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = 20;\r\n    }\r\n\r\n    // Set label text\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${item.label}`, 20, yPosition);\r\n    doc.text(\":\", 50, yPosition);\r\n\r\n    doc.setFontSize(10);\r\n    if (item.value === \"Not Available\") {\r\n      doc.setTextColor(255, 0, 0); // Red color for \"Not Available\"\r\n    } else {\r\n      doc.setTextColor(0, 0, 0); // Default black color\r\n    }\r\n\r\n    // Wrap and display text\r\n    const pageWidth = 140;\r\n    const wrappedText = doc.splitTextToSize(item.value, pageWidth);\r\n\r\n    wrappedText.forEach((line) => {\r\n      if (yPosition > 280) {\r\n        pageNumber++;\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n        yPosition = 20;\r\n      }\r\n      doc.text(line, 55, yPosition);\r\n      yPosition += 7;\r\n    });\r\n  });\r\n\r\n  return [yPosition + 15, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addLinksSummary = (doc, links, startPosition, pageNumber) => {\r\n  let yPosition = startPosition;\r\n\r\n  // Title of the Links Summary\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Links Summary\", 20, yPosition);\r\n  yPosition += 10;\r\n\r\n  // Summary Section\r\n  const linkCounts = [\r\n    { label: \"Total Links\", value: links.total?.length || 0 },\r\n    { label: \"Internal Links\", value: links.internal?.length || 0 },\r\n    { label: \"External Links\", value: links.external?.length || 0 },\r\n    { label: \"Without href\", value: links.withoutHref?.length || 0 },\r\n    { label: \"Unique Links\", value: links.unique?.length || 0 },\r\n  ];\r\n\r\n  linkCounts.forEach(({ label, value }) => {\r\n    if (yPosition + 7 > 270) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = 20;\r\n    }\r\n\r\n    // Set default text properties\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${label}`, 20, yPosition);\r\n    doc.text(\":\", 50, yPosition);\r\n\r\n    // Change text color to red if value is 0\r\n    if (value === 0 || (label === \"Without href\" && value > 0)) {\r\n      doc.setTextColor(255, 0, 0); // Red\r\n    } else {\r\n      doc.setTextColor(0, 0, 0); // Black\r\n    }\r\n\r\n    // Print value\r\n    doc.setFontSize(10);\r\n    doc.text(`${value}`, 60, yPosition);\r\n    yPosition += 7;\r\n  });\r\n\r\n  return [yPosition + 15, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\n// Function to add the summary section\r\nexport const addImageSummary = (doc, images, startPosition, pageNumber) => {\r\n  let yPosition = startPosition;\r\n  const leftMargin = 20;\r\n  const pageHeight = 290;\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Image Information\", leftMargin, yPosition);\r\n  yPosition += 10;\r\n\r\n  const imageCounts = [\r\n    { label: \"Total Images\", value: images.total?.length || 0 },\r\n    { label: \"Without ALT\", value: images.noAlt?.length || 0 },\r\n    { label: \"Without Desc\", value: images.noLongDesc?.length || 0 },\r\n    { label: \"Without SRC\", value: images.noSrc?.length || 0 },\r\n  ];\r\n\r\n  imageCounts.forEach(({ label, value }) => {\r\n    if (yPosition > pageHeight - 20) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber); // Add border and footer\r\n      yPosition = 20; // Reset yPosition with top padding\r\n    }\r\n\r\n    // Set label text color\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${label}`, leftMargin, yPosition);\r\n    doc.text(\":\", leftMargin + 30, yPosition);\r\n\r\n    // Check if value is greater than 0 and change color to red if true\r\n    doc.setFontSize(10);\r\n    if (value > 0 && label !== \"Total Images\") {\r\n      doc.setTextColor(255, 0, 0);\r\n    } else {\r\n      doc.setTextColor(0, 0, 0);\r\n    }\r\n\r\n    // Print value\r\n    doc.text(`${value}`, leftMargin + 40, yPosition);\r\n    yPosition += 7;\r\n  });\r\n\r\n  return [yPosition + 15, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addHeaderDetails = (\r\n  doc,\r\n  headersData,\r\n  startPosition,\r\n  pageNumber\r\n) => {\r\n  const marginTop = 20; // Top margin\r\n  const marginBottom = 20; // Bottom margin\r\n  const marginleft = 10;\r\n  const pageHeight = doc.internal.pageSize.height; // Page height\r\n  let yPosition = startPosition;\r\n\r\n  // Ensure startPosition is within the margin\r\n  yPosition = Math.max(yPosition, marginTop);\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Headers Information\", 20, yPosition);\r\n  yPosition += 10;\r\n\r\n  const headerCounts = headersData.counts;\r\n\r\n  // Add header counts\r\n  Object.entries(headerCounts).forEach(([header, count]) => {\r\n    if (yPosition > pageHeight - marginBottom) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = marginTop;\r\n    }\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${header.toUpperCase()}`, 20, yPosition);\r\n    doc.setFontSize(10);\r\n    doc.text(`:          ${count}`, 50, yPosition);\r\n    yPosition += 7;\r\n  });\r\n\r\n  if (yPosition > 297.0 * (3 / 4)) {\r\n    doc.addPage();\r\n    pageNumber = borderAndFooter(doc, pageNumber);\r\n    yPosition = 10;\r\n  }\r\n  yPosition += 10;\r\n  // Add detailed header content with hierarchy\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Header Details\", 20, yPosition);\r\n  yPosition += 10;\r\n\r\n  headersData.headers.forEach(({ tag, text }) => {\r\n    if (yPosition > pageHeight - marginBottom) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = marginTop;\r\n    }\r\n\r\n    // Define font size based on header level\r\n    const fontSizeMap = {\r\n      h1: 18,\r\n      h2: 14,\r\n      h3: 12,\r\n      h4: 11,\r\n      h5: 10,\r\n      h6: 9,\r\n    };\r\n    const fontSize = fontSizeMap[tag] || 10;\r\n\r\n    doc.setFontSize(fontSize);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(\r\n      `${tag.toUpperCase()}:`,\r\n      (28 - fontSize) * 1.5 + marginleft,\r\n      yPosition\r\n    );\r\n\r\n    const wrappedText = doc.splitTextToSize(text || \"No Content\", 160);\r\n    wrappedText.forEach((line) => {\r\n      if (yPosition > pageHeight - marginBottom) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = marginTop;\r\n      }\r\n      doc.text(line, (28 - fontSize) * 1.5 + marginleft + 10, yPosition);\r\n      yPosition += 7;\r\n    });\r\n    yPosition += 5;\r\n  });\r\n\r\n  return [yPosition + 10, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addImageTable = (doc, images, startPosition, pageNumber) => {\r\n  let yPosition = startPosition + 10;\r\n  const leftMargin = 15;\r\n  const cellPadding = 2;\r\n  const columnWidths = [15, 85, 50, 30]; // Column widths for Index, URL, ALT, and Description\r\n  const rowPadding = 2;\r\n  const pageHeight = 290;\r\n\r\n  if (yPosition > 297.0 / 2) {\r\n    doc.addPage();\r\n    pageNumber = borderAndFooter(doc, pageNumber);\r\n    yPosition = 20;\r\n  }\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Image Information by Category\", leftMargin, yPosition);\r\n  yPosition += 10;\r\n\r\n  const categories = [\r\n    {\r\n      label: \"Without ALT\",\r\n      data: images.noAlt || [],\r\n    },\r\n    {\r\n      label: \"Without SRC\",\r\n      data: images.noSrc || [],\r\n    },\r\n    {\r\n      label: \"Without Description\",\r\n      data: images.noLongDesc || [],\r\n      specialCondition:\r\n        (images.noLongDesc?.length || 0) === (images.total?.length || 0),\r\n      specialMessage: \"All links in the website have no Description.\",\r\n    },\r\n  ];\r\n\r\n  categories.forEach(({ label, data, specialCondition, specialMessage }) => {\r\n    if (yPosition > pageHeight - 20) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber); // Add border and footer\r\n      yPosition = 20; // Reset yPosition with top padding\r\n    }\r\n\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(label, leftMargin, yPosition);\r\n    yPosition += 7;\r\n\r\n    if (specialCondition) {\r\n      doc.setFontSize(14);\r\n      doc.setFont(undefined, \"bold\");\r\n      doc.setTextColor(255, 0, 0); // Red.\r\n      doc.text(specialMessage, leftMargin + 10, yPosition);\r\n      doc.setFont(undefined, \"normal\");\r\n      yPosition += 15; // Add space after the message\r\n      return;\r\n    }\r\n\r\n    if (data.length === 0) {\r\n      doc.setFontSize(10);\r\n      doc.setTextColor(0, 255, 0); // Green\r\n      doc.text(\"No images in this category.\", leftMargin + 10, yPosition);\r\n      yPosition += 15;\r\n      return;\r\n    }\r\n\r\n    doc.setFont(undefined, \"bold\");\r\n    doc.setFontSize(10);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(\"Index\", leftMargin + cellPadding, yPosition + rowPadding + 2);\r\n    doc.text(\r\n      \"URL\",\r\n      leftMargin + columnWidths[0] + cellPadding,\r\n      yPosition + rowPadding + 2\r\n    );\r\n    doc.text(\r\n      \"ALT\",\r\n      leftMargin + columnWidths[0] + columnWidths[1] + cellPadding,\r\n      yPosition + rowPadding + 2\r\n    );\r\n    doc.text(\r\n      \"Description\",\r\n      leftMargin +\r\n        columnWidths[0] +\r\n        columnWidths[1] +\r\n        columnWidths[2] +\r\n        cellPadding,\r\n      yPosition + rowPadding + 2\r\n    );\r\n\r\n    // Draw the header border around each column\r\n    doc.rect(leftMargin, yPosition, columnWidths[0], rowPadding + 5); // Index\r\n    doc.rect(\r\n      leftMargin + columnWidths[0],\r\n      yPosition,\r\n      columnWidths[1],\r\n      rowPadding + 5\r\n    );\r\n    doc.rect(\r\n      leftMargin + columnWidths[0] + columnWidths[1],\r\n      yPosition,\r\n      columnWidths[2],\r\n      rowPadding + 5\r\n    );\r\n    doc.rect(\r\n      leftMargin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n      yPosition,\r\n      columnWidths[3],\r\n      rowPadding + 5\r\n    );\r\n    yPosition += rowPadding + 5;\r\n\r\n    doc.setFont(undefined, \"normal\");\r\n    data.forEach(({ src, alt, longDesc }, index) => {\r\n      const rowStartY = yPosition;\r\n\r\n      const srcText = doc.splitTextToSize(\r\n        src || \"No SRC\",\r\n        columnWidths[1] - cellPadding * 2\r\n      );\r\n      const altText = doc.splitTextToSize(\r\n        alt || \"No ALT\",\r\n        columnWidths[2] - cellPadding * 2\r\n      );\r\n      const descText = doc.splitTextToSize(\r\n        longDesc || \"No Desc\",\r\n        columnWidths[3] - cellPadding * 2\r\n      );\r\n\r\n      const maxLines = Math.max(\r\n        srcText.length,\r\n        altText.length,\r\n        descText.length\r\n      );\r\n      const rowHeightAdjusted = maxLines * 5 + rowPadding; // Adjust row height dynamically\r\n\r\n      if (yPosition + rowHeightAdjusted > pageHeight - 20) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber); // Add border and footer\r\n        yPosition = 20; // Reset yPosition with top padding\r\n      }\r\n\r\n      // Draw borders for each column in the row\r\n      doc.rect(leftMargin, yPosition, columnWidths[0], rowHeightAdjusted); // Index\r\n      doc.rect(\r\n        leftMargin + columnWidths[0],\r\n        yPosition,\r\n        columnWidths[1],\r\n        rowHeightAdjusted\r\n      ); // URL\r\n      doc.rect(\r\n        leftMargin + columnWidths[0] + columnWidths[1],\r\n        yPosition,\r\n        columnWidths[2],\r\n        rowHeightAdjusted\r\n      ); // ALT\r\n      doc.rect(\r\n        leftMargin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n        yPosition,\r\n        columnWidths[3],\r\n        rowHeightAdjusted\r\n      ); // Description\r\n\r\n      // Add content to the table\r\n      doc.text(\r\n        `${index + 1}`,\r\n        leftMargin + cellPadding,\r\n        yPosition + rowPadding + 2\r\n      );\r\n\r\n      // URL column - make it clickable\r\n      doc.setTextColor(0, 0, 139); // Dark blue color for URLs\r\n      srcText.forEach((line, lineIndex) => {\r\n        doc.text(\r\n          line,\r\n          leftMargin + columnWidths[0] + cellPadding,\r\n          yPosition + rowPadding + 2 + lineIndex * 5\r\n        );\r\n      });\r\n\r\n      // Add clickable link for URL\r\n      doc.link(\r\n        leftMargin + columnWidths[0] + cellPadding,\r\n        yPosition + rowPadding + 2,\r\n        columnWidths[1] - cellPadding * 2,\r\n        rowHeightAdjusted,\r\n        { url: src }\r\n      );\r\n\r\n      // ALT and Description columns\r\n      doc.setTextColor(0, 0, 0); // Reset color for ALT and Description\r\n      altText.forEach((line, lineIndex) => {\r\n        doc.text(\r\n          line,\r\n          leftMargin + columnWidths[0] + columnWidths[1] + cellPadding,\r\n          yPosition + rowPadding + 2 + lineIndex * 5\r\n        );\r\n      });\r\n\r\n      descText.forEach((line, lineIndex) => {\r\n        doc.text(\r\n          line,\r\n          leftMargin +\r\n            columnWidths[0] +\r\n            columnWidths[1] +\r\n            columnWidths[2] +\r\n            cellPadding,\r\n          yPosition + rowPadding + 2 + lineIndex * 5\r\n        );\r\n      });\r\n\r\n      yPosition += rowHeightAdjusted;\r\n    });\r\n\r\n    // Add spacing after each table\r\n    yPosition += 15;\r\n  });\r\n\r\n  return [yPosition + 10, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addLinksTable = (doc, links, startPosition, pageNumber) => {\r\n  const categories = [\"internal\", \"external\", \"withoutHref\"];\r\n  let yPosition = startPosition;\r\n\r\n  if (yPosition > 297.0 / 2) {\r\n    doc.addPage();\r\n    pageNumber = borderAndFooter(doc, pageNumber);\r\n    yPosition = 20;\r\n  }\r\n\r\n  // Table of Categories\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Links Information by Category\", 20, yPosition);\r\n\r\n  categories.forEach((category) => {\r\n    if (yPosition + 17 > 270) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = 20;\r\n    }\r\n\r\n    yPosition += 10;\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(\r\n      `${category.charAt(0).toUpperCase() + category.slice(1)} Links`,\r\n      20,\r\n      yPosition\r\n    );\r\n\r\n    yPosition += 10;\r\n\r\n    // Table Headers\r\n    doc.setFontSize(10);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.setFont(undefined, \"bold\");\r\n    doc.rect(20, yPosition - 5, 12, 7); // Index header border with padding\r\n    doc.rect(32, yPosition - 5, 88, 7); // URL header border\r\n    doc.rect(120, yPosition - 5, 70, 7); // Title header border\r\n    doc.text(\"Index\", 22, yPosition);\r\n    doc.text(\"URL\", 34, yPosition);\r\n    doc.text(\"Title\", 122, yPosition);\r\n    yPosition += 7;\r\n    doc.setFont(undefined, \"normal\");\r\n\r\n    links[category]?.forEach(({ href, title }, index) => {\r\n      const urlText = doc.splitTextToSize(href?.trim() || \"No href\", 85);\r\n      const titleText = doc.splitTextToSize(title?.trim() || \"No title\", 68);\r\n\r\n      const rowHeight = Math.max(urlText.length, titleText.length) * 7;\r\n\r\n      if (yPosition + rowHeight > 285) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = 20;\r\n        doc.setFontSize(10);\r\n        doc.setFont(undefined, \"bold\");\r\n        doc.rect(20, yPosition - 5, 12, 7); // Index header border with padding\r\n        doc.rect(32, yPosition - 5, 88, 7); // URL header border\r\n        doc.rect(120, yPosition - 5, 70, 7); // Title header border\r\n        doc.text(\"Index\", 22, yPosition);\r\n        doc.text(\"URL\", 34, yPosition);\r\n        doc.text(\"Title\", 122, yPosition);\r\n        yPosition += 7;\r\n        doc.setFont(undefined, \"normal\");\r\n      }\r\n\r\n      doc.rect(20, yPosition - 5, 12, rowHeight); // Index border with padding\r\n      doc.rect(32, yPosition - 5, 88, rowHeight); // URL border\r\n      doc.rect(120, yPosition - 5, 70, rowHeight); // Title border\r\n\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.text(`${index + 1}`, 22, yPosition);\r\n\r\n      // Set color to black for index and title\r\n      doc.setTextColor(0, 0, 0); // Black color for index and title\r\n      titleText.forEach((line, lineIndex) => {\r\n        doc.text(line, 122, yPosition + lineIndex * 7);\r\n      });\r\n\r\n      // Set color to dark blue for clickable URL text\r\n      doc.setTextColor(0, 0, 139); // Dark blue color for URLs\r\n      urlText.forEach((line, lineIndex) => {\r\n        doc.text(line, 34, yPosition + lineIndex * 7);\r\n      });\r\n\r\n      // Add clickable link\r\n      const linkHeight = rowHeight;\r\n      const linkStartY = yPosition - 5;\r\n      doc.link(32, linkStartY, 88, linkHeight, { url: href });\r\n\r\n      yPosition += rowHeight;\r\n    });\r\n\r\n    if (!links[category]?.length) {\r\n      if (yPosition > 270) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = 20;\r\n      }\r\n      doc.setFontSize(10);\r\n      doc.setTextColor(0, 255, 0);\r\n      doc.text(\"No links available in this category.\", 20, yPosition);\r\n      doc.setTextColor(0, 0, 0);\r\n      yPosition += 10;\r\n    }\r\n  });\r\n\r\n  return [yPosition + 10, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const downloadGraphAsPdf = (\r\n  doc,\r\n  graphRef,\r\n  startPosition,\r\n  title,\r\n  pageNumber\r\n) => {\r\n  // Get the SVG element and convert it to an image URL (PNG)\r\n  const svgElement = graphRef.current.querySelector(\"svg\");\r\n  if (!svgElement) {\r\n    if (startPosition > 277) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      startPosition = 30;\r\n    }\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(\"Schema Structure\", 105, startPosition - 10, { align: \"center\" });\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(255, 0, 0);\r\n    doc.text(\"No Schema in the Website to show.\", 20, startPosition);\r\n    doc.save(`SEOAudit report-${title || \"Website\"}.pdf`);\r\n    return;\r\n  }\r\n\r\n  const clonedSvg = svgElement.cloneNode(true);\r\n  const bbox = svgElement.getBBox();\r\n  const width = bbox.width;\r\n  const height = bbox.height;\r\n\r\n  clonedSvg.setAttribute(\"viewBox\", `${bbox.x} ${bbox.y} ${width} ${height}`);\r\n  clonedSvg.setAttribute(\"width\", width);\r\n  clonedSvg.setAttribute(\"height\", height);\r\n\r\n  const serializer = new XMLSerializer();\r\n  const svgString = serializer.serializeToString(clonedSvg);\r\n  const blob = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\r\n  const url = URL.createObjectURL(blob);\r\n  const img = new Image();\r\n\r\n  img.onload = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleFactor = 4;\r\n    canvas.width = width * scaleFactor;\r\n    canvas.height = height * scaleFactor;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.drawImage(img, 0, 0, width * scaleFactor, height * scaleFactor);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = canvas.toDataURL(\"image/png\");\r\n    const maxWidth = 180;\r\n    const maxHeight = 200;\r\n    let imgWidth = width;\r\n    let imgHeight = height;\r\n    const aspectRatio = imgWidth / imgHeight;\r\n\r\n    if (imgWidth > maxWidth || imgHeight > maxHeight) {\r\n      if (imgWidth / maxWidth > imgHeight / maxHeight) {\r\n        imgWidth = maxWidth;\r\n        imgHeight = maxWidth / aspectRatio;\r\n      } else {\r\n        imgHeight = maxHeight;\r\n        imgWidth = maxHeight * aspectRatio;\r\n      }\r\n    }\r\n\r\n    const pageWidth = doc.internal.pageSize.width;\r\n    const x = (pageWidth - imgWidth) / 2;\r\n    const pageHeight = doc.internal.pageSize.height;\r\n\r\n    if (startPosition + imgHeight + 40 > pageHeight) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      startPosition = 30;\r\n    } else {\r\n      startPosition += 20;\r\n    }\r\n\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(\"Schema Structure\", 105, startPosition - 10, { align: \"center\" });\r\n    doc.addImage(link.href, \"PNG\", x, startPosition + 10, imgWidth, imgHeight);\r\n\r\n    // Adding WaterMark on the image.\r\n    // doc.setFontSize(70);\r\n    // doc.setTextColor(220, 220, 220);\r\n\r\n    // doc.text(\"Digispot.AI\", 210.0 / 2, 297.0 / 2, {\r\n    //   align: \"center\",\r\n    //   angle: 45,\r\n    // });\r\n\r\n    URL.revokeObjectURL(url);\r\n    doc.save(`SEOAudit report-${title || \"Website\"}.pdf`);\r\n  };\r\n\r\n  img.onerror = () => {\r\n    console.error(\"Error occurred while loading the image for download.\");\r\n  };\r\n\r\n  img.src = url;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport TabNavigation from \"./components/navigator/TabNavigation\";\r\nimport Summary from \"./tabs/summary/Summary\";\r\nimport Links from \"./tabs/links/Links\";\r\nimport Images from \"./tabs/imagestab/Images\";\r\nimport Header from \"./tabs/header/Header\";\r\nimport Schema from \"./tabs/schema/Schema\";\r\nimport PageSpeedTest from \"./tabs/pagespeed/PageSpeed\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport DownloadPdf from \"./components/downloadpdf/Downloadpdf\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [activeTab, setActiveTab] = useState(\"summary\");\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <TabNavigation activeTab={activeTab} setActiveTab={setActiveTab} />\r\n      <div className=\"app-content\">\r\n        {activeTab === \"summary\" && <Summary />}\r\n        {activeTab === \"links\" && <Links />}\r\n        {activeTab === \"images\" && <Images />}\r\n        {activeTab === \"headers\" && <Header />}\r\n        {activeTab === \"schema\" && <Schema />}\r\n        {activeTab === \"pagespeedtest\" && <PageSpeedTest />}\r\n        {activeTab === \"download\" && <DownloadPdf />}\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import TabNavigation from \"./components/navigator/TabNavigation\";\r\n// import Summary from \"./tabs/summary/Summary\";\r\n// import Links from \"./tabs/links/Links\";\r\n// import Images from \"./tabs/imagestab/Images\";\r\n// import Header from \"./tabs/header/Header\";\r\n// import Schema from \"./tabs/schema/Schema\";\r\n// import PageSpeedTest from \"./tabs/pagespeed/PageSpeed\";\r\n// import Footer from \"./components/footer/Footer\";\r\n// import \"./App.css\";\r\n\r\n// const App = () => {\r\n//   const [activeTab, setActiveTab] = useState(\"summary\");\r\n\r\n//   // State to track all tabs data\r\n//   const [tabData, setTabData] = useState({\r\n//     summary: null,\r\n//     links: null,\r\n//     images: null,\r\n//     headers: null,\r\n//     schema: null,\r\n//     pagespeedtest: null,\r\n//   });\r\n\r\n//   // Load data from chrome.storage when the app is initialized\r\n//   useEffect(() => {\r\n//     chrome.storage.local.get(null, (data) => {\r\n//       setTabData((prev) => ({ ...prev, ...data }));\r\n//     });\r\n//   }, []);\r\n\r\n//   // Save activeTab data to chrome.storage\r\n//   const saveTabData = (tabName, data) => {\r\n//     setTabData((prev) => ({ ...prev, [tabName]: data }));\r\n//     chrome.storage.local.set({ [tabName]: data });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"app-container\">\r\n//       <TabNavigation activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n//       <div className=\"app-content\">\r\n//         {activeTab === \"summary\" && (\r\n//           <Summary\r\n//             data={tabData.summary}\r\n//             saveData={(data) => saveTabData(\"summary\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"links\" && (\r\n//           <Links\r\n//             data={tabData.links}\r\n//             saveData={(data) => saveTabData(\"links\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"images\" && (\r\n//           <Images\r\n//             data={tabData.images}\r\n//             saveData={(data) => saveTabData(\"images\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"headers\" && (\r\n//           <Header\r\n//             data={tabData.headers}\r\n//             saveData={(data) => saveTabData(\"headers\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"schema\" && (\r\n//           <Schema\r\n//             data={tabData.schema}\r\n//             saveData={(data) => saveTabData(\"schema\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"pagespeedtest\" && (\r\n//           <PageSpeedTest\r\n//             data={tabData.pagespeedtest}\r\n//             saveData={(data) => saveTabData(\"pagespeedtest\", data)}\r\n//           />\r\n//         )}\r\n//       </div>\r\n\r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\n// import \"./styles.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t887: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebsite_info_crawler\"] = self[\"webpackChunkwebsite_info_crawler\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(7337)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","_ref","activeTab","setActiveTab","React","className","onClick","fetchWebsiteInfo","async","tab","chrome","tabs","query","active","currentWindow","tabId","id","Promise","resolve","reject","scripting","executeScript","target","func","robotsMeta","document","querySelector","content","xRobotsMeta","lang","documentElement","title","description","canonical","href","robots","xRobots","url","window","location","result","Error","InfoRow","label","value","Summary","info","setInfo","useState","loading","setLoading","error","setError","useEffect","data","err","message","getInfo","class","open","fetchLinks","links","Array","from","querySelectorAll","map","a","textContent","trim","origin","internal","filter","link","startsWith","external","withoutHref","unique","Set","find","total","Links","setLinks","view","setView","getLinks","renderLinkCount","category","length","renderFilterButton","exportToCSV","csvRows","push","forEach","count","csvContent","join","blob","Blob","type","URL","createObjectURL","createElement","download","click","revokeObjectURL","index","key","rel","l","src","alt","fetchImages","images","img","longDesc","longdesc","width","naturalWidth","height","naturalHeight","noAlt","noLongDesc","noSrc","Image","setImages","imagesData","fetchImageData","handleImageClick","imgSrc","newTab","body","innerHTML","split","pop","renderImageItem","exportCSV","csvData","fetchHeaders","headers","header","tag","tagName","toLowerCase","text","runtime","lastError","fetchedHeaders","counts","h1","h","h2","h3","h4","h5","h6","Headers","setHeaders","headerCounts","setHeaderCounts","getHeaders","isEmpty","Object","values","every","keys","toUpperCase","fetchSchemas","script","JSON","parse","innerText","Boolean","results","renderGraph","graphRef","linkDistance","fontSize","nodeSize","isDragEnabled","simulationRef","nodes","d3","current","selectAll","remove","svg","append","attr","call","scaleExtent","on","event","graphGroup","transform","force","d","distance","strength","linkLabel","linkName","style","node","alphaTarget","restart","subject","fx","x","fy","y","name","source","buildGraphData","schemas","nodeId","traverse","parentId","arguments","undefined","hasType","currentId","entries","schema","Schema","setSchemas","setLinkDistance","setFontSize","setNodeSize","setIsDragEnabled","isLoading","setIsLoading","isGraphView","setIsGraphView","useRef","fetchData","graphData","linkForce","alpha","drag","simulation","SchemaItem","isOpen","setIsOpen","toggleOpen","_ref2","renderValue","prev","svgElement","clonedSvg","cloneNode","bbox","getBBox","setAttribute","svgString","XMLSerializer","serializeToString","onload","canvas","ctx","getContext","fillStyle","fillRect","drawImage","toDataURL","onerror","console","downloadGraphAsPng","min","max","onChange","e","Number","ref","PageSpeedTest","setUrl","desktopResult","setDesktopResult","mobileResult","setMobileResult","fetchPageSpeedData","strategy","endpoint","response","fetch","ok","json","renderScoreCard","score","Math","round","categories","performance","scoreColor","getScoreColor","backgroundColor","backgroundImage","audits","displayValue","renderMetrics","activeUrl","getActiveTabUrl","desktop","mobile","all","lighthouseResult","disabled","Footer","borderAndFooter","doc","pageNumber","pageWidth","pageSize","pageHeight","rect","setTextColor","align","angle","footerurl","setFont","getTextWidth","DownloadPdf","websiteInfo","linksData","headersData","schemadata","log","getData","jsPDF","yPosition","addMetaLinksDetails","startPosition","metaLinks","item","addPage","splitTextToSize","line","addLinksSummary","addImageSummary","leftMargin","addHeaderDetails","addImageTable","columnWidths","specialCondition","specialMessage","rowPadding","srcText","cellPadding","altText","descText","rowHeightAdjusted","lineIndex","addLinksTable","charAt","slice","urlText","titleText","rowHeight","linkHeight","linkStartY","downloadGraphAsPdf","save","maxWidth","maxHeight","imgWidth","imgHeight","aspectRatio","addImage","App","TabNavigation","Images","Header","ReactDOM","getElementById","render","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","splice","r","getPrototypeOf","obj","t","mode","this","__esModule","then","ns","create","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}