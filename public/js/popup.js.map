{"version":3,"file":"js/popup.js","mappings":"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","sources":["webpack://website-info-crawler/webpack/runtime/chunk loaded","webpack://website-info-crawler/webpack/runtime/create fake namespace object","webpack://website-info-crawler/./src/components/navigator/TabNavigation.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchWebsiteInfo.js","webpack://website-info-crawler/./src/tabs/summary/Summary.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchLinks.js","webpack://website-info-crawler/./src/tabs/links/Links.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchImages.js","webpack://website-info-crawler/./src/tabs/imagestab/Images.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchHeaders.js","webpack://website-info-crawler/./src/tabs/header/Header.jsx","webpack://website-info-crawler/./src/tabs/utils/fetchSchema.js","webpack://website-info-crawler/./src/tabs/utils/renderGraph.js","webpack://website-info-crawler/./src/tabs/utils/buildGraph.js","webpack://website-info-crawler/./src/tabs/schema/Schema.jsx","webpack://website-info-crawler/./src/tabs/utils/downloadGraphAsPng.js","webpack://website-info-crawler/./src/tabs/pagespeed/PageSpeed.jsx","webpack://website-info-crawler/./src/components/footer/Footer.jsx","webpack://website-info-crawler/./src/components/downloadpdf/utils/borderandfooter.js","webpack://website-info-crawler/./src/components/downloadpdf/Downloadpdf.jsx","webpack://website-info-crawler/./src/components/downloadpdf/utils/addMetaLinksDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addLinksDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addImageDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/addHeaderDetails.js","webpack://website-info-crawler/./src/components/downloadpdf/utils/downloadGraphAspdf.js","webpack://website-info-crawler/./src/App.jsx","webpack://website-info-crawler/./src/popup.js","webpack://website-info-crawler/webpack/bootstrap","webpack://website-info-crawler/webpack/runtime/define property getters","webpack://website-info-crawler/webpack/runtime/ensure chunk","webpack://website-info-crawler/webpack/runtime/global","webpack://website-info-crawler/webpack/runtime/hasOwnProperty shorthand","webpack://website-info-crawler/webpack/runtime/make namespace object","webpack://website-info-crawler/webpack/runtime/jsonp chunk loading","webpack://website-info-crawler/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import React from \"react\";\r\nimport \"./TabNavigation.css\";\r\n\r\nconst TabNavigation = ({ activeTab, setActiveTab }) => (\r\n  <div className=\"tabs\">\r\n    <button\r\n      className={`tab-button ${activeTab === \"summary\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"summary\")}>\r\n      Summary\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"links\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"links\")}>\r\n      Links\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"images\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"images\")}>\r\n      Images\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"headers\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"headers\")}>\r\n      Headers\r\n    </button>\r\n    <button\r\n      className={`tab-button ${activeTab === \"schema\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"schema\")}>\r\n      Schema\r\n  </button>\r\n  <button\r\n      className={`tab-button ${activeTab === \"pagespeedtest\" ? \"active\" : \"\"}`}\r\n      onClick={() => setActiveTab(\"pagespeedtest\")}>\r\n      PageSpeed\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default TabNavigation;\r\n","export const fetchWebsiteInfo = async () => {\r\n  const [tab] = await chrome.tabs.query({\r\n    active: true,\r\n    currentWindow: true,\r\n  });\r\n  const tabId = tab.id;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    chrome.scripting.executeScript(\r\n      {\r\n        target: { tabId },\r\n        func: () => {\r\n          const meta = (name) =>\r\n            document.querySelector(`meta[name=\"${name}\"]`)?.content;\r\n          const robotsMeta =\r\n            document.querySelector('meta[name=\"robots\"]')?.content ||\r\n            \"Not Available\";\r\n          const xRobotsMeta =\r\n            document.querySelector('meta[http-equiv=\"X-Robots-Tag\"]')\r\n              ?.content || \"Not Available\";\r\n          const lang = document.documentElement.lang || \"Not Available\";\r\n\r\n          return {\r\n            title: document.title,\r\n            description: meta(\"description\") || \"Not Available\",\r\n            canonical:\r\n              document.querySelector('link[rel=\"canonical\"]')?.href ||\r\n              \"Not Available\",\r\n            robots: robotsMeta,\r\n            xRobots: xRobotsMeta,\r\n            lang: lang,\r\n            url: window.location.href,\r\n          };\r\n        },\r\n      },\r\n      ([result]) => {\r\n        if (result && result.result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(new Error(\"Failed to fetch website info\"));\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchWebsiteInfo } from \"../utils/fetchWebsiteInfo\";\r\nimport \"./Summary.css\";\r\n\r\nconst Summary = () => {\r\n  const [info, setInfo] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getInfo = async () => {\r\n      try {\r\n        const data = await fetchWebsiteInfo();\r\n        setInfo(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching website info:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"active-tab-container\">\r\n      <h2>Summary</h2>\r\n      {loading ? (\r\n        <img src=\"image/loading.gif\" alt=\"Loading\" className=\"loading\"></img>\r\n      ) : (\r\n        <div className=\"info\">\r\n          <p>\r\n            <span>\r\n              <strong>Title</strong>\r\n            </span>\r\n            <span>:</span>\r\n            <span> {info.title}</span>\r\n          </p>\r\n          <p>\r\n            <span>\r\n              <strong>Description</strong>\r\n            </span>\r\n            <span>:</span>\r\n            <span> {info.description}</span>\r\n          </p>\r\n          <p>\r\n            <span>\r\n              <strong>Canonical</strong>\r\n            </span>\r\n            <span>:</span>\r\n            <span> {info.canonical}</span>\r\n          </p>\r\n          <p>\r\n            <span>\r\n              <strong>URL</strong>\r\n            </span>\r\n            <span>:</span>\r\n            <span> {info.url}</span>\r\n          </p>\r\n          <p>\r\n            <span>\r\n              <strong>Language</strong>\r\n            </span>\r\n            <span>:</span>\r\n            <span> {info.lang}</span>\r\n          </p>\r\n          <p>\r\n            <span>\r\n              <strong>Robots Meta</strong>\r\n            </span>\r\n            <span>:</span>\r\n            <span> {info.robots}</span>\r\n          </p>\r\n          <p>\r\n            <span>\r\n              <strong>X-Robots Meta</strong>\r\n            </span>\r\n            <span>:</span>\r\n            <span> {info.xRobots}</span>\r\n          </p>\r\n        </div>\r\n      )}\r\n      {info.url && (\r\n        <div className=\"buttons\">\r\n          <button\r\n            onClick={() => window.open(`${info.url}/sitemap.xml`, \"_blank\")}\r\n          >\r\n            Sitemap\r\n          </button>\r\n          <button\r\n            onClick={() => window.open(`${info.url}/robots.txt`, \"_blank\")}\r\n          >\r\n            Robots.txt\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"./Summary.css\";\r\n\r\n// const Summary = () => {\r\n//   const [info, setInfo] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Fetch website info\r\n//   useEffect(() => {\r\n//     const fetchWebsiteInfo = async () => {\r\n//       const [tab] = await chrome.tabs.query({\r\n//         active: true,\r\n//         currentWindow: true,\r\n//       });\r\n//       const tabId = tab.id;\r\n\r\n//       chrome.scripting.executeScript(\r\n//         {\r\n//           target: { tabId },\r\n//           func: () => {\r\n//             const meta = (name) =>\r\n//               document.querySelector(`meta[name=\"${name}\"]`)?.content;\r\n//             const robotsMeta =\r\n//               document.querySelector('meta[name=\"robots\"]')?.content ||\r\n//               \"Not Available\";\r\n//             const xRobotsMeta =\r\n//               document.querySelector('meta[http-equiv=\"X-Robots-Tag\"]')\r\n//                 ?.content || \"Not Available\";\r\n//             const lang = document.documentElement.lang || \"Not Available\";\r\n\r\n//             return {\r\n//               title: document.title,\r\n//               description: meta(\"description\") || \"Not Available\",\r\n//               canonical:\r\n//                 document.querySelector('link[rel=\"canonical\"]')?.href ||\r\n//                 \"Not Available\",\r\n//               robots: robotsMeta,\r\n//               xRobots: xRobotsMeta,\r\n//               lang: lang,\r\n//               url: window.location.href,\r\n//             };\r\n//           },\r\n//         },\r\n//         ([result]) => {\r\n//           const fetchedData = result.result;\r\n//           setInfo(fetchedData);\r\n//           setLoading(false);\r\n//         }\r\n//       );\r\n//     };\r\n\r\n//     fetchWebsiteInfo();\r\n//   }, []);\r\n//   const exportToPDF = async () => {\r\n//     const jsPDF = (await import(\"jspdf\")).jsPDF;\r\n//     const doc = new jsPDF();\r\n//     doc.setFontSize(16);\r\n//     doc.text(\"Website Summary Report\", 105, 10, { align: \"center\" });\r\n//     const summaryData = [\r\n//       { label: \"Title\", value: info.title },\r\n//       { label: \"Description\", value: info.description },\r\n//       { label: \"Canonical\", value: info.canonical },\r\n//       { label: \"URL\", value: info.url },\r\n//       { label: \"Language\", value: info.lang },\r\n//       { label: \"Robots Meta\", value: info.robots },\r\n//       { label: \"X-Robots Meta\", value: info.xRobots },\r\n//     ];\r\n//     let yPosition = 20;\r\n//     summaryData.forEach((item) => {\r\n//       if (yPosition > 280) {\r\n//         doc.addPage();\r\n//         yPosition = 10;\r\n//       }\r\n//       doc.setFontSize(12);\r\n//       doc.text(`${item.label}`, 10, yPosition);\r\n//       doc.text(\":\", 40, yPosition);\r\n//       doc.setFontSize(10);\r\n//       const pageWidth = 140;\r\n//       const wrappedText = doc.splitTextToSize(\r\n//         item.value || \"Not Available\",\r\n//         pageWidth\r\n//       );\r\n\r\n//       wrappedText.forEach((line) => {\r\n//         if (yPosition > 280) {\r\n//           doc.addPage();\r\n//           yPosition = 10;\r\n//         }\r\n//         doc.text(line, 45, yPosition);\r\n//         yPosition += 7;\r\n//       });\r\n//     });\r\n//     doc.save(`${info.title}` + \" website-summary.pdf\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"active-tab-container\">\r\n//       <h2>Summary</h2>\r\n//       {loading ? (\r\n//         <img src=\"image/loading.gif\" alt=\"Loading\" className=\"loading\"></img>\r\n//       ) : (\r\n//         <div className=\"info\">\r\n//           <p>\r\n//             <span>\r\n//               <strong>Title</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.title}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Description</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.description}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Canonical</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.canonical}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>URL</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.url}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Language</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.lang}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.robots}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>X-Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.xRobots}</span>\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n//       {info.url && (\r\n//         <div className=\"buttons\">\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/sitemap.xml`, \"_blank\")}\r\n//           >\r\n//             Sitemap\r\n//           </button>\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/robots.txt`, \"_blank\")}\r\n//           >\r\n//             Robots.txt\r\n//           </button>\r\n//           {/* <button onClick={exportToPDF}>Export PDF</button> */}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Summary;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"./Summary.css\";\r\n\r\n// const Summary = () => {\r\n//   const [info, setInfo] = useState({});\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const fetchWebsiteInfo = async () => {\r\n//       const [tab] = await chrome.tabs.query({\r\n//         active: true,\r\n//         currentWindow: true,\r\n//       });\r\n//       const tabId = tab.id;\r\n\r\n//       chrome.scripting.executeScript(\r\n//         {\r\n//           target: { tabId },\r\n//           func: () => {\r\n//             const meta = (name) =>\r\n//               document.querySelector(`meta[name=\"${name}\"]`)?.content;\r\n//             const robotsMeta =\r\n//               document.querySelector('meta[name=\"robots\"]')?.content ||\r\n//               \"Not Available\";\r\n//             const xRobotsMeta =\r\n//               document.querySelector('meta[http-equiv=\"X-Robots-Tag\"]')\r\n//                 ?.content || \"Not Available\";\r\n//             const lang = document.documentElement.lang || \"Not Available\";\r\n\r\n//             return {\r\n//               title: document.title,\r\n//               description: meta(\"description\") || \"Not Available\",\r\n//               canonical:\r\n//                 document.querySelector('link[rel=\"canonical\"]')?.href ||\r\n//                 \"Not Available\",\r\n//               robots: robotsMeta,\r\n//               xRobots: xRobotsMeta,\r\n//               lang: lang,\r\n//               url: window.location.href,\r\n//             };\r\n//           },\r\n//         },\r\n//         ([result]) => {\r\n//           const fetchedData = result.result;\r\n//           setInfo(fetchedData);\r\n//           setLoading(false);\r\n//         }\r\n//       );\r\n//     };\r\n\r\n//     fetchWebsiteInfo();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"active-tab-container\">\r\n//       <h2>Summary</h2>\r\n//       {loading ? (\r\n//         <img src=\"image/loading.gif\" alt=\"Loading\" className=\"loading\"></img>\r\n//       ) : (\r\n//         <div className=\"info\">\r\n//           <p>\r\n//             <span>\r\n//               <strong>Title</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.title}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Description</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.description}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Canonical</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.canonical}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>URL</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.url}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Language</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.lang}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.robots}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>X-Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.xRobots}</span>\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n//       {info.url && (\r\n//         <div className=\"buttons\">\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/sitemap.xml`, \"_blank\")}\r\n//           >\r\n//             Sitemap\r\n//           </button>\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/robots.txt`, \"_blank\")}\r\n//           >\r\n//             Robots.txt\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Summary;\r\n\r\n// USing Chrome Storage.\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"./Summary.css\";\r\n\r\n// const Summary = ({ data, saveData }) => {\r\n//   const [info, setInfo] = useState(data || {});\r\n//   const [loading, setLoading] = useState(!data);\r\n\r\n//   useEffect(() => {\r\n//     if (!data) {\r\n//       const fetchWebsiteInfo = async () => {\r\n//         const [tab] = await chrome.tabs.query({\r\n//           active: true,\r\n//           currentWindow: true,\r\n//         });\r\n//         const tabId = tab.id;\r\n\r\n//         chrome.scripting.executeScript(\r\n//           {\r\n//             target: { tabId },\r\n//             func: () => {\r\n//               const meta = (name) =>\r\n//                 document.querySelector(`meta[name=\"${name}\"]`)?.content;\r\n//               const robotsMeta =\r\n//                 document.querySelector('meta[name=\"robots\"]')?.content ||\r\n//                 \"Not Available\";\r\n//               const xRobotsMeta =\r\n//                 document.querySelector('meta[http-equiv=\"X-Robots-Tag\"]')\r\n//                   ?.content || \"Not Available\";\r\n//               const lang = document.documentElement.lang || \"Not Available\";\r\n\r\n//               return {\r\n//                 title: document.title,\r\n//                 description: meta(\"description\") || \"Not Available\",\r\n//                 canonical:\r\n//                   document.querySelector('link[rel=\"canonical\"]')?.href ||\r\n//                   \"Not Available\",\r\n//                 robots: robotsMeta,\r\n//                 xRobots: xRobotsMeta,\r\n//                 lang: lang,\r\n//                 url: window.location.href,\r\n//               };\r\n//             },\r\n//           },\r\n//           ([result]) => {\r\n//             const fetchedData = result.result;\r\n//             setInfo(fetchedData);\r\n//             saveData(fetchedData);\r\n//             setLoading(false);\r\n//           }\r\n//         );\r\n//       };\r\n\r\n//       fetchWebsiteInfo();\r\n//     }\r\n//   }, [data, saveData]);\r\n\r\n//   return (\r\n//     <div className=\"active-tab-container\">\r\n//       <h2>Summary</h2>\r\n//       {loading ? (\r\n//         <img src=\"image/loading.gif\" alt=\"Loading\" className=\"loading\"></img>\r\n//       ) : (\r\n//         <div className=\"info\">\r\n//           <p>\r\n//             <span>\r\n//               <strong>Title</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.title}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Description</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.description}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Canonical</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.canonical}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>URL</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.url}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Language</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.lang}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.robots}</span>\r\n//           </p>\r\n//           <p>\r\n//             <span>\r\n//               <strong>X-Robots Meta</strong>\r\n//             </span>\r\n//             <span>:</span>\r\n//             <span> {info.xRobots}</span>\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n//       {info.url && (\r\n//         <div className=\"buttons\">\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/sitemap.xml`, \"_blank\")}\r\n//           >\r\n//             Sitemap\r\n//           </button>\r\n//           <button\r\n//             onClick={() => window.open(`${info.url}/robots.txt`, \"_blank\")}\r\n//           >\r\n//             Robots.txt\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Summary;\r\n","export const fetchLinks = async () => {\r\n  const [tab] = await chrome.tabs.query({\r\n    active: true,\r\n    currentWindow: true,\r\n  });\r\n  const tabId = tab.id;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    chrome.scripting.executeScript(\r\n      {\r\n        target: { tabId },\r\n        func: () => {\r\n          const links = Array.from(document.querySelectorAll(\"a\"))\r\n            .map((a) => ({\r\n              href: a.href,\r\n              title: a.textContent.trim() || \"No title\",\r\n            }))\r\n            .filter((link) => link.href);\r\n\r\n          const url = window.location.origin;\r\n\r\n          const internal = links.filter((link) => link.href.startsWith(url));\r\n          const external = links.filter((link) => !link.href.startsWith(url));\r\n          const unique = [...new Set(links.map((link) => link.href))].map(\r\n            (href) => ({\r\n              href,\r\n              title:\r\n                links.find((link) => link.href === href)?.title || \"No title\",\r\n            })\r\n          );\r\n\r\n          return {\r\n            total: links,\r\n            internal,\r\n            external,\r\n            unique,\r\n          };\r\n        },\r\n      },\r\n      ([result]) => {\r\n        if (result && result.result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(new Error(\"Failed to fetch links\"));\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchLinks } from \"../utils/fetchLinks\";\r\nimport \"./Links.css\";\r\n\r\nconst Links = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const [view, setView] = useState(\"total\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getLinks = async () => {\r\n      try {\r\n        const data = await fetchLinks();\r\n        setLinks(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching links:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getLinks();\r\n  }, []);\r\n\r\n  const exportToCSV = () => {\r\n    const csvRows = [];\r\n    csvRows.push(\"URL,Title,Category,Count\");\r\n    [\"internal\", \"external\"].forEach((category) => {\r\n      links[category]?.forEach(({ href, title }) => {\r\n        const count =\r\n          links.total?.filter((link) => link.href === href).length || 0;\r\n        csvRows.push(`\"${href}\",\"${title}\",\"${category}\",\"${count}\"`);\r\n      });\r\n    });\r\n    const csvContent = csvRows.join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `links.csv`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"active-tab-container\">\r\n      <h2>Links</h2>\r\n      {loading ? (\r\n        <img className=\"loading\" src=\"image/loading.gif\" alt=\"Loading\"></img>\r\n      ) : (\r\n        <>\r\n          <div className=\"link-counts\">\r\n            <div className=\"link-item\">\r\n              <span>Total Links</span>\r\n              <span>{links.total?.length || 0}</span>\r\n            </div>\r\n            <div className=\"link-item\">\r\n              <span>Internal Links</span>\r\n              <span>{links.internal?.length || 0}</span>\r\n            </div>\r\n            <div className=\"link-item\">\r\n              <span>External Links</span>\r\n              <span>{links.external?.length || 0}</span>\r\n            </div>\r\n            <div className=\"link-item\">\r\n              <span>Unique Links</span>\r\n              <span>{links.unique?.length || 0}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"filter-buttons\">\r\n            <button\r\n              className={view === \"total\" ? \"active\" : \"\"}\r\n              onClick={() => setView(\"total\")}\r\n            >\r\n              Total\r\n            </button>\r\n            <button\r\n              className={view === \"internal\" ? \"active\" : \"\"}\r\n              onClick={() => setView(\"internal\")}\r\n            >\r\n              Internal\r\n            </button>\r\n            <button\r\n              className={view === \"external\" ? \"active\" : \"\"}\r\n              onClick={() => setView(\"external\")}\r\n            >\r\n              External\r\n            </button>\r\n            <button\r\n              className={view === \"unique\" ? \"active\" : \"\"}\r\n              onClick={() => setView(\"unique\")}\r\n            >\r\n              Unique\r\n            </button>\r\n            <button className=\"link-export-button\" onClick={exportToCSV}>\r\n              Export Links\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"links-table\">\r\n            {links[view]?.length > 0 ? (\r\n              links[view].map((link, index) => (\r\n                <React.Fragment key={index}>\r\n                  <div className=\"link-details\">\r\n                    <p>\r\n                      <strong>URL:</strong>\r\n                      <a\r\n                        href={link.href}\r\n                        className=\"link-url\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {link.href}\r\n                      </a>\r\n                    </p>\r\n                    <p>\r\n                      <strong>Title:</strong> {link.title}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"link-count\">\r\n                    <p>\r\n                      <strong>Count:</strong>{\" \"}\r\n                      {links.total?.filter((l) => l.href === link.href)\r\n                        .length || 0}\r\n                    </p>\r\n                  </div>\r\n                </React.Fragment>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-items\" id=\"no-links\">\r\n                <p>\r\n                  No Links to show in this <br /> Category\r\n                </p>\r\n                <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","export const fetchImages = async (tabId) => {\r\n  return new Promise((resolve, reject) => {\r\n    chrome.scripting.executeScript(\r\n      {\r\n        target: { tabId },\r\n        func: () => {\r\n          const images = Array.from(document.querySelectorAll(\"img\")).map(\r\n            (img) => ({\r\n              src: img.src || \"No SRC\",\r\n              alt: img.alt || \"No ALT\",\r\n              longDesc: img.longdesc || \"No Description\",\r\n              width: img.naturalWidth || \"N/A\",\r\n              height: img.naturalHeight || \"N/A\",\r\n            })\r\n          );\r\n\r\n          const noAlt = images.filter((img) => img.alt === \"No ALT\");\r\n          const noLongDesc = images.filter(\r\n            (img) => img.longDesc === \"No Description\"\r\n          );\r\n          const noSrc = images.filter((img) => img.src === \"No SRC\");\r\n\r\n          return {\r\n            total: images,\r\n            noAlt,\r\n            noLongDesc,\r\n            noSrc,\r\n          };\r\n        },\r\n      },\r\n      ([result]) => {\r\n        if (result?.result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\"Error fetching images\");\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Images.css\";\r\nimport { fetchImages } from \"../utils/fetchImages\";\r\n\r\nconst Image = () => {\r\n  const [images, setImages] = useState({\r\n    total: [],\r\n    noAlt: [],\r\n    noLongDesc: [],\r\n    noSrc: [],\r\n  });\r\n  const [view, setView] = useState(\"total\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchImageData = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({\r\n          active: true,\r\n          currentWindow: true,\r\n        });\r\n        const tabId = tab.id;\r\n        const imagesData = await fetchImages(tabId);\r\n        setImages(imagesData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching images:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchImageData();\r\n  }, []);\r\n\r\n  const exportCSV = () => {\r\n    const csvData = images[view]\r\n      .map(\r\n        (img) =>\r\n          `${img.src},${img.alt},${img.longDesc},${img.width}x${img.height}`\r\n      )\r\n      .join(\"\\n\");\r\n    const blob = new Blob([`URL,ALT,LongDesc,Size\\n${csvData}`], {\r\n      type: \"text/csv\",\r\n    });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"images.csv\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleImageClick = (imgSrc) => {\r\n    const newTab = window.open();\r\n    if (newTab) {\r\n      newTab.document.body.innerHTML = `\r\n        <div style=\"text-align: center; margin: 20px;\">\r\n          <img src=\"${imgSrc}\" alt=\"Full Image\" style=\"max-width: 100%; height: auto; margin-bottom: 20px;\"/><br/>\r\n          <a href=\"${imgSrc}\" download=\"${imgSrc.split(\"/\").pop()}\" \r\n            style=\"display: inline-block; padding: 10px 20px; background-color: #0056b3; color: white; text-decoration: none; border-radius: 5px;\">\r\n            Download\r\n          </a>\r\n        </div>\r\n      `;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"active-tab-container\">\r\n      <h2>Images</h2>\r\n      {loading ? (\r\n        <img src=\"image/loading.gif\" alt=\"Loading\" className=\"loading\"></img>\r\n      ) : (\r\n        <>\r\n          <div className=\"image-counts\">\r\n            <div className=\"image-item\">\r\n              <span>Total Images</span>\r\n              <span>{images.total?.length || 0}</span>\r\n            </div>\r\n            <div className=\"image-item\">\r\n              <span>Without ALT</span>\r\n              <span>{images.noAlt?.length || 0}</span>\r\n            </div>\r\n            <div className=\"image-item\">\r\n              <span>Without Description</span>\r\n              <span>{images.noLongDesc?.length || 0}</span>\r\n            </div>\r\n            <div className=\"image-item\">\r\n              <span>Without SRC</span>\r\n              <span>{images.noSrc?.length || 0}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"image-nav\">\r\n            <button onClick={() => setView(\"total\")}>Total</button>\r\n            <button onClick={() => setView(\"noAlt\")}>No ALT</button>\r\n            <button onClick={() => setView(\"noLongDesc\")}>\r\n              No Description\r\n            </button>\r\n            <button onClick={() => setView(\"noSrc\")}>No SRC</button>\r\n            <button className=\"export-button\" onClick={exportCSV}>\r\n              Export\r\n            </button>\r\n          </div>\r\n          <div className=\"images-table\">\r\n            {images[view].length === 0 ? (\r\n              <div className=\"no-items\">\r\n                <p>No Images to show in this Category</p>\r\n                <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n              </div>\r\n            ) : (\r\n              images[view].map((img, index) => (\r\n                <React.Fragment key={index}>\r\n                  <div className=\"image-details\">\r\n                    <p onClick={() => handleImageClick(img.src)}>\r\n                      <strong>URL:</strong>{\" \"}\r\n                      <span className=\"image-url\">{img.src}</span>\r\n                    </p>\r\n                    <p>\r\n                      <strong>ALT:</strong> {img.alt}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Description:</strong> {img.longDesc}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"image-preview\">\r\n                    {img.src !== \"No SRC\" ? (\r\n                      <img\r\n                        src={img.src}\r\n                        alt=\"Preview\"\r\n                        onClick={() => handleImageClick(img.src)}\r\n                      />\r\n                    ) : (\r\n                      <p>No SRC</p>\r\n                    )}\r\n                    <p>\r\n                      {img.width}x{img.height}\r\n                    </p>\r\n                  </div>\r\n                </React.Fragment>\r\n              ))\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","export const fetchHeaders = async (tabId) => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      chrome.scripting.executeScript(\r\n        {\r\n          target: { tabId },\r\n          func: () => {\r\n            const headers = [];\r\n            const headerTags = Array.from(\r\n              document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\")\r\n            );\r\n            headerTags.forEach((header) => {\r\n              headers.push({\r\n                tag: header.tagName.toLowerCase(),\r\n                text: header.textContent.trim(),\r\n              });\r\n            });\r\n            return headers;\r\n          },\r\n        },\r\n        ([result]) => {\r\n          if (chrome.runtime.lastError) {\r\n            reject(chrome.runtime.lastError);\r\n          } else {\r\n            const fetchedHeaders = result.result || [];\r\n            const counts = {\r\n              h1: fetchedHeaders.filter((h) => h.tag === \"h1\").length,\r\n              h2: fetchedHeaders.filter((h) => h.tag === \"h2\").length,\r\n              h3: fetchedHeaders.filter((h) => h.tag === \"h3\").length,\r\n              h4: fetchedHeaders.filter((h) => h.tag === \"h4\").length,\r\n              h5: fetchedHeaders.filter((h) => h.tag === \"h5\").length,\r\n              h6: fetchedHeaders.filter((h) => h.tag === \"h6\").length,\r\n            };\r\n            resolve({ headers: fetchedHeaders, counts });\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { fetchHeaders } from \"../utils/fetchHeaders\";\r\n\r\nconst Headers = () => {\r\n  const [headers, setHeaders] = useState([]);\r\n  const [headerCounts, setHeaderCounts] = useState({\r\n    h1: 0,\r\n    h2: 0,\r\n    h3: 0,\r\n    h4: 0,\r\n    h5: 0,\r\n    h6: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getHeaders = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({\r\n          active: true,\r\n          currentWindow: true,\r\n        });\r\n        const tabId = tab.id;\r\n\r\n        const { headers: fetchedHeaders, counts } = await fetchHeaders(tabId);\r\n        setHeaders(fetchedHeaders);\r\n        setHeaderCounts(counts);\r\n      } catch (error) {\r\n        console.error(\"Error fetching headers:\", error);\r\n      }\r\n    };\r\n\r\n    getHeaders();\r\n  }, []);\r\n\r\n  const isEmpty = Object.values(headerCounts).every((count) => count === 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Headers</h2>\r\n      <div className=\"header-counts\">\r\n        {Object.keys(headerCounts).map((key) => (\r\n          <div className=\"header-item\" key={key}>\r\n            <span>{key.toUpperCase()}</span>\r\n            <span>{headerCounts[key] || 0}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {isEmpty ? (\r\n        <div className=\"no-items\" id=\"no-headers\">\r\n          <p>No Headers Found on this Website.</p>\r\n          <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"header-structure\">\r\n          {headers.map((header, index) => (\r\n            <div key={index} className={`header-content header-${header.tag}`}>\r\n              <span className=\"dashed-line\"></span>\r\n              <strong>\r\n                <span className=\"header-tag\">{header.tag}</span>\r\n              </strong>\r\n              <span className=\"header-text\">{header.text}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Headers;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"./Header.css\";\r\n\r\n// const Headers = () => {\r\n//   const [headers, setHeaders] = useState([]);\r\n//   const [headerCounts, setHeaderCounts] = useState({\r\n//     h1: 0,\r\n//     h2: 0,\r\n//     h3: 0,\r\n//     h4: 0,\r\n//     h5: 0,\r\n//     h6: 0,\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchHeaders = async () => {\r\n//       const [tab] = await chrome.tabs.query({\r\n//         active: true,\r\n//         currentWindow: true,\r\n//       });\r\n//       const tabId = tab.id;\r\n\r\n//       chrome.scripting.executeScript(\r\n//         {\r\n//           target: { tabId },\r\n//           func: () => {\r\n//             const headers = [];\r\n//             const headerTags = Array.from(\r\n//               document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\")\r\n//             );\r\n//             headerTags.forEach((header) => {\r\n//               headers.push({\r\n//                 tag: header.tagName.toLowerCase(),\r\n//                 text: header.textContent.trim(),\r\n//               });\r\n//             });\r\n//             return headers;\r\n//           },\r\n//         },\r\n//         ([result]) => {\r\n//           const fetchedHeaders = result.result || [];\r\n//           const counts = {\r\n//             h1: fetchedHeaders.filter((h) => h.tag === \"h1\").length,\r\n//             h2: fetchedHeaders.filter((h) => h.tag === \"h2\").length,\r\n//             h3: fetchedHeaders.filter((h) => h.tag === \"h3\").length,\r\n//             h4: fetchedHeaders.filter((h) => h.tag === \"h4\").length,\r\n//             h5: fetchedHeaders.filter((h) => h.tag === \"h5\").length,\r\n//             h6: fetchedHeaders.filter((h) => h.tag === \"h6\").length,\r\n//           };\r\n\r\n//           setHeaders(fetchedHeaders);\r\n//           setHeaderCounts(counts);\r\n//         }\r\n//       );\r\n//     };\r\n\r\n//     fetchHeaders();\r\n//   }, []);\r\n\r\n//   const isEmpty = Object.values(headerCounts).every((count) => count === 0);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Headers</h2>\r\n//       <div className=\"header-counts\">\r\n//         {Object.keys(headerCounts).map((key) => (\r\n//           <div className=\"header-item\" key={key}>\r\n//             <span>{key.toUpperCase()}</span>\r\n//             <span>{headerCounts[key] || 0}</span>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       {isEmpty ? (\r\n//         <div className=\"no-items\" id=\"no-headers\">\r\n//           <p>No Headers Found on this Website.</p>\r\n//           <img src=\"image/notfound.svg\" alt=\"Not Found\" />\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"header-structure\">\r\n//           {headers.map((header, index) => (\r\n//             <div key={index} className={`header-content header-${header.tag}`}>\r\n//               <span className=\"dashed-line\"></span>\r\n//               <strong>\r\n//                 <span className=\"header-tag\">{header.tag}</span>\r\n//               </strong>\r\n//               <span className=\"header-text\">{header.text}</span>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Headers;\r\n","export const fetchSchemas = async (callback) => {\r\n  const [tab] = await chrome.tabs.query({\r\n    active: true,\r\n    currentWindow: true,\r\n  });\r\n  const tabId = tab.id;\r\n\r\n  chrome.scripting.executeScript(\r\n    {\r\n      target: { tabId },\r\n      func: () => {\r\n        const schemaScripts = Array.from(\r\n          document.querySelectorAll('script[type=\"application/ld+json\"]')\r\n        );\r\n        return schemaScripts\r\n          .map((script) => {\r\n            try {\r\n              return JSON.parse(script.innerText);\r\n            } catch {\r\n              return null;\r\n            }\r\n          })\r\n          .filter(Boolean);\r\n      },\r\n    },\r\n    ([result]) => {\r\n      callback(result.result || []);\r\n    }\r\n  );\r\n};\r\n","import * as d3 from \"d3\";\r\nexport const renderGraph = (\r\n  graphRef,\r\n  { nodes, links },\r\n  linkDistance,\r\n  fontSize,\r\n  nodeSize,\r\n  isDragEnabled,\r\n  simulationRef,\r\n  width,\r\n  height\r\n) => {\r\n  d3.select(graphRef.current).selectAll(\"*\").remove();\r\n  const svg = d3\r\n    .select(graphRef.current)\r\n    .append(\"svg\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height)\r\n    .call(\r\n      d3\r\n        .zoom()\r\n        .scaleExtent([0.01, 5])\r\n        .on(\"zoom\", (event) => {\r\n          graphGroup.attr(\"transform\", event.transform);\r\n        })\r\n    );\r\n\r\n  const graphGroup = svg.append(\"g\");\r\n\r\n  svg\r\n    .append(\"defs\")\r\n    .append(\"marker\")\r\n    .attr(\"id\", \"arrow\")\r\n    .attr(\"viewBox\", \"0 -5 10 10\")\r\n    .attr(\"refX\", 25)\r\n    .attr(\"refY\", 0)\r\n    .attr(\"markerWidth\", 6)\r\n    .attr(\"markerHeight\", 6)\r\n    .attr(\"orient\", \"auto\")\r\n    .append(\"path\")\r\n    .attr(\"d\", \"M0,-5L10,0L0,5\")\r\n    .attr(\"fill\", \"#aaa\");\r\n\r\n  simulationRef.current = d3\r\n    .forceSimulation(nodes)\r\n    .force(\r\n      \"link\",\r\n      d3\r\n        .forceLink(links)\r\n        .id((d) => d.id)\r\n        .distance(linkDistance)\r\n    )\r\n    .force(\"charge\", d3.forceManyBody().strength(-300))\r\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\r\n\r\n  const link = graphGroup\r\n    .append(\"g\")\r\n    .attr(\"stroke\", \"#aaa\")\r\n    .attr(\"stroke-width\", 1)\r\n    .selectAll(\"line\")\r\n    .data(links)\r\n    .join(\"line\")\r\n    .attr(\"marker-end\", \"url(#arrow)\");\r\n\r\n  const linkLabel = graphGroup\r\n    .append(\"g\")\r\n    .selectAll(\"text\")\r\n    .data(links)\r\n    .join(\"text\")\r\n    .attr(\"class\", \"link-label\")\r\n    .text((d) => d.linkName || \"\")\r\n    .style(\"font-size\", `${fontSize}px`)\r\n    .style(\"fill\", \"#555\");\r\n\r\n  const node = graphGroup\r\n    .append(\"g\")\r\n    .selectAll(\"circle\")\r\n    .data(nodes)\r\n    .join(\"circle\")\r\n    .attr(\"r\", nodeSize)\r\n    .attr(\"fill\", (d) => d3.schemeCategory10[d.id % 10])\r\n    .call(\r\n      d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    );\r\n\r\n  const label = graphGroup\r\n    .append(\"g\")\r\n    .selectAll(\"text\")\r\n    .data(nodes)\r\n    .join(\"text\")\r\n    .attr(\"x\", 6)\r\n    .attr(\"y\", 3)\r\n    .text((d) => d.name)\r\n    .style(\"font-size\", `${fontSize}px`);\r\n\r\n  simulationRef.current.on(\"tick\", () => {\r\n    link\r\n      .attr(\"x1\", (d) => d.source.x)\r\n      .attr(\"y1\", (d) => d.source.y)\r\n      .attr(\"x2\", (d) => d.target.x)\r\n      .attr(\"y2\", (d) => d.target.y);\r\n\r\n    linkLabel\r\n      .attr(\"x\", (d) => (d.source.x + d.target.x) / 2)\r\n      .attr(\"y\", (d) => (d.source.y + d.target.y) / 2);\r\n\r\n    node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\r\n    label.attr(\"x\", (d) => d.x).attr(\"y\", (d) => d.y);\r\n  });\r\n\r\n  function dragstarted(event) {\r\n    if (!event.active) simulationRef.current.alphaTarget(0.3).restart();\r\n    event.subject.fx = event.subject.x;\r\n    event.subject.fy = event.subject.y;\r\n  }\r\n\r\n  function dragged(event) {\r\n    event.subject.fx = event.x;\r\n    event.subject.fy = event.y;\r\n  }\r\n\r\n  function dragended(event) {\r\n    if (!event.active) simulationRef.current.alphaTarget(0);\r\n    event.subject.fx = null;\r\n    event.subject.fy = null;\r\n  }\r\n};\r\n","export const buildGraphData = (schemas) => {\r\n  const nodes = [];\r\n  const links = [];\r\n  const rootNode = { id: 0, name: \"Schema\" };\r\n  nodes.push(rootNode);\r\n\r\n  let nodeId = 1;\r\n\r\n  const traverse = (data, parentId = 0, linkName = \"\") => {\r\n    if (typeof data === \"object\" && data !== null) {\r\n      const hasType = data[\"@type\"];\r\n      const currentId = hasType ? nodeId++ : parentId;\r\n      if (hasType) {\r\n        nodes.push({\r\n          id: currentId,\r\n          name: data[\"@type\"] || \"Object\",\r\n        });\r\n\r\n        links.push({\r\n          source: parentId,\r\n          target: currentId,\r\n          linkName: linkName,\r\n        });\r\n      }\r\n\r\n      Object.entries(data).forEach(([key, value]) => {\r\n        if (key !== \"@type\") {\r\n          traverse(value, currentId, key);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  schemas.forEach((schema) => traverse(schema));\r\n  return { nodes, links };\r\n};\r\n","import * as d3 from \"d3\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { fetchSchemas } from \"../utils/fetchSchema\";\r\nimport { renderGraph } from \"../utils/renderGraph\";\r\nimport { downloadGraphAsPng } from \"../utils/downloadGraphAsPng\";\r\nimport { buildGraphData } from \"../utils/buildGraph\";\r\nimport \"./Schema.css\";\r\n\r\nconst Schema = () => {\r\n  const [schemas, setSchemas] = useState([]);\r\n  const [linkDistance, setLinkDistance] = useState(70);\r\n  const [fontSize, setFontSize] = useState(12);\r\n  const [nodeSize, setNodeSize] = useState(8);\r\n  const [isDragEnabled, setIsDragEnabled] = useState(true);\r\n  const graphRef = useRef(null);\r\n  const simulationRef = useRef(null);\r\n\r\n  // Fetch schema data\r\n  useEffect(() => {\r\n    fetchSchemas(setSchemas);\r\n  }, []);\r\n\r\n  // Render graph when schemas change\r\n  useEffect(() => {\r\n    if (schemas.length > 0) {\r\n      const graphData = buildGraphData(schemas);\r\n      renderGraph(\r\n        graphRef,\r\n        graphData,\r\n        linkDistance,\r\n        fontSize,\r\n        nodeSize,\r\n        isDragEnabled,\r\n        simulationRef,\r\n        1000,\r\n        1000\r\n      );\r\n      console.log(graphRef.current);\r\n    }\r\n  }, [schemas]);\r\n\r\n  // Update link distance\r\n  useEffect(() => {\r\n    if (simulationRef.current) {\r\n      const linkForce = simulationRef.current.force(\"link\");\r\n      if (linkForce) {\r\n        linkForce.distance(linkDistance);\r\n        simulationRef.current.alpha(1).restart();\r\n      }\r\n    }\r\n  }, [linkDistance]);\r\n\r\n  // Update font size\r\n  useEffect(() => {\r\n    d3.select(graphRef.current)\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", `${fontSize}px`);\r\n  }, [fontSize]);\r\n\r\n  // Update node size\r\n  useEffect(() => {\r\n    d3.select(graphRef.current).selectAll(\"circle\").attr(\"r\", nodeSize);\r\n  }, [nodeSize]);\r\n\r\n  // Update drag functionality\r\n  useEffect(() => {\r\n    if (simulationRef.current && graphRef.current) {\r\n      const nodes = d3.select(graphRef.current).selectAll(\"circle\");\r\n      if (isDragEnabled) {\r\n        nodes.call(drag(simulationRef.current));\r\n      } else {\r\n        nodes.on(\".drag\", null);\r\n      }\r\n    }\r\n  }, [isDragEnabled]);\r\n\r\n  const drag = (simulation) => {\r\n    function dragstarted(event) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      event.subject.fx = event.subject.x;\r\n      event.subject.fy = event.subject.y;\r\n    }\r\n\r\n    function dragged(event) {\r\n      event.subject.fx = event.x;\r\n      event.subject.fy = event.y;\r\n    }\r\n\r\n    function dragended(event) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      event.subject.fx = null;\r\n      event.subject.fy = null;\r\n    }\r\n\r\n    return d3\r\n      .drag()\r\n      .on(\"start\", dragstarted)\r\n      .on(\"drag\", dragged)\r\n      .on(\"end\", dragended);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {schemas.length > 0 && (\r\n        <div>\r\n          <div className=\"container\">\r\n            <h2>Schema Visualizer</h2>\r\n            <button\r\n              onClick={() => setIsDragEnabled((prev) => !prev)}\r\n              id=\"pause-play\"\r\n            >\r\n              {isDragEnabled ? (\r\n                <img src=\"image/pause.svg\" alt=\"Pause button\" />\r\n              ) : (\r\n                <img src=\"image/play.svg\" alt=\"Play button\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              onClick={() => downloadGraphAsPng(graphRef)}\r\n              id=\"download-btn\"\r\n            >\r\n              <img src=\"image/download.svg\" alt=\"Download Graph\" />\r\n            </button>\r\n\r\n            <div className=\"controls\">\r\n              <div className=\"control-item\">\r\n                <label>Font Size</label>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"8\"\r\n                  max=\"30\"\r\n                  value={fontSize}\r\n                  onChange={(e) => setFontSize(Number(e.target.value))}\r\n                />\r\n                <span>{fontSize}</span>\r\n              </div>\r\n              <div className=\"control-item\">\r\n                <label>Node Size</label>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"5\"\r\n                  max=\"50\"\r\n                  value={nodeSize}\r\n                  onChange={(e) => setNodeSize(Number(e.target.value))}\r\n                />\r\n                <span>{nodeSize}</span>\r\n              </div>\r\n              <div className=\"control-item\">\r\n                <label>Link Distance</label>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"20\"\r\n                  max=\"200\"\r\n                  value={linkDistance}\r\n                  onChange={(e) => setLinkDistance(Number(e.target.value))}\r\n                />\r\n                <span>{linkDistance}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div ref={graphRef} className=\"graph-container\"></div>\r\n        </div>\r\n      )}\r\n      {schemas.length === 0 && (\r\n        <div className=\"no-items\">\r\n          <p>No Schema Found on this Website.</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Schema;\r\n\r\n// Without D3 Framework.\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"./Schema.css\";\r\n\r\n// const SchemaViewer = () => {\r\n//   const [schemas, setSchemas] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchSchemas = async () => {\r\n//       const [tab] = await chrome.tabs.query({\r\n//         active: true,\r\n//         currentWindow: true,\r\n//       });\r\n//       const tabId = tab.id;\r\n\r\n//       chrome.scripting.executeScript(\r\n//         {\r\n//           target: { tabId },\r\n//           func: () => {\r\n//             const schemaScripts = Array.from(\r\n//               document.querySelectorAll('script[type=\"application/ld+json\"]')\r\n//             );\r\n//             return schemaScripts\r\n//               .map((script) => {\r\n//                 try {\r\n//                   return JSON.parse(script.innerText);\r\n//                 } catch {\r\n//                   return null;\r\n//                 }\r\n//               })\r\n//               .filter(Boolean);\r\n//           },\r\n//         },\r\n//         ([result]) => {\r\n//           setSchemas(result.result || []);\r\n//         }\r\n//       );\r\n//     };\r\n\r\n//     fetchSchemas();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Schema</h2>\r\n//       <p className=\"schema-description\">\r\n//         <strong>\r\n//           Schema Markup is a semantic vocabulary of tags that helps search\r\n//           engines understand your webpage and better represent it in the search\r\n//           results.\r\n//         </strong>\r\n//       </p>\r\n//       <div className=\"schema-container\">\r\n//         {schemas.length > 0 ? (\r\n//           schemas.map((schema, index) => (\r\n//             <SchemaItem\r\n//               key={index}\r\n//               data={schema}\r\n//               title={schema[\"@type\"] || `Schema ${index + 1}`}\r\n//             />\r\n//           ))\r\n//         ) : (\r\n//           <div className=\"no-items\" id=\"no-schema\">\r\n//             <p>No Schema Found on this Website.</p>\r\n//             <img src=\"notfound.svg\" alt=\"Not Found\" />\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const SchemaItem = ({ data, title }) => {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n\r\n//   const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n//   const renderValue = (key, value) => {\r\n//     if (typeof value === \"object\" && value !== null) {\r\n//       return <SchemaItem data={value} title={value[\"@type\"] || key} />;\r\n//     }\r\n//     return (\r\n//       <div className=\"schema-value\">\r\n//         <strong>{key}:</strong> {value}\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"schema-item\">\r\n//       <div className=\"schema-header\" onClick={toggleOpen}>\r\n//         <span>{title}</span>\r\n//         <button>{isOpen ? \"▲\" : \"▼\"}</button>\r\n//       </div>\r\n//       {isOpen && (\r\n//         <div className=\"schema-content\">\r\n//           {Object.entries(data).map(([key, value], index) => (\r\n//             <div key={index} className=\"schema-entry\">\r\n//               {renderValue(key, value)}\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SchemaViewer;\r\n","// import { jsPDF } from \"jspdf\";\r\nexport const downloadGraphAsPng = (graphRef) => {\r\n  // const doc = new jsPDF();\r\n\r\n  // Get the SVG element and convert it to an image URL (PNG)\r\n  const svgElement = graphRef.current.querySelector(\"svg\");\r\n  if (!svgElement) return;\r\n\r\n  // const imageUrl = svgElement.toDataURL(\"image/png\");\r\n\r\n  // Add the image to the PDF document (you can adjust the coordinates and dimensions)\r\n\r\n  // const svgElement = graphRef.current.querySelector(\"svg\");\r\n  // if (!svgElement) return;\r\n\r\n  const clonedSvg = svgElement.cloneNode(true);\r\n  const bbox = svgElement.getBBox();\r\n  const width = bbox.width;\r\n  const height = bbox.height;\r\n\r\n  clonedSvg.setAttribute(\"viewBox\", `${bbox.x} ${bbox.y} ${width} ${height}`);\r\n  clonedSvg.setAttribute(\"width\", width);\r\n  clonedSvg.setAttribute(\"height\", height);\r\n\r\n  const serializer = new XMLSerializer();\r\n  const svgString = serializer.serializeToString(clonedSvg);\r\n  const blob = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\r\n  const url = URL.createObjectURL(blob);\r\n  const img = new Image();\r\n\r\n  img.onload = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleFactor = 4;\r\n    canvas.width = width * scaleFactor;\r\n    canvas.height = height * scaleFactor;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.drawImage(img, 0, 0, width * scaleFactor, height * scaleFactor);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"schema-graph.png\";\r\n    link.href = canvas.toDataURL(\"image/png\");\r\n    link.click();\r\n\r\n    URL.revokeObjectURL(url);\r\n    // doc.text(\"Schema Structure\", 105, 10, { align: \"center\" });\r\n    // doc.addImage(link.href, \"PNG\", 30, 70, 180, 180); // Adjust the image size and position here\r\n\r\n    // Save the PDF with the desired filename\r\n    // doc.save(\"schema-graph.pdf\");\r\n  };\r\n\r\n  img.onerror = () => {\r\n    console.error(\"Error occurred while loading the image for download.\");\r\n  };\r\n\r\n  img.src = url;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./PageSpeed.css\";\r\n\r\nconst PageSpeedTest = () => {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [desktopResult, setDesktopResult] = useState(null);\r\n  const [mobileResult, setMobileResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const getActiveTabUrl = async () => {\r\n    const [tab] = await chrome.tabs.query({\r\n      active: true,\r\n      currentWindow: true,\r\n    });\r\n    return tab.url;\r\n  };\r\n\r\n  const API_KEY = \"AIzaSyCdskX2l4jTGn8RXH9zjDqnV31aHdhxTEU\";\r\n\r\n  const fetchPageSpeedData = async (url, strategy) => {\r\n    const endpoint = `https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=${url}&strategy=${strategy}&key=${API_KEY}`;\r\n    const response = await fetch(endpoint);\r\n    if (!response.ok) throw new Error(\"Failed to fetch PageSpeed data\");\r\n    return response.json();\r\n  };\r\n\r\n  const runTest = async () => {\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const activeUrl = await getActiveTabUrl();\r\n      setUrl(activeUrl);\r\n\r\n      const [desktop, mobile] = await Promise.all([\r\n        fetchPageSpeedData(activeUrl, \"desktop\"),\r\n        fetchPageSpeedData(activeUrl, \"mobile\"),\r\n      ]);\r\n\r\n      setDesktopResult(desktop.lighthouseResult);\r\n      setMobileResult(mobile.lighthouseResult);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getScoreColor = (score) => {\r\n    if (score >= 85) return \"#4caf50\";\r\n    if (score >= 50) return \"#ffc107\";\r\n    return \"#f44336\";\r\n  };\r\n\r\n  const renderMetrics = (result) => {\r\n    const audits = result.audits;\r\n    return (\r\n      <div className=\"metrics\">\r\n        <p>\r\n          <strong>First Contentful Paint:</strong>{\" \"}\r\n          {audits[\"first-contentful-paint\"].displayValue}\r\n        </p>\r\n        <p>\r\n          <strong>Largest Contentful Paint:</strong>{\" \"}\r\n          {audits[\"largest-contentful-paint\"].displayValue}\r\n        </p>\r\n        <p>\r\n          <strong>Total Blocking Time:</strong>{\" \"}\r\n          {audits[\"total-blocking-time\"].displayValue}\r\n        </p>\r\n        <p>\r\n          <strong>Cumulative Layout Shift:</strong>{\" \"}\r\n          {audits[\"cumulative-layout-shift\"].displayValue}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderScoreCard = (result, strategy) => {\r\n    const score = result.categories.performance.score * 100;\r\n    const scoreColor = getScoreColor(score);\r\n\r\n    return (\r\n      <div className=\"score-card\">\r\n        <div\r\n          className=\"score-circle\"\r\n          style={{\r\n            backgroundColor: `white`,\r\n            backgroundImage: `conic-gradient(${scoreColor} ${score}%, #f3f3f3 ${score}%)`,\r\n          }}\r\n        >\r\n          <span>{score}</span>\r\n        </div>\r\n        <p className=\"circle-label\">{strategy} PageSpeed</p>\r\n        <p className=\"url-text\">\r\n          Google PageSpeed Insights for <br />{\" \"}\r\n          <span className=\"url\">{url}</span>\r\n        </p>\r\n        {renderMetrics(result)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagespeed-container\">\r\n      <h2>Page Speed Test</h2>\r\n      <button onClick={runTest} disabled={isLoading}>\r\n        {isLoading ? \"Running Test...\" : \"Run Speed Test\"}\r\n      </button>\r\n      {isLoading && (\r\n        <div className=\"active-tab-container\">\r\n          <p>It Might Take a While to Process</p>\r\n          <img src=\"image/loading.gif\" alt=\"Loading\" className=\"loading\" />\r\n        </div>\r\n      )}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <div className=\"score-container\">\r\n        {mobileResult && renderScoreCard(mobileResult, \"Mobile\")}\r\n        {desktopResult && renderScoreCard(desktopResult, \"Desktop\")}\r\n      </div>\r\n\r\n      {desktopResult && mobileResult && (\r\n        <div className=\"legend\">\r\n          <div>\r\n            <span className=\"legend-color green\"></span>\r\n            <strong>Good</strong>\r\n          </div>\r\n          <div>\r\n            <span className=\"legend-color yellow\"></span>\r\n            <strong>Can Be Better</strong>\r\n          </div>\r\n          <div>\r\n            <span className=\"legend-color red\"></span>\r\n            <strong>Need to Be Updated</strong>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageSpeedTest;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer-content\">\r\n        <p className=\"footer-text\">\r\n          For better results, visualization, and automated SEO audit\r\n          <br /> of your website, visit Digispot-AI.\r\n        </p>\r\n        <button\r\n          className=\"footer-button\"\r\n          onClick={() => window.open(\"https://digispot.ai\")}\r\n        >\r\n          Digispot-AI\r\n        </button>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const borderAndFooter = (doc, pageNumber) => {\r\n  const pageWidth = doc.internal.pageSize.width;\r\n  const pageHeight = doc.internal.pageSize.height;\r\n\r\n  // Draws the border\r\n  doc.rect(10, 10, pageWidth - 20, pageHeight - 20);\r\n  doc.rect(8, 8, pageWidth - 16, pageHeight - 16);\r\n\r\n  const watermarkText = \"Digispot.AI\";\r\n\r\n  doc.setFontSize(70);\r\n  doc.setTextColor(220, 220, 220);\r\n\r\n  doc.text(watermarkText, pageWidth / 2, pageHeight / 2, {\r\n    align: \"center\",\r\n    angle: 45,\r\n  });\r\n\r\n  // Add footer text and page number\r\n  doc.setFontSize(10);\r\n  doc.setTextColor(222, 149, 149);\r\n  doc.setFont(undefined, \"bold\");\r\n  const footertext = \"Report by Digispot.AI\";\r\n  doc.text(footertext, pageWidth - 20, pageHeight - 3, {\r\n    align: \"right\",\r\n  });\r\n  doc.text(`${pageNumber}`, pageWidth / 2, pageHeight - 3, { align: \"center\" });\r\n  doc.setTextColor(0, 0, 0);\r\n  doc.setFont(undefined, \"normal\");\r\n\r\n  return pageNumber + 1;\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { fetchWebsiteInfo } from \"../../tabs/utils/fetchWebsiteInfo\";\r\nimport { fetchLinks } from \"../../tabs/utils/fetchLinks\";\r\nimport { fetchImages } from \"../../tabs/utils/fetchImages\";\r\nimport { fetchHeaders } from \"../../tabs/utils/fetchHeaders\";\r\nimport { fetchSchemas } from \"../../tabs/utils/fetchSchema\";\r\nimport { renderGraph } from \"../../tabs/utils/renderGraph\";\r\nimport { buildGraphData } from \"../../tabs/utils/buildGraph\";\r\nimport { downloadGraphAsPdf } from \"./utils/downloadGraphAspdf\";\r\nimport { addMetaLinksDetails } from \"./utils/addMetaLinksDetails\";\r\nimport { addLinksDetails } from \"./utils/addLinksDetails\";\r\nimport { addImageDetails } from \"./utils/addImageDetails\";\r\nimport { addHeaderDetails } from \"./utils/addHeaderDetails\";\r\nimport \"./Download.css\";\r\n\r\nconst DownloadPdf = () => {\r\n  const [info, setInfo] = useState({});\r\n  const [links, setLinks] = useState({});\r\n  const [images, setImages] = useState({});\r\n  const [headers, setHeaders] = useState({ headers: [], counts: {} });\r\n  const [schemas, setSchemas] = useState([]);\r\n  const [isDragEnabled, setIsDragEnabled] = useState(true);\r\n  const graphRef = useRef(null);\r\n  const simulationRef = useRef(null);\r\n  const [loading, setLoading] = useState(false); // Track loading state\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({\r\n          active: true,\r\n          currentWindow: true,\r\n        });\r\n        const tabId = tab.id;\r\n\r\n        const [websiteInfo, linksData, imagesData, headersData] =\r\n          await Promise.all([\r\n            fetchWebsiteInfo(),\r\n            fetchLinks(),\r\n            fetchImages(tabId),\r\n            fetchHeaders(tabId),\r\n            fetchSchemas(setSchemas),\r\n          ]);\r\n        setInfo(websiteInfo);\r\n        setLinks(linksData);\r\n        setImages(imagesData);\r\n        setHeaders(headersData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (schemas && Array.isArray(schemas) && schemas.length > 0) {\r\n      const graphData = buildGraphData(schemas);\r\n      renderGraph(\r\n        graphRef,\r\n        graphData,\r\n        100,\r\n        12,\r\n        10,\r\n        isDragEnabled,\r\n        simulationRef,\r\n        40,\r\n        40\r\n      );\r\n    }\r\n  }, [schemas]);\r\n\r\n  const downloadPdf = async () => {\r\n    setLoading(true); // Show loader when downloading starts\r\n    const jsPDF = (await import(\"jspdf\")).jsPDF;\r\n    const doc = new jsPDF();\r\n\r\n    let yPosition = 30;\r\n    let pageNumber = 1;\r\n    //doc.save(\"Schema.pdf\");\r\n\r\n    [yPosition, pageNumber] = addMetaLinksDetails(\r\n      doc,\r\n      info,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n\r\n    yPosition += 10;\r\n    [yPosition, pageNumber] = addLinksDetails(\r\n      doc,\r\n      links,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n\r\n    yPosition += 10;\r\n    [yPosition, pageNumber] = addImageDetails(\r\n      doc,\r\n      images,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n\r\n    yPosition += 10;\r\n    [yPosition, pageNumber] = addHeaderDetails(\r\n      doc,\r\n      headers,\r\n      yPosition,\r\n      pageNumber\r\n    );\r\n\r\n    yPosition += 10;\r\n    setLoading(false);\r\n    downloadGraphAsPdf(doc, graphRef, yPosition, info.title, pageNumber);\r\n    // Hide loader once the download is complete\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabs\" id=\"downloadpdf\">\r\n      <div ref={graphRef} className=\"noref\"></div>\r\n      <button className=\"tab-button\" onClick={downloadPdf} id=\"downloadbutton\">\r\n        Download as PDF\r\n      </button>\r\n      <div className=\"noref\">\r\n        {loading && <img src=\"image/loading.gif\" alt=\"Loader\" />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadPdf;\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\nexport const addMetaLinksDetails = (doc, info, startPosition, pageNumber) => {\r\n  const metaLinks = [\r\n    { label: \"Title\", value: info.title },\r\n    { label: \"Description\", value: info.description },\r\n    { label: \"Canonical\", value: info.canonical },\r\n    { label: \"URL\", value: info.url },\r\n    { label: \"Language\", value: info.lang },\r\n    { label: \"Robots Meta\", value: info.robots },\r\n    { label: \"X-Robots Meta\", value: info.xRobots },\r\n  ];\r\n\r\n  // Title of the Report\r\n  pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n  doc.setFontSize(16);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.text(\"Website SEO Report\", 105, 20, { align: \"center\" });\r\n\r\n  doc.setFontSize(14);\r\n  doc.setFont(undefined, \"normal\");\r\n  doc.text(\"Meta Links Data\", 20, startPosition);\r\n  let yPosition = startPosition + 10;\r\n\r\n  metaLinks.forEach((item) => {\r\n    if (yPosition > 280) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n      yPosition = 20;\r\n    }\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${item.label}`, 20, yPosition);\r\n    doc.text(\":\", 50, yPosition);\r\n    doc.setFontSize(10);\r\n    const pageWidth = 140;\r\n    const wrappedText = doc.splitTextToSize(\r\n      item.value || \"Not Available\",\r\n      pageWidth\r\n    );\r\n\r\n    wrappedText.forEach((line) => {\r\n      if (yPosition > 280) {\r\n        pageNumber++;\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n        yPosition = 20;\r\n      }\r\n      doc.text(line, 55, yPosition);\r\n      yPosition += 7;\r\n    });\r\n  });\r\n\r\n  return [yPosition, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addLinksDetails = (doc, links, startPosition, pageNumber) => {\r\n  const categories = [\"internal\", \"external\"];\r\n\r\n  let yPosition = startPosition;\r\n\r\n  // Draw border and footer for the first page\r\n  //pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Links Summary\", 20, yPosition);\r\n  yPosition += 10;\r\n\r\n  // Summary Section\r\n  const linkCounts = [\r\n    { label: \"Total Links\", value: links.total?.length || 0 },\r\n    { label: \"Internal Links\", value: links.internal?.length || 0 },\r\n    { label: \"External Links\", value: links.external?.length || 0 },\r\n    { label: \"Unique Links\", value: links.unique?.length || 0 },\r\n  ];\r\n\r\n  linkCounts.forEach(({ label, value }) => {\r\n    if (yPosition + 7 > 270) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n      yPosition = 20;\r\n    }\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${label}`, 20, yPosition);\r\n    doc.text(\":\", 50, yPosition);\r\n    doc.setFontSize(10);\r\n    doc.text(`${value}`, 60, yPosition);\r\n    yPosition += 7;\r\n  });\r\n\r\n  yPosition += 10;\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Links Information by Category\", 20, yPosition);\r\n\r\n  categories.forEach((category) => {\r\n    if (yPosition + 17 > 270) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber); // Use the imported function\r\n      yPosition = 20;\r\n    }\r\n\r\n    yPosition += 10;\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(\r\n      `${category.charAt(0).toUpperCase() + category.slice(1)} Links`,\r\n      20,\r\n      yPosition\r\n    );\r\n\r\n    yPosition += 10;\r\n\r\n    // Table Headers\r\n    doc.setFontSize(10);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.setFont(undefined, \"bold\");\r\n    doc.rect(20, yPosition - 5, 12, 7); // Index header border with padding\r\n    doc.rect(32, yPosition - 5, 88, 7); // URL header border\r\n    doc.rect(120, yPosition - 5, 70, 7); // Title header border\r\n    doc.text(\"Index\", 22, yPosition);\r\n    doc.text(\"URL\", 34, yPosition);\r\n    doc.text(\"Title\", 122, yPosition);\r\n    yPosition += 7;\r\n    doc.setFont(undefined, \"normal\");\r\n\r\n    links[category]?.forEach(({ href, title }, index) => {\r\n      const urlText = doc.splitTextToSize(href.trim(), 85);\r\n      const titleText = doc.splitTextToSize(title?.trim() || \"No title\", 68);\r\n\r\n      const rowHeight = Math.max(urlText.length, titleText.length) * 7;\r\n\r\n      if (yPosition + rowHeight > 285) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = 20;\r\n        doc.setFontSize(10);\r\n        doc.setFont(undefined, \"bold\");\r\n        doc.rect(20, yPosition - 5, 12, 7); // Index header border with padding\r\n        doc.rect(32, yPosition - 5, 88, 7); // URL header border\r\n        doc.rect(120, yPosition - 5, 70, 7); // Title header border\r\n        doc.text(\"Index\", 22, yPosition);\r\n        doc.text(\"URL\", 34, yPosition);\r\n        doc.text(\"Title\", 122, yPosition);\r\n        yPosition += 7;\r\n        doc.setFont(undefined, \"normal\");\r\n      }\r\n\r\n      doc.rect(20, yPosition - 5, 12, rowHeight); // Index border with padding\r\n      doc.rect(32, yPosition - 5, 88, rowHeight); // URL border\r\n      doc.rect(120, yPosition - 5, 70, rowHeight); // Title border\r\n\r\n      doc.text(`${index + 1}`, 22, yPosition);\r\n\r\n      urlText.forEach((line, lineIndex) => {\r\n        doc.text(line, 34, yPosition + lineIndex * 7);\r\n      });\r\n\r\n      titleText.forEach((line, lineIndex) => {\r\n        doc.text(line, 122, yPosition + lineIndex * 7);\r\n      });\r\n\r\n      yPosition += rowHeight;\r\n    });\r\n\r\n    if (!links[category]?.length) {\r\n      if (yPosition > 270) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = 20;\r\n      }\r\n      doc.setFontSize(10);\r\n      doc.text(\"No links available.\", 20, yPosition);\r\n      yPosition += 10;\r\n    }\r\n  });\r\n\r\n  return [yPosition, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addImageDetails = (doc, images, startPosition, pageNumber) => {\r\n  let yPosition = startPosition + 10;\r\n  const leftMargin = 15;\r\n  const cellPadding = 2;\r\n  const columnWidths = [15, 85, 50, 30]; // Column widths for Index, URL, ALT, and Description\r\n  const rowPadding = 2;\r\n  const pageHeight = 290;\r\n\r\n  // Initial border and footer for the first page\r\n  // pageNumber = borderAndFooter(doc, pageNumber);\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Image Information\", leftMargin, yPosition);\r\n  yPosition += 10;\r\n\r\n  const imageCounts = [\r\n    { label: \"Total Images\", value: images.total?.length || 0 },\r\n    { label: \"Without ALT\", value: images.noAlt?.length || 0 },\r\n    { label: \"Without Desc\", value: images.noLongDesc?.length || 0 },\r\n    { label: \"Without SRC\", value: images.noSrc?.length || 0 },\r\n  ];\r\n\r\n  imageCounts.forEach(({ label, value }) => {\r\n    if (yPosition > pageHeight - 20) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber); // Add border and footer\r\n      yPosition = 20; // Reset yPosition with top padding\r\n    }\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${label}`, leftMargin, yPosition);\r\n    doc.text(\":\", leftMargin + 30, yPosition);\r\n    doc.setFontSize(10);\r\n    doc.text(`${value}`, leftMargin + 40, yPosition);\r\n    yPosition += 7;\r\n  });\r\n\r\n  yPosition += 10;\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Image Information by Category\", leftMargin, yPosition);\r\n  yPosition += 10;\r\n\r\n  const categories = [\r\n    {\r\n      label: \"Without ALT\",\r\n      data: images.noAlt || [],\r\n    },\r\n    {\r\n      label: \"Without SRC\",\r\n      data: images.noSrc || [],\r\n    },\r\n    {\r\n      label: \"Without Description\",\r\n      data: images.noLongDesc || [],\r\n      specialCondition:\r\n        (images.noLongDesc?.length || 0) === (images.total?.length || 0),\r\n      specialMessage: \"All links in the website have no Description.\",\r\n    },\r\n  ];\r\n\r\n  categories.forEach(({ label, data, specialCondition, specialMessage }) => {\r\n    if (yPosition > pageHeight - 20) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber); // Add border and footer\r\n      yPosition = 20; // Reset yPosition with top padding\r\n    }\r\n\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(label, leftMargin, yPosition);\r\n    yPosition += 7;\r\n\r\n    if (specialCondition) {\r\n      doc.setFontSize(14);\r\n      doc.setFont(undefined, \"bold\");\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.text(specialMessage, leftMargin + 10, yPosition);\r\n      doc.setFont(undefined, \"normal\");\r\n      yPosition += 15; // Add space after the message\r\n      return;\r\n    }\r\n\r\n    if (data.length === 0) {\r\n      doc.setFontSize(10);\r\n      doc.text(\"No images in this category.\", leftMargin + 10, yPosition);\r\n      yPosition += 15;\r\n      return;\r\n    }\r\n\r\n    doc.setFont(undefined, \"bold\");\r\n    doc.setFontSize(10);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(\"Index\", leftMargin + cellPadding, yPosition + rowPadding + 2);\r\n    doc.text(\r\n      \"URL\",\r\n      leftMargin + columnWidths[0] + cellPadding,\r\n      yPosition + rowPadding + 2\r\n    );\r\n    doc.text(\r\n      \"ALT\",\r\n      leftMargin + columnWidths[0] + columnWidths[1] + cellPadding,\r\n      yPosition + rowPadding + 2\r\n    );\r\n    doc.text(\r\n      \"Description\",\r\n      leftMargin +\r\n        columnWidths[0] +\r\n        columnWidths[1] +\r\n        columnWidths[2] +\r\n        cellPadding,\r\n      yPosition + rowPadding + 2\r\n    );\r\n\r\n    // Draw the header border around each column\r\n    doc.rect(leftMargin, yPosition, columnWidths[0], rowPadding + 5); // Index\r\n    doc.rect(\r\n      leftMargin + columnWidths[0],\r\n      yPosition,\r\n      columnWidths[1],\r\n      rowPadding + 5\r\n    );\r\n    doc.rect(\r\n      leftMargin + columnWidths[0] + columnWidths[1],\r\n      yPosition,\r\n      columnWidths[2],\r\n      rowPadding + 5\r\n    );\r\n    doc.rect(\r\n      leftMargin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n      yPosition,\r\n      columnWidths[3],\r\n      rowPadding + 5\r\n    );\r\n    yPosition += rowPadding + 5;\r\n\r\n    doc.setFont(undefined, \"normal\");\r\n    data.forEach(({ src, alt, longDesc }, index) => {\r\n      const rowStartY = yPosition;\r\n\r\n      const srcText = doc.splitTextToSize(\r\n        src || \"No SRC\",\r\n        columnWidths[1] - cellPadding * 2\r\n      );\r\n      const altText = doc.splitTextToSize(\r\n        alt || \"No ALT\",\r\n        columnWidths[2] - cellPadding * 2\r\n      );\r\n      const descText = doc.splitTextToSize(\r\n        longDesc || \"No Desc\",\r\n        columnWidths[3] - cellPadding * 2\r\n      );\r\n\r\n      const maxLines = Math.max(\r\n        srcText.length,\r\n        altText.length,\r\n        descText.length\r\n      );\r\n      const rowHeightAdjusted = maxLines * 5 + rowPadding; // Adjust row height dynamically\r\n\r\n      if (yPosition + rowHeightAdjusted > pageHeight - 20) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber); // Add border and footer\r\n        yPosition = 20; // Reset yPosition with top padding\r\n      }\r\n\r\n      // Draw borders for each column in the row\r\n      doc.rect(leftMargin, yPosition, columnWidths[0], rowHeightAdjusted); // Index\r\n      doc.rect(\r\n        leftMargin + columnWidths[0],\r\n        yPosition,\r\n        columnWidths[1],\r\n        rowHeightAdjusted\r\n      ); // URL\r\n      doc.rect(\r\n        leftMargin + columnWidths[0] + columnWidths[1],\r\n        yPosition,\r\n        columnWidths[2],\r\n        rowHeightAdjusted\r\n      ); // ALT\r\n      doc.rect(\r\n        leftMargin + columnWidths[0] + columnWidths[1] + columnWidths[2],\r\n        yPosition,\r\n        columnWidths[3],\r\n        rowHeightAdjusted\r\n      ); // Description\r\n\r\n      // Add content to the table\r\n      doc.text(\r\n        `${index + 1}`,\r\n        leftMargin + cellPadding,\r\n        yPosition + rowPadding + 2\r\n      );\r\n\r\n      srcText.forEach((line, lineIndex) => {\r\n        doc.text(\r\n          line,\r\n          leftMargin + columnWidths[0] + cellPadding,\r\n          yPosition + rowPadding + 2 + lineIndex * 5\r\n        );\r\n      });\r\n\r\n      altText.forEach((line, lineIndex) => {\r\n        doc.text(\r\n          line,\r\n          leftMargin + columnWidths[0] + columnWidths[1] + cellPadding,\r\n          yPosition + rowPadding + 2 + lineIndex * 5\r\n        );\r\n      });\r\n\r\n      descText.forEach((line, lineIndex) => {\r\n        doc.text(\r\n          line,\r\n          leftMargin +\r\n            columnWidths[0] +\r\n            columnWidths[1] +\r\n            columnWidths[2] +\r\n            cellPadding,\r\n          yPosition + rowPadding + 2 + lineIndex * 5\r\n        );\r\n      });\r\n\r\n      yPosition += rowHeightAdjusted;\r\n    });\r\n\r\n    // Add spacing after each table\r\n    yPosition += 15;\r\n  });\r\n\r\n  return [yPosition, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const addHeaderDetails = (\r\n  doc,\r\n  headersData,\r\n  startPosition,\r\n  pageNumber\r\n) => {\r\n  const marginTop = 20; // Top margin\r\n  const marginBottom = 20; // Bottom margin\r\n  const marginleft = 10;\r\n  const pageHeight = doc.internal.pageSize.height; // Page height\r\n  let yPosition = startPosition;\r\n\r\n  // Ensure startPosition is within the margin\r\n  yPosition = Math.max(yPosition, marginTop);\r\n\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Headers Information\", 15, yPosition);\r\n  yPosition += 10;\r\n\r\n  const headerCounts = headersData.counts;\r\n\r\n  // Add header counts\r\n  Object.entries(headerCounts).forEach(([header, count]) => {\r\n    if (yPosition > pageHeight - marginBottom) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = marginTop;\r\n    }\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${header.toUpperCase()}:`, 15, yPosition);\r\n    doc.setFontSize(10);\r\n    doc.text(`${count}`, 40, yPosition);\r\n    yPosition += 7;\r\n  });\r\n\r\n  yPosition += 10;\r\n\r\n  // Add detailed header content with hierarchy\r\n  doc.setFontSize(14);\r\n  doc.setTextColor(0, 123, 255);\r\n  doc.text(\"Header Details\", 15, yPosition);\r\n  yPosition += 10;\r\n\r\n  headersData.headers.forEach(({ tag, text }, index) => {\r\n    if (yPosition > pageHeight - marginBottom) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      yPosition = marginTop;\r\n    }\r\n\r\n    // Define font size based on header level\r\n    const fontSizeMap = {\r\n      h1: 18,\r\n      h2: 14,\r\n      h3: 12,\r\n      h4: 11,\r\n      h5: 10,\r\n      h6: 9,\r\n    };\r\n    const fontSize = fontSizeMap[tag] || 10;\r\n\r\n    doc.setFontSize(fontSize);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(\r\n      `${tag.toUpperCase()}:`,\r\n      (28 - fontSize) * 1.5 + marginleft,\r\n      yPosition\r\n    );\r\n\r\n    const wrappedText = doc.splitTextToSize(text || \"No Content\", 160);\r\n    wrappedText.forEach((line) => {\r\n      if (yPosition > pageHeight - marginBottom) {\r\n        doc.addPage();\r\n        pageNumber = borderAndFooter(doc, pageNumber);\r\n        yPosition = marginTop;\r\n      }\r\n      doc.text(line, (28 - fontSize) * 1.5 + marginleft + 10, yPosition);\r\n      yPosition += 7;\r\n    });\r\n    yPosition += 5;\r\n  });\r\n\r\n  return [yPosition, pageNumber];\r\n};\r\n","import { borderAndFooter } from \"./borderandfooter\";\r\n\r\nexport const downloadGraphAsPdf = (\r\n  doc,\r\n  graphRef,\r\n  startPosition,\r\n  title,\r\n  pageNumber\r\n) => {\r\n  // Get the SVG element and convert it to an image URL (PNG)\r\n  const svgElement = graphRef.current.querySelector(\"svg\");\r\n  if (!svgElement) {\r\n    doc.save(`SEOAudit report-${title || \"Website\"}.pdf`);\r\n    return;\r\n  }\r\n\r\n  const clonedSvg = svgElement.cloneNode(true);\r\n  const bbox = svgElement.getBBox();\r\n  const width = bbox.width;\r\n  const height = bbox.height;\r\n\r\n  clonedSvg.setAttribute(\"viewBox\", `${bbox.x} ${bbox.y} ${width} ${height}`);\r\n  clonedSvg.setAttribute(\"width\", width);\r\n  clonedSvg.setAttribute(\"height\", height);\r\n\r\n  const serializer = new XMLSerializer();\r\n  const svgString = serializer.serializeToString(clonedSvg);\r\n  const blob = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\r\n  const url = URL.createObjectURL(blob);\r\n  const img = new Image();\r\n\r\n  img.onload = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleFactor = 4;\r\n    canvas.width = width * scaleFactor;\r\n    canvas.height = height * scaleFactor;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.drawImage(img, 0, 0, width * scaleFactor, height * scaleFactor);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = canvas.toDataURL(\"image/png\");\r\n    const maxWidth = 180;\r\n    const maxHeight = 200;\r\n    let imgWidth = width;\r\n    let imgHeight = height;\r\n    const aspectRatio = imgWidth / imgHeight;\r\n\r\n    if (imgWidth > maxWidth || imgHeight > maxHeight) {\r\n      if (imgWidth / maxWidth > imgHeight / maxHeight) {\r\n        imgWidth = maxWidth;\r\n        imgHeight = maxWidth / aspectRatio;\r\n      } else {\r\n        imgHeight = maxHeight;\r\n        imgWidth = maxHeight * aspectRatio;\r\n      }\r\n    }\r\n\r\n    const pageWidth = doc.internal.pageSize.width;\r\n    const x = (pageWidth - imgWidth) / 2;\r\n    const pageHeight = doc.internal.pageSize.height;\r\n\r\n    if (startPosition + imgHeight + 30 > pageHeight) {\r\n      doc.addPage();\r\n      pageNumber = borderAndFooter(doc, pageNumber);\r\n      startPosition = 30;\r\n    } else {\r\n      startPosition += 20;\r\n    }\r\n\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(0, 123, 255);\r\n    doc.text(\"Schema Structure\", 105, startPosition - 10, { align: \"center\" });\r\n    doc.addImage(link.href, \"PNG\", x, startPosition + 10, imgWidth, imgHeight);\r\n\r\n    // Adding WaterMark on the image.\r\n    // doc.setFontSize(70);\r\n    // doc.setTextColor(220, 220, 220);\r\n\r\n    // doc.text(\"Digispot.AI\", 210.0 / 2, 297.0 / 2, {\r\n    //   align: \"center\",\r\n    //   angle: 45,\r\n    // });\r\n\r\n    URL.revokeObjectURL(url);\r\n    doc.save(`SEOAudit report-${title || \"Website\"}.pdf`);\r\n  };\r\n\r\n  img.onerror = () => {\r\n    console.error(\"Error occurred while loading the image for download.\");\r\n  };\r\n\r\n  img.src = url;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport TabNavigation from \"./components/navigator/TabNavigation\";\r\nimport Summary from \"./tabs/summary/Summary\";\r\nimport Links from \"./tabs/links/Links\";\r\nimport Images from \"./tabs/imagestab/Images\";\r\nimport Header from \"./tabs/header/Header\";\r\nimport Schema from \"./tabs/schema/Schema\";\r\nimport PageSpeedTest from \"./tabs/pagespeed/PageSpeed\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport DownloadPdf from \"./components/downloadpdf/Downloadpdf\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [activeTab, setActiveTab] = useState(\"summary\");\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <TabNavigation activeTab={activeTab} setActiveTab={setActiveTab} />\r\n      <DownloadPdf />\r\n      <div className=\"app-content\">\r\n        {activeTab === \"summary\" && <Summary />}\r\n        {activeTab === \"links\" && <Links />}\r\n        {activeTab === \"images\" && <Images />}\r\n        {activeTab === \"headers\" && <Header />}\r\n        {activeTab === \"schema\" && <Schema />}\r\n        {activeTab === \"pagespeedtest\" && <PageSpeedTest />}\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import TabNavigation from \"./components/navigator/TabNavigation\";\r\n// import Summary from \"./tabs/summary/Summary\";\r\n// import Links from \"./tabs/links/Links\";\r\n// import Images from \"./tabs/imagestab/Images\";\r\n// import Header from \"./tabs/header/Header\";\r\n// import Schema from \"./tabs/schema/Schema\";\r\n// import PageSpeedTest from \"./tabs/pagespeed/PageSpeed\";\r\n// import Footer from \"./components/footer/Footer\";\r\n// import \"./App.css\";\r\n\r\n// const App = () => {\r\n//   const [activeTab, setActiveTab] = useState(\"summary\");\r\n\r\n//   // State to track all tabs data\r\n//   const [tabData, setTabData] = useState({\r\n//     summary: null,\r\n//     links: null,\r\n//     images: null,\r\n//     headers: null,\r\n//     schema: null,\r\n//     pagespeedtest: null,\r\n//   });\r\n\r\n//   // Load data from chrome.storage when the app is initialized\r\n//   useEffect(() => {\r\n//     chrome.storage.local.get(null, (data) => {\r\n//       setTabData((prev) => ({ ...prev, ...data }));\r\n//     });\r\n//   }, []);\r\n\r\n//   // Save activeTab data to chrome.storage\r\n//   const saveTabData = (tabName, data) => {\r\n//     setTabData((prev) => ({ ...prev, [tabName]: data }));\r\n//     chrome.storage.local.set({ [tabName]: data });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"app-container\">\r\n//       <TabNavigation activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n//       <div className=\"app-content\">\r\n//         {activeTab === \"summary\" && (\r\n//           <Summary\r\n//             data={tabData.summary}\r\n//             saveData={(data) => saveTabData(\"summary\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"links\" && (\r\n//           <Links\r\n//             data={tabData.links}\r\n//             saveData={(data) => saveTabData(\"links\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"images\" && (\r\n//           <Images\r\n//             data={tabData.images}\r\n//             saveData={(data) => saveTabData(\"images\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"headers\" && (\r\n//           <Header\r\n//             data={tabData.headers}\r\n//             saveData={(data) => saveTabData(\"headers\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"schema\" && (\r\n//           <Schema\r\n//             data={tabData.schema}\r\n//             saveData={(data) => saveTabData(\"schema\", data)}\r\n//           />\r\n//         )}\r\n//         {activeTab === \"pagespeedtest\" && (\r\n//           <PageSpeedTest\r\n//             data={tabData.pagespeedtest}\r\n//             saveData={(data) => saveTabData(\"pagespeedtest\", data)}\r\n//           />\r\n//         )}\r\n//       </div>\r\n\r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\n// import \"./styles.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t887: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebsite_info_crawler\"] = self[\"webpackChunkwebsite_info_crawler\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(4170)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","_ref","activeTab","setActiveTab","React","className","onClick","fetchWebsiteInfo","async","tab","chrome","tabs","query","active","currentWindow","tabId","id","Promise","resolve","reject","scripting","executeScript","target","func","robotsMeta","document","querySelector","content","xRobotsMeta","lang","documentElement","title","description","canonical","href","robots","xRobots","url","window","location","result","Error","Summary","info","setInfo","useState","loading","setLoading","useEffect","data","error","console","getInfo","src","alt","open","fetchLinks","links","Array","from","querySelectorAll","map","a","textContent","trim","filter","link","origin","internal","startsWith","external","unique","Set","find","total","Links","setLinks","view","setView","getLinks","length","exportToCSV","csvRows","push","forEach","category","count","csvContent","join","blob","Blob","type","URL","createObjectURL","createElement","download","click","revokeObjectURL","index","key","rel","l","fetchImages","images","img","longDesc","longdesc","width","naturalWidth","height","naturalHeight","noAlt","noLongDesc","noSrc","Image","setImages","imagesData","fetchImageData","handleImageClick","imgSrc","newTab","body","innerHTML","split","pop","exportCSV","csvData","fetchHeaders","headers","header","tag","tagName","toLowerCase","text","runtime","lastError","fetchedHeaders","counts","h1","h","h2","h3","h4","h5","h6","Headers","setHeaders","headerCounts","setHeaderCounts","getHeaders","isEmpty","Object","values","every","keys","toUpperCase","fetchSchemas","script","JSON","parse","innerText","Boolean","callback","renderGraph","graphRef","linkDistance","fontSize","nodeSize","isDragEnabled","simulationRef","nodes","d3","current","selectAll","remove","svg","append","attr","call","scaleExtent","on","event","graphGroup","transform","force","d","distance","strength","linkLabel","linkName","style","node","alphaTarget","restart","subject","fx","x","fy","y","label","name","source","buildGraphData","schemas","nodeId","traverse","parentId","arguments","undefined","hasType","currentId","entries","value","schema","Schema","setSchemas","setLinkDistance","setFontSize","setNodeSize","setIsDragEnabled","useRef","graphData","log","linkForce","alpha","drag","simulation","prev","svgElement","clonedSvg","cloneNode","bbox","getBBox","setAttribute","svgString","XMLSerializer","serializeToString","onload","canvas","ctx","getContext","fillStyle","fillRect","drawImage","toDataURL","onerror","downloadGraphAsPng","min","max","onChange","e","Number","ref","PageSpeedTest","setUrl","desktopResult","setDesktopResult","mobileResult","setMobileResult","isLoading","setIsLoading","setError","fetchPageSpeedData","strategy","endpoint","response","fetch","ok","json","renderScoreCard","score","categories","performance","scoreColor","getScoreColor","backgroundColor","backgroundImage","audits","displayValue","renderMetrics","activeUrl","getActiveTabUrl","desktop","mobile","all","lighthouseResult","err","message","disabled","Footer","borderAndFooter","doc","pageNumber","pageWidth","pageSize","pageHeight","rect","setTextColor","align","angle","setFont","DownloadPdf","websiteInfo","linksData","headersData","getData","isArray","jsPDF","yPosition","addMetaLinksDetails","startPosition","metaLinks","item","addPage","splitTextToSize","line","addLinksDetails","charAt","slice","_ref2","urlText","titleText","rowHeight","Math","lineIndex","addImageDetails","leftMargin","columnWidths","specialCondition","specialMessage","rowPadding","_ref3","srcText","cellPadding","altText","descText","rowHeightAdjusted","addHeaderDetails","downloadGraphAsPdf","save","maxWidth","maxHeight","imgWidth","imgHeight","aspectRatio","addImage","App","TabNavigation","Images","Header","ReactDOM","getElementById","render","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","splice","r","getPrototypeOf","obj","t","mode","this","__esModule","then","ns","create","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}